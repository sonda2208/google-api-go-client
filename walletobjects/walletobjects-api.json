{
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/wallet_object.issuer": {
          "description": "You should never encounter this message. Please do not approve the access request."
        }
      }
    }
  },
  "basePath": "",
  "baseUrl": "https://walletobjects.googleapis.com/",
  "batchPath": "batch",
  "canonicalName": "Walletobjects",
  "description": "API for issuers to save and manage Google Wallet Objects.",
  "documentationLink": "https://developers.google.com/pay/passes",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "id": "walletobjects:v1",
  "kind": "discovery#restDescription",
  "name": "walletobjects",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "parameters": {
    "$.xgafv": {
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "default": "json",
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "type": "string"
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "prettyPrint": {
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "type": "boolean"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    }
  },
  "protocol": "rest",
  "resources": {
    "eventticketclass": {
      "methods": {
        "addmessage": {
          "description": "Adds a message to the event ticket class referenced by the given class ID.",
          "flatPath": "walletobjects/v1/eventTicketClass/{resourceId}/addMessage",
          "httpMethod": "POST",
          "id": "walletobjects.eventticketclass.addmessage",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for a class. This ID must be unique across all\nclasses from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/eventTicketClass/{resourceId}/addMessage",
          "request": {
            "$ref": "AddMessageRequest"
          },
          "response": {
            "$ref": "EventTicketClassAddMessageResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "get": {
          "description": "Returns the event ticket class with the given class ID.",
          "flatPath": "walletobjects/v1/eventTicketClass/{resourceId}",
          "httpMethod": "GET",
          "id": "walletobjects.eventticketclass.get",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for a class. This ID must be unique across all\nclasses from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/eventTicketClass/{resourceId}",
          "response": {
            "$ref": "EventTicketClass"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "insert": {
          "description": "Inserts an event ticket class with the given ID and properties.",
          "flatPath": "walletobjects/v1/eventTicketClass",
          "httpMethod": "POST",
          "id": "walletobjects.eventticketclass.insert",
          "parameterOrder": [],
          "parameters": {},
          "path": "walletobjects/v1/eventTicketClass",
          "request": {
            "$ref": "EventTicketClass"
          },
          "response": {
            "$ref": "EventTicketClass"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "list": {
          "description": "Returns a list of all event ticket classes for a given issuer ID.",
          "flatPath": "walletobjects/v1/eventTicketClass",
          "httpMethod": "GET",
          "id": "walletobjects.eventticketclass.list",
          "parameterOrder": [],
          "parameters": {
            "issuerId": {
              "description": "The ID of the issuer authorized to list classes.",
              "format": "int64",
              "location": "query",
              "type": "string"
            },
            "maxResults": {
              "description": "Identifies the max number of results returned by a list. All results\nare returned if `maxResults` isn't defined.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            },
            "token": {
              "description": "Used to get the next set of results if `maxResults` is\nspecified, but more than `maxResults` classes are available\nin a list. For example, if you have a list of 200 classes and you call\nlist with `maxResults` set to 20, list will return the first\n20 classes and a token. Call list again with `maxResults`\nset to 20 and the token to get the next 20 classes.",
              "location": "query",
              "type": "string"
            }
          },
          "path": "walletobjects/v1/eventTicketClass",
          "response": {
            "$ref": "EventTicketClassListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "patch": {
          "description": "Updates the event ticket class referenced by the given class ID. This\nmethod supports patch semantics.",
          "flatPath": "walletobjects/v1/eventTicketClass/{resourceId}",
          "httpMethod": "PATCH",
          "id": "walletobjects.eventticketclass.patch",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for a class. This ID must be unique across all\nclasses from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/eventTicketClass/{resourceId}",
          "request": {
            "$ref": "EventTicketClass"
          },
          "response": {
            "$ref": "EventTicketClass"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "update": {
          "description": "Updates the event ticket class referenced by the given class ID.",
          "flatPath": "walletobjects/v1/eventTicketClass/{resourceId}",
          "httpMethod": "PUT",
          "id": "walletobjects.eventticketclass.update",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for a class. This ID must be unique across all\nclasses from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/eventTicketClass/{resourceId}",
          "request": {
            "$ref": "EventTicketClass"
          },
          "response": {
            "$ref": "EventTicketClass"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        }
      }
    },
    "eventticketobject": {
      "methods": {
        "addmessage": {
          "description": "Adds a message to the event ticket object referenced by the given object\nID.",
          "flatPath": "walletobjects/v1/eventTicketObject/{resourceId}/addMessage",
          "httpMethod": "POST",
          "id": "walletobjects.eventticketobject.addmessage",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for an object. This ID must be unique across all\nobjects from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/eventTicketObject/{resourceId}/addMessage",
          "request": {
            "$ref": "AddMessageRequest"
          },
          "response": {
            "$ref": "EventTicketObjectAddMessageResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "get": {
          "description": "Returns the event ticket object with the given object ID.",
          "flatPath": "walletobjects/v1/eventTicketObject/{resourceId}",
          "httpMethod": "GET",
          "id": "walletobjects.eventticketobject.get",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for an object. This ID must be unique across all\nobjects from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/eventTicketObject/{resourceId}",
          "response": {
            "$ref": "EventTicketObject"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "insert": {
          "description": "Inserts an event ticket object with the given ID and properties.",
          "flatPath": "walletobjects/v1/eventTicketObject",
          "httpMethod": "POST",
          "id": "walletobjects.eventticketobject.insert",
          "parameterOrder": [],
          "parameters": {},
          "path": "walletobjects/v1/eventTicketObject",
          "request": {
            "$ref": "EventTicketObject"
          },
          "response": {
            "$ref": "EventTicketObject"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "list": {
          "description": "Returns a list of all event ticket objects for a given issuer ID.",
          "flatPath": "walletobjects/v1/eventTicketObject",
          "httpMethod": "GET",
          "id": "walletobjects.eventticketobject.list",
          "parameterOrder": [],
          "parameters": {
            "classId": {
              "description": "The ID of the class whose objects will be listed.",
              "location": "query",
              "type": "string"
            },
            "maxResults": {
              "description": "Identifies the max number of results returned by a list. All results\nare returned if `maxResults` isn't defined.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            },
            "token": {
              "description": "Used to get the next set of results if `maxResults` is\nspecified, but more than `maxResults` objects are available\nin a list. For example, if you have a list of 200 objects and you call\nlist with `maxResults` set to 20, list will return the first\n20 objects and a token. Call list again with `maxResults`\nset to 20 and the token to get the next 20 objects.",
              "location": "query",
              "type": "string"
            }
          },
          "path": "walletobjects/v1/eventTicketObject",
          "response": {
            "$ref": "EventTicketObjectListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "modifylinkedofferobjects": {
          "description": "Modifies linked offer objects for the event ticket object with the given\nID.",
          "flatPath": "walletobjects/v1/eventTicketObject/{resourceId}/modifyLinkedOfferObjects",
          "httpMethod": "POST",
          "id": "walletobjects.eventticketobject.modifylinkedofferobjects",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for an object. This ID must be unique across all\nobjects from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/eventTicketObject/{resourceId}/modifyLinkedOfferObjects",
          "request": {
            "$ref": "ModifyLinkedOfferObjectsRequest"
          },
          "response": {
            "$ref": "EventTicketObject"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "patch": {
          "description": "Updates the event ticket object referenced by the given object ID. This\nmethod supports patch semantics.",
          "flatPath": "walletobjects/v1/eventTicketObject/{resourceId}",
          "httpMethod": "PATCH",
          "id": "walletobjects.eventticketobject.patch",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for an object. This ID must be unique across all\nobjects from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/eventTicketObject/{resourceId}",
          "request": {
            "$ref": "EventTicketObject"
          },
          "response": {
            "$ref": "EventTicketObject"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "update": {
          "description": "Updates the event ticket object referenced by the given object ID.",
          "flatPath": "walletobjects/v1/eventTicketObject/{resourceId}",
          "httpMethod": "PUT",
          "id": "walletobjects.eventticketobject.update",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for an object. This ID must be unique across all\nobjects from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/eventTicketObject/{resourceId}",
          "request": {
            "$ref": "EventTicketObject"
          },
          "response": {
            "$ref": "EventTicketObject"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        }
      }
    },
    "flightclass": {
      "methods": {
        "addmessage": {
          "description": "Adds a message to the flight class referenced by the given class ID.",
          "flatPath": "walletobjects/v1/flightClass/{resourceId}/addMessage",
          "httpMethod": "POST",
          "id": "walletobjects.flightclass.addmessage",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for a class. This ID must be unique across all\nclasses from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/flightClass/{resourceId}/addMessage",
          "request": {
            "$ref": "AddMessageRequest"
          },
          "response": {
            "$ref": "FlightClassAddMessageResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "get": {
          "description": "Returns the flight class with the given class ID.",
          "flatPath": "walletobjects/v1/flightClass/{resourceId}",
          "httpMethod": "GET",
          "id": "walletobjects.flightclass.get",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for a class. This ID must be unique across all\nclasses from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/flightClass/{resourceId}",
          "response": {
            "$ref": "FlightClass"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "insert": {
          "description": "Inserts an flight class with the given ID and properties.",
          "flatPath": "walletobjects/v1/flightClass",
          "httpMethod": "POST",
          "id": "walletobjects.flightclass.insert",
          "parameterOrder": [],
          "parameters": {},
          "path": "walletobjects/v1/flightClass",
          "request": {
            "$ref": "FlightClass"
          },
          "response": {
            "$ref": "FlightClass"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "list": {
          "description": "Returns a list of all flight classes for a given issuer ID.",
          "flatPath": "walletobjects/v1/flightClass",
          "httpMethod": "GET",
          "id": "walletobjects.flightclass.list",
          "parameterOrder": [],
          "parameters": {
            "issuerId": {
              "description": "The ID of the issuer authorized to list classes.",
              "format": "int64",
              "location": "query",
              "type": "string"
            },
            "maxResults": {
              "description": "Identifies the max number of results returned by a list. All results\nare returned if `maxResults` isn't defined.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            },
            "token": {
              "description": "Used to get the next set of results if `maxResults` is\nspecified, but more than `maxResults` classes are available\nin a list. For example, if you have a list of 200 classes and you call\nlist with `maxResults` set to 20, list will return the first\n20 classes and a token. Call list again with `maxResults`\nset to 20 and the token to get the next 20 classes.",
              "location": "query",
              "type": "string"
            }
          },
          "path": "walletobjects/v1/flightClass",
          "response": {
            "$ref": "FlightClassListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "patch": {
          "description": "Updates the flight class referenced by the given class ID. This\nmethod supports patch semantics.",
          "flatPath": "walletobjects/v1/flightClass/{resourceId}",
          "httpMethod": "PATCH",
          "id": "walletobjects.flightclass.patch",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for a class. This ID must be unique across all\nclasses from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/flightClass/{resourceId}",
          "request": {
            "$ref": "FlightClass"
          },
          "response": {
            "$ref": "FlightClass"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "update": {
          "description": "Updates the flight class referenced by the given class ID.",
          "flatPath": "walletobjects/v1/flightClass/{resourceId}",
          "httpMethod": "PUT",
          "id": "walletobjects.flightclass.update",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for a class. This ID must be unique across all\nclasses from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/flightClass/{resourceId}",
          "request": {
            "$ref": "FlightClass"
          },
          "response": {
            "$ref": "FlightClass"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        }
      }
    },
    "flightobject": {
      "methods": {
        "addmessage": {
          "description": "Adds a message to the flight object referenced by the given object\nID.",
          "flatPath": "walletobjects/v1/flightObject/{resourceId}/addMessage",
          "httpMethod": "POST",
          "id": "walletobjects.flightobject.addmessage",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for an object. This ID must be unique across all\nobjects from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/flightObject/{resourceId}/addMessage",
          "request": {
            "$ref": "AddMessageRequest"
          },
          "response": {
            "$ref": "FlightObjectAddMessageResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "get": {
          "description": "Returns the flight object with the given object ID.",
          "flatPath": "walletobjects/v1/flightObject/{resourceId}",
          "httpMethod": "GET",
          "id": "walletobjects.flightobject.get",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for an object. This ID must be unique across all\nobjects from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/flightObject/{resourceId}",
          "response": {
            "$ref": "FlightObject"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "insert": {
          "description": "Inserts an flight object with the given ID and properties.",
          "flatPath": "walletobjects/v1/flightObject",
          "httpMethod": "POST",
          "id": "walletobjects.flightobject.insert",
          "parameterOrder": [],
          "parameters": {},
          "path": "walletobjects/v1/flightObject",
          "request": {
            "$ref": "FlightObject"
          },
          "response": {
            "$ref": "FlightObject"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "list": {
          "description": "Returns a list of all flight objects for a given issuer ID.",
          "flatPath": "walletobjects/v1/flightObject",
          "httpMethod": "GET",
          "id": "walletobjects.flightobject.list",
          "parameterOrder": [],
          "parameters": {
            "classId": {
              "description": "The ID of the class whose objects will be listed.",
              "location": "query",
              "type": "string"
            },
            "maxResults": {
              "description": "Identifies the max number of results returned by a list. All results\nare returned if `maxResults` isn't defined.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            },
            "token": {
              "description": "Used to get the next set of results if `maxResults` is\nspecified, but more than `maxResults` objects are available\nin a list. For example, if you have a list of 200 objects and you call\nlist with `maxResults` set to 20, list will return the first\n20 objects and a token. Call list again with `maxResults`\nset to 20 and the token to get the next 20 objects.",
              "location": "query",
              "type": "string"
            }
          },
          "path": "walletobjects/v1/flightObject",
          "response": {
            "$ref": "FlightObjectListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "patch": {
          "description": "Updates the flight object referenced by the given object ID. This\nmethod supports patch semantics.",
          "flatPath": "walletobjects/v1/flightObject/{resourceId}",
          "httpMethod": "PATCH",
          "id": "walletobjects.flightobject.patch",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for an object. This ID must be unique across all\nobjects from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/flightObject/{resourceId}",
          "request": {
            "$ref": "FlightObject"
          },
          "response": {
            "$ref": "FlightObject"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "update": {
          "description": "Updates the flight object referenced by the given object ID.",
          "flatPath": "walletobjects/v1/flightObject/{resourceId}",
          "httpMethod": "PUT",
          "id": "walletobjects.flightobject.update",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for an object. This ID must be unique across all\nobjects from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/flightObject/{resourceId}",
          "request": {
            "$ref": "FlightObject"
          },
          "response": {
            "$ref": "FlightObject"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        }
      }
    },
    "giftcardclass": {
      "methods": {
        "addmessage": {
          "description": "Adds a message to the gift card class referenced by the given class ID.",
          "flatPath": "walletobjects/v1/giftCardClass/{resourceId}/addMessage",
          "httpMethod": "POST",
          "id": "walletobjects.giftcardclass.addmessage",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for a class. This ID must be unique across all\nclasses from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/giftCardClass/{resourceId}/addMessage",
          "request": {
            "$ref": "AddMessageRequest"
          },
          "response": {
            "$ref": "GiftCardClassAddMessageResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "get": {
          "description": "Returns the gift card class with the given class ID.",
          "flatPath": "walletobjects/v1/giftCardClass/{resourceId}",
          "httpMethod": "GET",
          "id": "walletobjects.giftcardclass.get",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for a class. This ID must be unique across all\nclasses from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/giftCardClass/{resourceId}",
          "response": {
            "$ref": "GiftCardClass"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "insert": {
          "description": "Inserts an gift card class with the given ID and properties.",
          "flatPath": "walletobjects/v1/giftCardClass",
          "httpMethod": "POST",
          "id": "walletobjects.giftcardclass.insert",
          "parameterOrder": [],
          "parameters": {},
          "path": "walletobjects/v1/giftCardClass",
          "request": {
            "$ref": "GiftCardClass"
          },
          "response": {
            "$ref": "GiftCardClass"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "list": {
          "description": "Returns a list of all gift card classes for a given issuer ID.",
          "flatPath": "walletobjects/v1/giftCardClass",
          "httpMethod": "GET",
          "id": "walletobjects.giftcardclass.list",
          "parameterOrder": [],
          "parameters": {
            "issuerId": {
              "description": "The ID of the issuer authorized to list classes.",
              "format": "int64",
              "location": "query",
              "type": "string"
            },
            "maxResults": {
              "description": "Identifies the max number of results returned by a list. All results\nare returned if `maxResults` isn't defined.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            },
            "token": {
              "description": "Used to get the next set of results if `maxResults` is\nspecified, but more than `maxResults` classes are available\nin a list. For example, if you have a list of 200 classes and you call\nlist with `maxResults` set to 20, list will return the first\n20 classes and a token. Call list again with `maxResults`\nset to 20 and the token to get the next 20 classes.",
              "location": "query",
              "type": "string"
            }
          },
          "path": "walletobjects/v1/giftCardClass",
          "response": {
            "$ref": "GiftCardClassListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "patch": {
          "description": "Updates the gift card class referenced by the given class ID. This\nmethod supports patch semantics.",
          "flatPath": "walletobjects/v1/giftCardClass/{resourceId}",
          "httpMethod": "PATCH",
          "id": "walletobjects.giftcardclass.patch",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for a class. This ID must be unique across all\nclasses from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/giftCardClass/{resourceId}",
          "request": {
            "$ref": "GiftCardClass"
          },
          "response": {
            "$ref": "GiftCardClass"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "update": {
          "description": "Updates the gift card class referenced by the given class ID.",
          "flatPath": "walletobjects/v1/giftCardClass/{resourceId}",
          "httpMethod": "PUT",
          "id": "walletobjects.giftcardclass.update",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for a class. This ID must be unique across all\nclasses from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/giftCardClass/{resourceId}",
          "request": {
            "$ref": "GiftCardClass"
          },
          "response": {
            "$ref": "GiftCardClass"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        }
      }
    },
    "giftcardobject": {
      "methods": {
        "addmessage": {
          "description": "Adds a message to the gift card object referenced by the given object\nID.",
          "flatPath": "walletobjects/v1/giftCardObject/{resourceId}/addMessage",
          "httpMethod": "POST",
          "id": "walletobjects.giftcardobject.addmessage",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for an object. This ID must be unique across all\nobjects from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/giftCardObject/{resourceId}/addMessage",
          "request": {
            "$ref": "AddMessageRequest"
          },
          "response": {
            "$ref": "GiftCardObjectAddMessageResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "get": {
          "description": "Returns the gift card object with the given object ID.",
          "flatPath": "walletobjects/v1/giftCardObject/{resourceId}",
          "httpMethod": "GET",
          "id": "walletobjects.giftcardobject.get",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for an object. This ID must be unique across all\nobjects from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/giftCardObject/{resourceId}",
          "response": {
            "$ref": "GiftCardObject"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "insert": {
          "description": "Inserts an gift card object with the given ID and properties.",
          "flatPath": "walletobjects/v1/giftCardObject",
          "httpMethod": "POST",
          "id": "walletobjects.giftcardobject.insert",
          "parameterOrder": [],
          "parameters": {},
          "path": "walletobjects/v1/giftCardObject",
          "request": {
            "$ref": "GiftCardObject"
          },
          "response": {
            "$ref": "GiftCardObject"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "list": {
          "description": "Returns a list of all gift card objects for a given issuer ID.",
          "flatPath": "walletobjects/v1/giftCardObject",
          "httpMethod": "GET",
          "id": "walletobjects.giftcardobject.list",
          "parameterOrder": [],
          "parameters": {
            "classId": {
              "description": "The ID of the class whose objects will be listed.",
              "location": "query",
              "type": "string"
            },
            "maxResults": {
              "description": "Identifies the max number of results returned by a list. All results\nare returned if `maxResults` isn't defined.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            },
            "token": {
              "description": "Used to get the next set of results if `maxResults` is\nspecified, but more than `maxResults` objects are available\nin a list. For example, if you have a list of 200 objects and you call\nlist with `maxResults` set to 20, list will return the first\n20 objects and a token. Call list again with `maxResults`\nset to 20 and the token to get the next 20 objects.",
              "location": "query",
              "type": "string"
            }
          },
          "path": "walletobjects/v1/giftCardObject",
          "response": {
            "$ref": "GiftCardObjectListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "patch": {
          "description": "Updates the gift card object referenced by the given object ID. This\nmethod supports patch semantics.",
          "flatPath": "walletobjects/v1/giftCardObject/{resourceId}",
          "httpMethod": "PATCH",
          "id": "walletobjects.giftcardobject.patch",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for an object. This ID must be unique across all\nobjects from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/giftCardObject/{resourceId}",
          "request": {
            "$ref": "GiftCardObject"
          },
          "response": {
            "$ref": "GiftCardObject"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "update": {
          "description": "Updates the gift card object referenced by the given object ID.",
          "flatPath": "walletobjects/v1/giftCardObject/{resourceId}",
          "httpMethod": "PUT",
          "id": "walletobjects.giftcardobject.update",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for an object. This ID must be unique across all\nobjects from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/giftCardObject/{resourceId}",
          "request": {
            "$ref": "GiftCardObject"
          },
          "response": {
            "$ref": "GiftCardObject"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        }
      }
    },
    "issuer": {
      "methods": {
        "get": {
          "description": "Returns the issuer with the given issuer ID.",
          "flatPath": "walletobjects/v1/issuer/{resourceId}",
          "httpMethod": "GET",
          "id": "walletobjects.issuer.get",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for an issuer. This ID must be unique across all\nissuers.",
              "format": "int64",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/issuer/{resourceId}",
          "response": {
            "$ref": "Issuer"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "insert": {
          "description": "Inserts an issuer with the given ID and properties.",
          "flatPath": "walletobjects/v1/issuer",
          "httpMethod": "POST",
          "id": "walletobjects.issuer.insert",
          "parameterOrder": [],
          "parameters": {},
          "path": "walletobjects/v1/issuer",
          "request": {
            "$ref": "Issuer"
          },
          "response": {
            "$ref": "Issuer"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "list": {
          "description": "Returns a list of all issuers shared to the caller.",
          "flatPath": "walletobjects/v1/issuer",
          "httpMethod": "GET",
          "id": "walletobjects.issuer.list",
          "parameterOrder": [],
          "parameters": {},
          "path": "walletobjects/v1/issuer",
          "response": {
            "$ref": "IssuerListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "patch": {
          "description": "Updates the issuer referenced by the given issuer ID. This method supports\npatch semantics.",
          "flatPath": "walletobjects/v1/issuer/{resourceId}",
          "httpMethod": "PATCH",
          "id": "walletobjects.issuer.patch",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for an issuer. This ID must be unique across all\nissuers.",
              "format": "int64",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/issuer/{resourceId}",
          "request": {
            "$ref": "Issuer"
          },
          "response": {
            "$ref": "Issuer"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "update": {
          "description": "Updates the issuer referenced by the given issuer ID.",
          "flatPath": "walletobjects/v1/issuer/{resourceId}",
          "httpMethod": "PUT",
          "id": "walletobjects.issuer.update",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for an issuer. This ID must be unique across all\nissuers.",
              "format": "int64",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/issuer/{resourceId}",
          "request": {
            "$ref": "Issuer"
          },
          "response": {
            "$ref": "Issuer"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        }
      }
    },
    "jwt": {
      "methods": {
        "insert": {
          "description": "Inserts the resources in the JWT.",
          "flatPath": "walletobjects/v1/jwt",
          "httpMethod": "POST",
          "id": "walletobjects.jwt.insert",
          "parameterOrder": [],
          "parameters": {},
          "path": "walletobjects/v1/jwt",
          "request": {
            "$ref": "JwtResource"
          },
          "response": {
            "$ref": "JwtInsertResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        }
      }
    },
    "loyaltyclass": {
      "methods": {
        "addmessage": {
          "description": "Adds a message to the loyalty class referenced by the given class ID.",
          "flatPath": "walletobjects/v1/loyaltyClass/{resourceId}/addMessage",
          "httpMethod": "POST",
          "id": "walletobjects.loyaltyclass.addmessage",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for a class. This ID must be unique across all\nclasses from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/loyaltyClass/{resourceId}/addMessage",
          "request": {
            "$ref": "AddMessageRequest"
          },
          "response": {
            "$ref": "LoyaltyClassAddMessageResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "get": {
          "description": "Returns the loyalty class with the given class ID.",
          "flatPath": "walletobjects/v1/loyaltyClass/{resourceId}",
          "httpMethod": "GET",
          "id": "walletobjects.loyaltyclass.get",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for a class. This ID must be unique across all\nclasses from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/loyaltyClass/{resourceId}",
          "response": {
            "$ref": "LoyaltyClass"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "insert": {
          "description": "Inserts an loyalty class with the given ID and properties.",
          "flatPath": "walletobjects/v1/loyaltyClass",
          "httpMethod": "POST",
          "id": "walletobjects.loyaltyclass.insert",
          "parameterOrder": [],
          "parameters": {},
          "path": "walletobjects/v1/loyaltyClass",
          "request": {
            "$ref": "LoyaltyClass"
          },
          "response": {
            "$ref": "LoyaltyClass"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "list": {
          "description": "Returns a list of all loyalty classes for a given issuer ID.",
          "flatPath": "walletobjects/v1/loyaltyClass",
          "httpMethod": "GET",
          "id": "walletobjects.loyaltyclass.list",
          "parameterOrder": [],
          "parameters": {
            "issuerId": {
              "description": "The ID of the issuer authorized to list classes.",
              "format": "int64",
              "location": "query",
              "type": "string"
            },
            "maxResults": {
              "description": "Identifies the max number of results returned by a list. All results\nare returned if `maxResults` isn't defined.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            },
            "token": {
              "description": "Used to get the next set of results if `maxResults` is\nspecified, but more than `maxResults` classes are available\nin a list. For example, if you have a list of 200 classes and you call\nlist with `maxResults` set to 20, list will return the first\n20 classes and a token. Call list again with `maxResults`\nset to 20 and the token to get the next 20 classes.",
              "location": "query",
              "type": "string"
            }
          },
          "path": "walletobjects/v1/loyaltyClass",
          "response": {
            "$ref": "LoyaltyClassListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "patch": {
          "description": "Updates the loyalty class referenced by the given class ID. This\nmethod supports patch semantics.",
          "flatPath": "walletobjects/v1/loyaltyClass/{resourceId}",
          "httpMethod": "PATCH",
          "id": "walletobjects.loyaltyclass.patch",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for a class. This ID must be unique across all\nclasses from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/loyaltyClass/{resourceId}",
          "request": {
            "$ref": "LoyaltyClass"
          },
          "response": {
            "$ref": "LoyaltyClass"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "update": {
          "description": "Updates the loyalty class referenced by the given class ID.",
          "flatPath": "walletobjects/v1/loyaltyClass/{resourceId}",
          "httpMethod": "PUT",
          "id": "walletobjects.loyaltyclass.update",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for a class. This ID must be unique across all\nclasses from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/loyaltyClass/{resourceId}",
          "request": {
            "$ref": "LoyaltyClass"
          },
          "response": {
            "$ref": "LoyaltyClass"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        }
      }
    },
    "loyaltyobject": {
      "methods": {
        "addmessage": {
          "description": "Adds a message to the loyalty object referenced by the given object\nID.",
          "flatPath": "walletobjects/v1/loyaltyObject/{resourceId}/addMessage",
          "httpMethod": "POST",
          "id": "walletobjects.loyaltyobject.addmessage",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for an object. This ID must be unique across all\nobjects from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/loyaltyObject/{resourceId}/addMessage",
          "request": {
            "$ref": "AddMessageRequest"
          },
          "response": {
            "$ref": "LoyaltyObjectAddMessageResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "get": {
          "description": "Returns the loyalty object with the given object ID.",
          "flatPath": "walletobjects/v1/loyaltyObject/{resourceId}",
          "httpMethod": "GET",
          "id": "walletobjects.loyaltyobject.get",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for an object. This ID must be unique across all\nobjects from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/loyaltyObject/{resourceId}",
          "response": {
            "$ref": "LoyaltyObject"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "insert": {
          "description": "Inserts an loyalty object with the given ID and properties.",
          "flatPath": "walletobjects/v1/loyaltyObject",
          "httpMethod": "POST",
          "id": "walletobjects.loyaltyobject.insert",
          "parameterOrder": [],
          "parameters": {},
          "path": "walletobjects/v1/loyaltyObject",
          "request": {
            "$ref": "LoyaltyObject"
          },
          "response": {
            "$ref": "LoyaltyObject"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "list": {
          "description": "Returns a list of all loyalty objects for a given issuer ID.",
          "flatPath": "walletobjects/v1/loyaltyObject",
          "httpMethod": "GET",
          "id": "walletobjects.loyaltyobject.list",
          "parameterOrder": [],
          "parameters": {
            "classId": {
              "description": "The ID of the class whose objects will be listed.",
              "location": "query",
              "type": "string"
            },
            "maxResults": {
              "description": "Identifies the max number of results returned by a list. All results\nare returned if `maxResults` isn't defined.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            },
            "token": {
              "description": "Used to get the next set of results if `maxResults` is\nspecified, but more than `maxResults` objects are available\nin a list. For example, if you have a list of 200 objects and you call\nlist with `maxResults` set to 20, list will return the first\n20 objects and a token. Call list again with `maxResults`\nset to 20 and the token to get the next 20 objects.",
              "location": "query",
              "type": "string"
            }
          },
          "path": "walletobjects/v1/loyaltyObject",
          "response": {
            "$ref": "LoyaltyObjectListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "modifylinkedofferobjects": {
          "description": "Modifies linked offer objects for the loyalty object with the given ID.",
          "flatPath": "walletobjects/v1/loyaltyObject/{resourceId}/modifyLinkedOfferObjects",
          "httpMethod": "POST",
          "id": "walletobjects.loyaltyobject.modifylinkedofferobjects",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for an object. This ID must be unique across all\nobjects from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/loyaltyObject/{resourceId}/modifyLinkedOfferObjects",
          "request": {
            "$ref": "ModifyLinkedOfferObjectsRequest"
          },
          "response": {
            "$ref": "LoyaltyObject"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "patch": {
          "description": "Updates the loyalty object referenced by the given object ID. This\nmethod supports patch semantics.",
          "flatPath": "walletobjects/v1/loyaltyObject/{resourceId}",
          "httpMethod": "PATCH",
          "id": "walletobjects.loyaltyobject.patch",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for an object. This ID must be unique across all\nobjects from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/loyaltyObject/{resourceId}",
          "request": {
            "$ref": "LoyaltyObject"
          },
          "response": {
            "$ref": "LoyaltyObject"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "update": {
          "description": "Updates the loyalty object referenced by the given object ID.",
          "flatPath": "walletobjects/v1/loyaltyObject/{resourceId}",
          "httpMethod": "PUT",
          "id": "walletobjects.loyaltyobject.update",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for an object. This ID must be unique across all\nobjects from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/loyaltyObject/{resourceId}",
          "request": {
            "$ref": "LoyaltyObject"
          },
          "response": {
            "$ref": "LoyaltyObject"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        }
      }
    },
    "offerclass": {
      "methods": {
        "addmessage": {
          "description": "Adds a message to the offer class referenced by the given class ID.",
          "flatPath": "walletobjects/v1/offerClass/{resourceId}/addMessage",
          "httpMethod": "POST",
          "id": "walletobjects.offerclass.addmessage",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for a class. This ID must be unique across all\nclasses from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/offerClass/{resourceId}/addMessage",
          "request": {
            "$ref": "AddMessageRequest"
          },
          "response": {
            "$ref": "OfferClassAddMessageResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "get": {
          "description": "Returns the offer class with the given class ID.",
          "flatPath": "walletobjects/v1/offerClass/{resourceId}",
          "httpMethod": "GET",
          "id": "walletobjects.offerclass.get",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for a class. This ID must be unique across all\nclasses from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/offerClass/{resourceId}",
          "response": {
            "$ref": "OfferClass"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "insert": {
          "description": "Inserts an offer class with the given ID and properties.",
          "flatPath": "walletobjects/v1/offerClass",
          "httpMethod": "POST",
          "id": "walletobjects.offerclass.insert",
          "parameterOrder": [],
          "parameters": {},
          "path": "walletobjects/v1/offerClass",
          "request": {
            "$ref": "OfferClass"
          },
          "response": {
            "$ref": "OfferClass"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "list": {
          "description": "Returns a list of all offer classes for a given issuer ID.",
          "flatPath": "walletobjects/v1/offerClass",
          "httpMethod": "GET",
          "id": "walletobjects.offerclass.list",
          "parameterOrder": [],
          "parameters": {
            "issuerId": {
              "description": "The ID of the issuer authorized to list classes.",
              "format": "int64",
              "location": "query",
              "type": "string"
            },
            "maxResults": {
              "description": "Identifies the max number of results returned by a list. All results\nare returned if `maxResults` isn't defined.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            },
            "token": {
              "description": "Used to get the next set of results if `maxResults` is\nspecified, but more than `maxResults` classes are available\nin a list. For example, if you have a list of 200 classes and you call\nlist with `maxResults` set to 20, list will return the first\n20 classes and a token. Call list again with `maxResults`\nset to 20 and the token to get the next 20 classes.",
              "location": "query",
              "type": "string"
            }
          },
          "path": "walletobjects/v1/offerClass",
          "response": {
            "$ref": "OfferClassListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "patch": {
          "description": "Updates the offer class referenced by the given class ID. This\nmethod supports patch semantics.",
          "flatPath": "walletobjects/v1/offerClass/{resourceId}",
          "httpMethod": "PATCH",
          "id": "walletobjects.offerclass.patch",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for a class. This ID must be unique across all\nclasses from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/offerClass/{resourceId}",
          "request": {
            "$ref": "OfferClass"
          },
          "response": {
            "$ref": "OfferClass"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "update": {
          "description": "Updates the offer class referenced by the given class ID.",
          "flatPath": "walletobjects/v1/offerClass/{resourceId}",
          "httpMethod": "PUT",
          "id": "walletobjects.offerclass.update",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for a class. This ID must be unique across all\nclasses from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/offerClass/{resourceId}",
          "request": {
            "$ref": "OfferClass"
          },
          "response": {
            "$ref": "OfferClass"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        }
      }
    },
    "offerobject": {
      "methods": {
        "addmessage": {
          "description": "Adds a message to the offer object referenced by the given object\nID.",
          "flatPath": "walletobjects/v1/offerObject/{resourceId}/addMessage",
          "httpMethod": "POST",
          "id": "walletobjects.offerobject.addmessage",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for an object. This ID must be unique across all\nobjects from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/offerObject/{resourceId}/addMessage",
          "request": {
            "$ref": "AddMessageRequest"
          },
          "response": {
            "$ref": "OfferObjectAddMessageResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "get": {
          "description": "Returns the offer object with the given object ID.",
          "flatPath": "walletobjects/v1/offerObject/{resourceId}",
          "httpMethod": "GET",
          "id": "walletobjects.offerobject.get",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for an object. This ID must be unique across all\nobjects from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/offerObject/{resourceId}",
          "response": {
            "$ref": "OfferObject"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "insert": {
          "description": "Inserts an offer object with the given ID and properties.",
          "flatPath": "walletobjects/v1/offerObject",
          "httpMethod": "POST",
          "id": "walletobjects.offerobject.insert",
          "parameterOrder": [],
          "parameters": {},
          "path": "walletobjects/v1/offerObject",
          "request": {
            "$ref": "OfferObject"
          },
          "response": {
            "$ref": "OfferObject"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "list": {
          "description": "Returns a list of all offer objects for a given issuer ID.",
          "flatPath": "walletobjects/v1/offerObject",
          "httpMethod": "GET",
          "id": "walletobjects.offerobject.list",
          "parameterOrder": [],
          "parameters": {
            "classId": {
              "description": "The ID of the class whose objects will be listed.",
              "location": "query",
              "type": "string"
            },
            "maxResults": {
              "description": "Identifies the max number of results returned by a list. All results\nare returned if `maxResults` isn't defined.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            },
            "token": {
              "description": "Used to get the next set of results if `maxResults` is\nspecified, but more than `maxResults` objects are available\nin a list. For example, if you have a list of 200 objects and you call\nlist with `maxResults` set to 20, list will return the first\n20 objects and a token. Call list again with `maxResults`\nset to 20 and the token to get the next 20 objects.",
              "location": "query",
              "type": "string"
            }
          },
          "path": "walletobjects/v1/offerObject",
          "response": {
            "$ref": "OfferObjectListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "patch": {
          "description": "Updates the offer object referenced by the given object ID. This\nmethod supports patch semantics.",
          "flatPath": "walletobjects/v1/offerObject/{resourceId}",
          "httpMethod": "PATCH",
          "id": "walletobjects.offerobject.patch",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for an object. This ID must be unique across all\nobjects from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/offerObject/{resourceId}",
          "request": {
            "$ref": "OfferObject"
          },
          "response": {
            "$ref": "OfferObject"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "update": {
          "description": "Updates the offer object referenced by the given object ID.",
          "flatPath": "walletobjects/v1/offerObject/{resourceId}",
          "httpMethod": "PUT",
          "id": "walletobjects.offerobject.update",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for an object. This ID must be unique across all\nobjects from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/offerObject/{resourceId}",
          "request": {
            "$ref": "OfferObject"
          },
          "response": {
            "$ref": "OfferObject"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        }
      }
    },
    "permissions": {
      "methods": {
        "get": {
          "description": "Returns the permissions for the given issuer id.",
          "flatPath": "walletobjects/v1/permissions/{resourceId}",
          "httpMethod": "GET",
          "id": "walletobjects.permissions.get",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for an issuer. This ID must be unique across all\nissuers.",
              "format": "int64",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/permissions/{resourceId}",
          "response": {
            "$ref": "Permissions"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "update": {
          "description": "Updates the permissions for the given issuer.",
          "flatPath": "walletobjects/v1/permissions/{resourceId}",
          "httpMethod": "PUT",
          "id": "walletobjects.permissions.update",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for an issuer. This ID must be unique across all\nissuers.",
              "format": "int64",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/permissions/{resourceId}",
          "request": {
            "$ref": "Permissions"
          },
          "response": {
            "$ref": "Permissions"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        }
      }
    },
    "smarttap": {
      "methods": {
        "insert": {
          "description": "Inserts the smart tap.",
          "flatPath": "walletobjects/v1/smartTap",
          "httpMethod": "POST",
          "id": "walletobjects.smarttap.insert",
          "parameterOrder": [],
          "parameters": {},
          "path": "walletobjects/v1/smartTap",
          "request": {
            "$ref": "SmartTap"
          },
          "response": {
            "$ref": "SmartTap"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        }
      }
    },
    "transitclass": {
      "methods": {
        "addmessage": {
          "description": "Adds a message to the transit class referenced by the given class ID.",
          "flatPath": "walletobjects/v1/transitClass/{resourceId}/addMessage",
          "httpMethod": "POST",
          "id": "walletobjects.transitclass.addmessage",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for a class. This ID must be unique across all\nclasses from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/transitClass/{resourceId}/addMessage",
          "request": {
            "$ref": "AddMessageRequest"
          },
          "response": {
            "$ref": "TransitClassAddMessageResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "get": {
          "description": "Returns the transit class with the given class ID.",
          "flatPath": "walletobjects/v1/transitClass/{resourceId}",
          "httpMethod": "GET",
          "id": "walletobjects.transitclass.get",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for a class. This ID must be unique across all\nclasses from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/transitClass/{resourceId}",
          "response": {
            "$ref": "TransitClass"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "insert": {
          "description": "Inserts a transit class with the given ID and properties.",
          "flatPath": "walletobjects/v1/transitClass",
          "httpMethod": "POST",
          "id": "walletobjects.transitclass.insert",
          "parameterOrder": [],
          "parameters": {},
          "path": "walletobjects/v1/transitClass",
          "request": {
            "$ref": "TransitClass"
          },
          "response": {
            "$ref": "TransitClass"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "list": {
          "description": "Returns a list of all transit classes for a given issuer ID.",
          "flatPath": "walletobjects/v1/transitClass",
          "httpMethod": "GET",
          "id": "walletobjects.transitclass.list",
          "parameterOrder": [],
          "parameters": {
            "issuerId": {
              "description": "The ID of the issuer authorized to list classes.",
              "format": "int64",
              "location": "query",
              "type": "string"
            },
            "maxResults": {
              "description": "Identifies the max number of results returned by a list. All results\nare returned if `maxResults` isn't defined.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            },
            "token": {
              "description": "Used to get the next set of results if `maxResults` is\nspecified, but more than `maxResults` classes are available\nin a list. For example, if you have a list of 200 classes and you call\nlist with `maxResults` set to 20, list will return the first\n20 classes and a token. Call list again with `maxResults`\nset to 20 and the token to get the next 20 classes.",
              "location": "query",
              "type": "string"
            }
          },
          "path": "walletobjects/v1/transitClass",
          "response": {
            "$ref": "TransitClassListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "patch": {
          "description": "Updates the transit class referenced by the given class ID. This\nmethod supports patch semantics.",
          "flatPath": "walletobjects/v1/transitClass/{resourceId}",
          "httpMethod": "PATCH",
          "id": "walletobjects.transitclass.patch",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for a class. This ID must be unique across all\nclasses from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/transitClass/{resourceId}",
          "request": {
            "$ref": "TransitClass"
          },
          "response": {
            "$ref": "TransitClass"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "update": {
          "description": "Updates the transit class referenced by the given class ID.",
          "flatPath": "walletobjects/v1/transitClass/{resourceId}",
          "httpMethod": "PUT",
          "id": "walletobjects.transitclass.update",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for a class. This ID must be unique across all\nclasses from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/transitClass/{resourceId}",
          "request": {
            "$ref": "TransitClass"
          },
          "response": {
            "$ref": "TransitClass"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        }
      }
    },
    "transitobject": {
      "methods": {
        "addmessage": {
          "description": "Adds a message to the transit object referenced by the given object\nID.",
          "flatPath": "walletobjects/v1/transitObject/{resourceId}/addMessage",
          "httpMethod": "POST",
          "id": "walletobjects.transitobject.addmessage",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for an object. This ID must be unique across all\nobjects from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/transitObject/{resourceId}/addMessage",
          "request": {
            "$ref": "AddMessageRequest"
          },
          "response": {
            "$ref": "TransitObjectAddMessageResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "get": {
          "description": "Returns the transit object with the given object ID.",
          "flatPath": "walletobjects/v1/transitObject/{resourceId}",
          "httpMethod": "GET",
          "id": "walletobjects.transitobject.get",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for an object. This ID must be unique across all\nobjects from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/transitObject/{resourceId}",
          "response": {
            "$ref": "TransitObject"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "insert": {
          "description": "Inserts an transit object with the given ID and properties.",
          "flatPath": "walletobjects/v1/transitObject",
          "httpMethod": "POST",
          "id": "walletobjects.transitobject.insert",
          "parameterOrder": [],
          "parameters": {},
          "path": "walletobjects/v1/transitObject",
          "request": {
            "$ref": "TransitObject"
          },
          "response": {
            "$ref": "TransitObject"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "list": {
          "description": "Returns a list of all transit objects for a given issuer ID.",
          "flatPath": "walletobjects/v1/transitObject",
          "httpMethod": "GET",
          "id": "walletobjects.transitobject.list",
          "parameterOrder": [],
          "parameters": {
            "classId": {
              "description": "The ID of the class whose objects will be listed.",
              "location": "query",
              "type": "string"
            },
            "maxResults": {
              "description": "Identifies the max number of results returned by a list. All results\nare returned if `maxResults` isn't defined.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            },
            "token": {
              "description": "Used to get the next set of results if `maxResults` is\nspecified, but more than `maxResults` objects are available\nin a list. For example, if you have a list of 200 objects and you call\nlist with `maxResults` set to 20, list will return the first\n20 objects and a token. Call list again with `maxResults`\nset to 20 and the token to get the next 20 objects.",
              "location": "query",
              "type": "string"
            }
          },
          "path": "walletobjects/v1/transitObject",
          "response": {
            "$ref": "TransitObjectListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "patch": {
          "description": "Updates the transit object referenced by the given object ID. This\nmethod supports patch semantics.",
          "flatPath": "walletobjects/v1/transitObject/{resourceId}",
          "httpMethod": "PATCH",
          "id": "walletobjects.transitobject.patch",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for an object. This ID must be unique across all\nobjects from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/transitObject/{resourceId}",
          "request": {
            "$ref": "TransitObject"
          },
          "response": {
            "$ref": "TransitObject"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        },
        "update": {
          "description": "Updates the transit object referenced by the given object ID.",
          "flatPath": "walletobjects/v1/transitObject/{resourceId}",
          "httpMethod": "PUT",
          "id": "walletobjects.transitobject.update",
          "parameterOrder": [
            "resourceId"
          ],
          "parameters": {
            "resourceId": {
              "description": "The unique identifier for an object. This ID must be unique across all\nobjects from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "path": "walletobjects/v1/transitObject/{resourceId}",
          "request": {
            "$ref": "TransitObject"
          },
          "response": {
            "$ref": "TransitObject"
          },
          "scopes": [
            "https://www.googleapis.com/auth/wallet_object.issuer"
          ]
        }
      }
    }
  },
  "revision": "20200114",
  "rootUrl": "https://walletobjects.googleapis.com/",
  "schemas": {
    "AddMessageRequest": {
      "description": "Resource used when the AddMessage endpoints are called.",
      "id": "AddMessageRequest",
      "properties": {
        "message": {
          "$ref": "Message"
        }
      },
      "type": "object"
    },
    "AirportInfo": {
      "id": "AirportInfo",
      "properties": {
        "airportIataCode": {
          "description": "Three character IATA airport code. This is a required field for\n`origin` and `destination`.\n\nEg: \"SFO\"",
          "type": "string"
        },
        "airportNameOverride": {
          "$ref": "LocalizedString",
          "description": "Optional field that overrides the airport city name defined by IATA. By\ndefault, Google takes the `airportIataCode` provided and maps it\nto the official airport city name defined by IATA.\n\n\nOfficial IATA airport city names can be found at <a\nhref=\"http://www.iata.org/publications/Pages/code-search.aspx\"> IATA\nairport city names</a> website. For example, for the airport IATA code\n\"LTN\", IATA website tells us that the corresponding airport city is\n\"London\".\n\nIf this field is not populated, Google would display \"London\".\n\nHowever, populating this field with a custom name (eg: \"London Luton\")\nwould override it."
        },
        "gate": {
          "description": "A name of the gate. Eg: \"B59\" or \"59\"",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n`\"walletobjects#airportInfo\"`.",
          "type": "string"
        },
        "terminal": {
          "description": "Terminal name. Eg: \"INTL\" or \"I\"",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AppLinkData": {
      "id": "AppLinkData",
      "properties": {
        "androidAppLinkInfo": {
          "$ref": "AppLinkDataAppLinkInfo",
          "description": "Optional information about the partner app link. If included, the app link\nlink module will be rendered on the valuable details on the android client."
        },
        "iosAppLinkInfo": {
          "$ref": "AppLinkDataAppLinkInfo",
          "description": "Optional information about the partner app link. If included, the app link\nlink module will be rendered on the valuable details on the ios client."
        },
        "webAppLinkInfo": {
          "$ref": "AppLinkDataAppLinkInfo",
          "description": "Optional information about the partner app link. If included, the app link\nlink module will be rendered on the valuable details on the web client."
        }
      },
      "type": "object"
    },
    "AppLinkDataAppLinkInfo": {
      "id": "AppLinkDataAppLinkInfo",
      "properties": {
        "appLogoImage": {
          "$ref": "Image",
          "description": "Optional image to be displayed in the App Link Module"
        },
        "appTarget": {
          "$ref": "AppLinkDataAppLinkInfoAppTarget",
          "description": "Url to follow when opening the App Link Module on clients.\nIt will be used by partners to open their webpage or deeplink into their\napp."
        },
        "description": {
          "$ref": "LocalizedString",
          "description": "String to be displayed in the description of the App Link Module\nRequired"
        },
        "title": {
          "$ref": "LocalizedString",
          "description": "String to be displayed in the title of the App Link Module\nRequired"
        }
      },
      "type": "object"
    },
    "AppLinkDataAppLinkInfoAppTarget": {
      "id": "AppLinkDataAppLinkInfoAppTarget",
      "properties": {
        "targetUri": {
          "$ref": "Uri"
        }
      },
      "type": "object"
    },
    "AuthenticationKey": {
      "id": "AuthenticationKey",
      "properties": {
        "id": {
          "description": "Available only to Smart Tap enabled partners.  Contact support for\nadditional guidance.",
          "format": "int32",
          "type": "integer"
        },
        "publicKeyPem": {
          "description": "Available only to Smart Tap enabled partners.  Contact support for\nadditional guidance.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Barcode": {
      "id": "Barcode",
      "properties": {
        "alternateText": {
          "description": "An optional text that will override the default text that shows under\nthe barcode. This field is intended for a human readable equivalent\nof the barcode value, used when the barcode cannot be scanned.",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n`\"walletobjects#barcode\"`.",
          "type": "string"
        },
        "renderEncoding": {
          "description": "The render encoding for the barcode. When specified, barcode is rendered\nin the given encoding. Otherwise best known encoding is chosen by Google.",
          "enum": [
            "RENDER_ENCODING_UNSPECIFIED",
            "UTF_8"
          ],
          "enumDescriptions": [
            "",
            "UTF_8 encoding for barcodes. This is only supported for barcode type\nqrCode."
          ],
          "type": "string"
        },
        "showCodeText": {
          "$ref": "LocalizedString",
          "description": "Optional text that will be shown when the barcode is hidden behind a click\naction. This happens in cases where a pass has Smart Tap enabled.\nIf not specified, a default is chosen by Google."
        },
        "type": {
          "description": "The type of barcode.",
          "enum": [
            "BARCODE_TYPE_UNSPECIFIED",
            "AZTEC",
            "aztec",
            "CODE_39",
            "code39",
            "CODE_128",
            "code128",
            "CODABAR",
            "codabar",
            "DATA_MATRIX",
            "dataMatrix",
            "EAN_8",
            "ean8",
            "EAN_13",
            "ean13",
            "EAN13",
            "ITF_14",
            "itf14",
            "PDF_417",
            "pdf417",
            "PDF417",
            "QR_CODE",
            "qrCode",
            "qrcode",
            "UPC_A",
            "upcA",
            "TEXT_ONLY",
            "textOnly"
          ],
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `AZTEC`.  Deprecated.",
            "",
            "Legacy alias for `CODE_39`.  Deprecated.",
            "",
            "Legacy alias for `CODE_128`.  Deprecated.",
            "",
            "Legacy alias for `CODABAR`.  Deprecated.",
            "A 2D matrix barcode consisting of black and white. Cells or modules\nare arranged in either a square or rectangle.",
            "Legacy alias for `DATA_MATRIX`.  Deprecated.",
            "",
            "Legacy alias for `EAN_8`.  Deprecated.",
            "",
            "Legacy alias for `EAN_13`.  Deprecated.",
            "Legacy alias for `EAN_13`.  Deprecated.",
            "14 digit ITF code",
            "Legacy alias for `ITF_14`.  Deprecated.",
            "",
            "Legacy alias for `PDF_417`.  Deprecated.",
            "Legacy alias for `PDF_417`.  Deprecated.",
            "",
            "Legacy alias for `QR_CODE`.  Deprecated.",
            "Legacy alias for `QR_CODE`.  Deprecated.",
            "11 or 12 digit codes",
            "Legacy alias for `UPC_A`.  Deprecated.",
            "Renders the field as a text field. The `alternateText` field\nmay not be used with a barcode of type `textOnly`.",
            "Legacy alias for `TEXT_ONLY`.  Deprecated."
          ],
          "type": "string"
        },
        "value": {
          "description": "The value encoded in the barcode.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BarcodeSectionDetail": {
      "id": "BarcodeSectionDetail",
      "properties": {
        "fieldSelector": {
          "$ref": "FieldSelector",
          "description": "A reference to an existing text-based or image field to display."
        }
      },
      "type": "object"
    },
    "BoardingAndSeatingInfo": {
      "id": "BoardingAndSeatingInfo",
      "properties": {
        "boardingDoor": {
          "description": "Set this field only if this flight boards through more than one door or\nbridge and you want to explicitly print the door location on the boarding\npass. Most airlines route their passengers to the right door or bridge by\nrefering to doors/bridges by the `seatClass`. In those cases\n`boardingDoor` should not be set.",
          "enum": [
            "BOARDING_DOOR_UNSPECIFIED",
            "FRONT",
            "front",
            "BACK",
            "back"
          ],
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `FRONT`.  Deprecated.",
            "",
            "Legacy alias for `BACK`.  Deprecated."
          ],
          "type": "string"
        },
        "boardingGroup": {
          "description": "The value of boarding group (or zone) this passenger shall board with.\n\neg: \"B\"\n\nThe label for this value will be determined by the\n`boardingPolicy` field in the `flightClass`\nreferenced by this object.",
          "type": "string"
        },
        "boardingPosition": {
          "description": "The value of boarding position.\n\neg: \"76\"",
          "type": "string"
        },
        "boardingPrivilegeImage": {
          "$ref": "Image",
          "description": "A small image shown above the boarding barcode. Airlines can use it to\ncommunicate any special boarding privileges. In the event the security\nprogram logo is also set, this image might be rendered alongside the logo\nfor that security program."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n`\"walletobjects#boardingAndSeatingInfo\"`.",
          "type": "string"
        },
        "seatAssignment": {
          "$ref": "LocalizedString",
          "description": "The passenger's seat assignment. To be used when there is no specific\nidentifier to use in `seatNumber`.\n\neg: \"assigned at gate\""
        },
        "seatClass": {
          "description": "The value of the seat class.\n\neg: \"Economy\" or \"Economy Plus\"",
          "type": "string"
        },
        "seatNumber": {
          "description": "The value of passenger seat. If there is no specific identifier, use\n`seatAssignment` instead.\n\neg: \"25A\"",
          "type": "string"
        },
        "sequenceNumber": {
          "description": "The sequence number on the boarding pass. This usually matches the sequence\nin which the passengers checked in. Airline might use the number for manual\nboarding and bag tags.\n\neg: \"49\"",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BoardingAndSeatingPolicy": {
      "id": "BoardingAndSeatingPolicy",
      "properties": {
        "boardingPolicy": {
          "description": "Indicates the policy the airline uses for boarding.  If unset, Google will\ndefault to `zoneBased`.",
          "enum": [
            "BOARDING_POLICY_UNSPECIFIED",
            "ZONE_BASED",
            "zoneBased",
            "GROUP_BASED",
            "groupBased",
            "BOARDING_POLICY_OTHER",
            "boardingPolicyOther"
          ],
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `ZONE_BASED`.  Deprecated.",
            "",
            "Legacy alias for `GROUP_BASED`.  Deprecated.",
            "",
            "Legacy alias for `BOARDING_POLICY_OTHER`.  Deprecated."
          ],
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n`\"walletobjects#boardingAndSeatingPolicy\"`.",
          "type": "string"
        },
        "seatClassPolicy": {
          "description": "Seating policy which dictates how we display the seat class. If unset,\nGoogle will default to `cabinBased`.",
          "enum": [
            "SEAT_CLASS_POLICY_UNSPECIFIED",
            "CABIN_BASED",
            "cabinBased",
            "CLASS_BASED",
            "classBased",
            "TIER_BASED",
            "tierBased",
            "SEAT_CLASS_POLICY_OTHER",
            "seatClassPolicyOther"
          ],
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `CABIN_BASED`.  Deprecated.",
            "",
            "Legacy alias for `CLASS_BASED`.  Deprecated.",
            "",
            "Legacy alias for `TIER_BASED`.  Deprecated.",
            "",
            "Legacy alias for `SEAT_CLASS_POLICY_OTHER`.  Deprecated."
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CallbackOptions": {
      "id": "CallbackOptions",
      "properties": {
        "updateRequestUrl": {
          "description": "URL for the merchant endpoint that would be called to request updates.\nThe URL should be hosted on HTTPS and robots.txt should allow the URL path\nto be accessible by UserAgent:Google-Valuables.\n\nPlease contact Google support before using this field.",
          "type": "string"
        },
        "url": {
          "description": "The HTTPS url configured by the merchant. The URL should be hosted on HTTPS\nand robots.txt should allow the URL path to be accessible by\n UserAgent:Google-Valuables.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CardBarcodeSectionDetails": {
      "id": "CardBarcodeSectionDetails",
      "properties": {
        "firstBottomDetail": {
          "$ref": "BarcodeSectionDetail",
          "description": "Optional information to display below the barcode."
        },
        "firstTopDetail": {
          "$ref": "BarcodeSectionDetail",
          "description": "Optional information to display above the barcode. If\n`secondTopDetail` is defined, this will be displayed to the\nstart side of this detail section."
        },
        "secondTopDetail": {
          "$ref": "BarcodeSectionDetail",
          "description": "Optional second piece of information to display above the barcode. If\n`firstTopDetail` is defined, this will be displayed to the\nend side of this detail section."
        }
      },
      "type": "object"
    },
    "CardRowOneItem": {
      "id": "CardRowOneItem",
      "properties": {
        "item": {
          "$ref": "TemplateItem",
          "description": "The item to be displayed in the row. This item will be automatically\ncentered."
        }
      },
      "type": "object"
    },
    "CardRowTemplateInfo": {
      "id": "CardRowTemplateInfo",
      "properties": {
        "oneItem": {
          "$ref": "CardRowOneItem",
          "description": "Template for a row containing one item. Exactly one of \"one_item\",\n\"two_items\", \"three_items\" must be set."
        },
        "threeItems": {
          "$ref": "CardRowThreeItems",
          "description": "Template for a row containing three items. Exactly one of \"one_item\",\n\"two_items\", \"three_items\" must be set."
        },
        "twoItems": {
          "$ref": "CardRowTwoItems",
          "description": "Template for a row containing two items. Exactly one of \"one_item\",\n\"two_items\", \"three_items\" must be set."
        }
      },
      "type": "object"
    },
    "CardRowThreeItems": {
      "id": "CardRowThreeItems",
      "properties": {
        "endItem": {
          "$ref": "TemplateItem",
          "description": "The item to be displayed at the end of the row. This item will be aligned\nto the right."
        },
        "middleItem": {
          "$ref": "TemplateItem",
          "description": "The item to be displayed in the middle of the row. This item will be\ncentered between the start and end items."
        },
        "startItem": {
          "$ref": "TemplateItem",
          "description": "The item to be displayed at the start of the row. This item will be aligned\nto the left."
        }
      },
      "type": "object"
    },
    "CardRowTwoItems": {
      "id": "CardRowTwoItems",
      "properties": {
        "endItem": {
          "$ref": "TemplateItem",
          "description": "The item to be displayed at the end of the row. This item will be aligned\nto the right."
        },
        "startItem": {
          "$ref": "TemplateItem",
          "description": "The item to be displayed at the start of the row. This item will be aligned\nto the left."
        }
      },
      "type": "object"
    },
    "CardTemplateOverride": {
      "id": "CardTemplateOverride",
      "properties": {
        "cardRowTemplateInfos": {
          "description": "Template information for rows in the card view. At most two rows are\nallowed to be specified.",
          "items": {
            "$ref": "CardRowTemplateInfo"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ClassTemplateInfo": {
      "id": "ClassTemplateInfo",
      "properties": {
        "cardBarcodeSectionDetails": {
          "$ref": "CardBarcodeSectionDetails",
          "description": "Specifies extra information to be displayed above and below the barcode."
        },
        "cardTemplateOverride": {
          "$ref": "CardTemplateOverride",
          "description": "Override for the card view."
        },
        "detailsTemplateOverride": {
          "$ref": "DetailsTemplateOverride",
          "description": "Override for the details view (beneath the card view)."
        },
        "listTemplateOverride": {
          "$ref": "ListTemplateOverride",
          "description": "Override for the passes list view."
        }
      },
      "type": "object"
    },
    "DateTime": {
      "id": "DateTime",
      "properties": {
        "date": {
          "description": "An ISO 8601 extended format date/time.  Offset may or may not be required\n(refer to the parent field's documentation). Time may be specified up to\nnanosecond precision.  Offsets may be specified with seconds precision\n(even though offset seconds is not part of ISO 8601).\n\nFor example:\n\n`1985-04-12T23:20:50.52Z` would be 20 minutes and 50.52 seconds\nafter the 23rd hour of April 12th, 1985 in UTC.\n\n`1985-04-12T19:20:50.52-04:00` would be 20 minutes and 50.52\nseconds after the 19th hour of April 12th, 1985, 4 hours before UTC (same\ninstant in time as the above example).  If the date/time is intended for a\nphysical location in New York, this would be the equivalent of Eastern\nDaylight Time (EDT).  Remember that offset varies in regions that observe\nDaylight Saving Time (or Summer Time), depending on the time of the year.\n\n`1985-04-12T19:20:50.52` would be 20 minutes and 50.52\nseconds after the 19th hour of April 12th, 1985 with no offset\ninformation.\n\nProviding an offset makes this an absolute instant in time around the\nworld.  The date/time will be adjusted based on the user's time zone.  For\nexample, a time of `2018-06-19T18:30:00-04:00` will be 18:30:00\nfor a user in New York and 15:30:00 for a user in Los Angeles.\n\nOmitting the offset makes this a local date/time, representing several\ninstants in time around the world.  The date/time will always be in the\nuser's current time zone.  For example, a time of\n`2018-06-19T18:30:00` will be 18:30:00 for a user in New York\nand also 18:30:00 for a user in Los Angeles.  This is useful when the same\nlocal date/time should apply to many physical locations across several\ntime zones.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DetailsItemInfo": {
      "id": "DetailsItemInfo",
      "properties": {
        "item": {
          "$ref": "TemplateItem",
          "description": "The item to be displayed in the details list."
        }
      },
      "type": "object"
    },
    "DetailsTemplateOverride": {
      "id": "DetailsTemplateOverride",
      "properties": {
        "detailsItemInfos": {
          "description": "Information for the \"nth\" item displayed in the details list.",
          "items": {
            "$ref": "DetailsItemInfo"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "DiscoverableProgram": {
      "description": "Information about how a class may be discovered and instantiated from within\nthe Android Pay app. This is done by searching for a loyalty or gift card\nprogram and scanning or manually entering.",
      "id": "DiscoverableProgram",
      "properties": {
        "merchantSigninInfo": {
          "$ref": "DiscoverableProgramMerchantSigninInfo",
          "description": "Information about the ability to signin and add a valuable for this\nprogram through a merchant site. Used when MERCHANT_HOSTED_SIGNIN is\nenabled."
        },
        "merchantSignupInfo": {
          "$ref": "DiscoverableProgramMerchantSignupInfo",
          "description": "Information about the ability to signup and add a valuable for this\nprogram through a merchant site. Used when MERCHANT_HOSTED_SIGNUP is\nenabled."
        },
        "state": {
          "description": "Visibility state of the discoverable program.",
          "enum": [
            "STATE_UNSPECIFIED",
            "TRUSTED_TESTERS",
            "trustedTesters",
            "LIVE",
            "live",
            "DISABLED",
            "disabled"
          ],
          "enumDescriptions": [
            "",
            "Visible only to testers that have access to issuer account.",
            "Legacy alias for `TRUSTED_TESTERS`.  Deprecated.",
            "Visible to all.",
            "Legacy alias for `LIVE`.  Deprecated.",
            "Not visible.",
            "Legacy alias for `DISABLED`.  Deprecated."
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "DiscoverableProgramMerchantSigninInfo": {
      "description": "Information about the merchant hosted signin flow for a program.",
      "id": "DiscoverableProgramMerchantSigninInfo",
      "properties": {
        "signinWebsite": {
          "$ref": "Uri",
          "description": "The URL to direct the user to for the merchant's signin site."
        }
      },
      "type": "object"
    },
    "DiscoverableProgramMerchantSignupInfo": {
      "description": "Information about the merchant hosted signup flow for a program.",
      "id": "DiscoverableProgramMerchantSignupInfo",
      "properties": {
        "signupSharedDatas": {
          "description": "\nUser data that is sent in a POST request to the signup website URL. This\ninformation is encoded and then shared so that the merchant's website can\nprefill fields used to enroll the user for the discoverable program.",
          "enumDescriptions": [
            "",
            "",
            "",
            "single line address field",
            "multi line address fields",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "items": {
            "enum": [
              "SHARED_DATA_TYPE_UNSPECIFIED",
              "FIRST_NAME",
              "LAST_NAME",
              "STREET_ADDRESS",
              "ADDRESS_LINE_1",
              "ADDRESS_LINE_2",
              "ADDRESS_LINE_3",
              "CITY",
              "STATE",
              "ZIPCODE",
              "COUNTRY",
              "EMAIL",
              "PHONE"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "signupWebsite": {
          "$ref": "Uri",
          "description": "The URL to direct the user to for the merchant's signup site."
        }
      },
      "type": "object"
    },
    "EventDateTime": {
      "id": "EventDateTime",
      "properties": {
        "customDoorsOpenLabel": {
          "$ref": "LocalizedString",
          "description": "A custom label to use for the doors open value (`doorsOpen`) on\nthe card detail view. This should only be used if the default \"Doors Open\"\nlabel or one of the `doorsOpenLabel` options is not sufficient.\n\nBoth `doorsOpenLabel` and `customDoorsOpenLabel` may\nnot be set. If neither is set, the label will default to \"Doors Open\",\nlocalized. If the doors open field is unset, this label will not be used."
        },
        "doorsOpen": {
          "description": "The date/time when the doors open at the venue.\n\nThis is an ISO 8601 extended format date/time, with or without an offset.\nTime may be specified up to nanosecond precision. Offsets may be specified\nwith seconds precision (even though offset seconds is not part of ISO\n8601).\n\nFor example:\n\n`1985-04-12T23:20:50.52Z` would be 20 minutes and 50.52 seconds\nafter the 23rd hour of April 12th, 1985 in UTC.\n\n`1985-04-12T19:20:50.52-04:00` would be 20 minutes and 50.52\nseconds after the 19th hour of April 12th, 1985, 4 hours before UTC (same\ninstant in time as the above example). If the event were in New York, this\nwould be the equivalent of Eastern Daylight Time (EDT). Remember that\noffset varies in regions that observe Daylight Saving Time (or Summer\nTime), depending on the time of the year.\n\n`1985-04-12T19:20:50.52` would be 20 minutes and 50.52 seconds\nafter the 19th hour of April 12th, 1985 with no offset information.\n\nThe portion of the date/time without the offset is considered the \"local\ndate/time\". This should be the local date/time at the venue. For example,\nif the event occurs at the 20th hour of June 5th, 2018 at the venue, the\nlocal date/time portion should be `2018-06-05T20:00:00`. If the\nlocal date/time at the venue is 4 hours before UTC, an offset of\n`-04:00` may be appended.\n\nWithout offset information, some rich features may not be available.",
          "type": "string"
        },
        "doorsOpenLabel": {
          "description": "The label to use for the doors open value (`doorsOpen`) on the\ncard detail view. Each available option maps to a set of localized strings,\nso that translations are shown to the user based on their locale.\n\nBoth `doorsOpenLabel` and `customDoorsOpenLabel` may\nnot be set. If neither is set, the label will default to \"Doors Open\",\nlocalized. If the doors open field is unset, this label will not be used.",
          "enum": [
            "DOORS_OPEN_LABEL_UNSPECIFIED",
            "DOORS_OPEN",
            "doorsOpen",
            "GATES_OPEN",
            "gatesOpen"
          ],
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `DOORS_OPEN`.  Deprecated.",
            "",
            "Legacy alias for `GATES_OPEN`.  Deprecated."
          ],
          "type": "string"
        },
        "end": {
          "description": "The date/time when the event ends. If the event spans multiple days, it\nshould be the end date/time on the last day.\n\nThis is an ISO 8601 extended format date/time, with or without an offset.\nTime may be specified up to nanosecond precision. Offsets may be specified\nwith seconds precision (even though offset seconds is not part of ISO\n8601).\n\nFor example:\n\n`1985-04-12T23:20:50.52Z` would be 20 minutes and 50.52 seconds\nafter the 23rd hour of April 12th, 1985 in UTC.\n\n`1985-04-12T19:20:50.52-04:00` would be 20 minutes and 50.52\nseconds after the 19th hour of April 12th, 1985, 4 hours before UTC (same\ninstant in time as the above example). If the event were in New York, this\nwould be the equivalent of Eastern Daylight Time (EDT). Remember that\noffset varies in regions that observe Daylight Saving Time (or Summer\nTime), depending on the time of the year.\n\n`1985-04-12T19:20:50.52` would be 20 minutes and 50.52 seconds\nafter the 19th hour of April 12th, 1985 with no offset information.\n\nThe portion of the date/time without the offset is considered the \"local\ndate/time\". This should be the local date/time at the venue. For example,\nif the event occurs at the 20th hour of June 5th, 2018 at the venue, the\nlocal date/time portion should be `2018-06-05T20:00:00`. If the\nlocal date/time at the venue is 4 hours before UTC, an offset of\n`-04:00` may be appended.\n\nWithout offset information, some rich features may not be available.",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n`\"walletobjects#eventDateTime\"`.",
          "type": "string"
        },
        "start": {
          "description": "The date/time when the event starts. If the event spans multiple days, it\nshould be the start date/time on the first day.\n\nThis is an ISO 8601 extended format date/time, with or without an offset.\nTime may be specified up to nanosecond precision. Offsets may be specified\nwith seconds precision (even though offset seconds is not part of ISO\n8601).\n\nFor example:\n\n`1985-04-12T23:20:50.52Z` would be 20 minutes and 50.52 seconds\nafter the 23rd hour of April 12th, 1985 in UTC.\n\n`1985-04-12T19:20:50.52-04:00` would be 20 minutes and 50.52\nseconds after the 19th hour of April 12th, 1985, 4 hours before UTC (same\ninstant in time as the above example). If the event were in New York, this\nwould be the equivalent of Eastern Daylight Time (EDT). Remember that\noffset varies in regions that observe Daylight Saving Time (or Summer\nTime), depending on the time of the year.\n\n`1985-04-12T19:20:50.52` would be 20 minutes and 50.52 seconds\nafter the 19th hour of April 12th, 1985 with no offset information.\n\nThe portion of the date/time without the offset is considered the \"local\ndate/time\". This should be the local date/time at the venue. For example,\nif the event occurs at the 20th hour of June 5th, 2018 at the venue, the\nlocal date/time portion should be `2018-06-05T20:00:00`. If the\nlocal date/time at the venue is 4 hours before UTC, an offset of\n`-04:00` may be appended.\n\nWithout offset information, some rich features may not be available.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EventReservationInfo": {
      "id": "EventReservationInfo",
      "properties": {
        "confirmationCode": {
          "description": "The confirmation code of the event reservation. This may also take the\nform of an \"order number\", \"confirmation number\", \"reservation number\", or\nother equivalent.",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n`\"walletobjects#eventReservationInfo\"`.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EventSeat": {
      "id": "EventSeat",
      "properties": {
        "gate": {
          "$ref": "LocalizedString",
          "description": "The gate the ticket holder should enter to get to their seat, such as \"A\"\nor \"West\".\n\nThis field is localizable so you may translate words or use different\nalphabets for the characters in an identifier."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n`\"walletobjects#eventSeat\"`.",
          "type": "string"
        },
        "row": {
          "$ref": "LocalizedString",
          "description": "The row of the seat, such as \"1\", E\", \"BB\", or \"A5\".\n\nThis field is localizable so you may translate words or use different\nalphabets for the characters in an identifier."
        },
        "seat": {
          "$ref": "LocalizedString",
          "description": "The seat number, such as \"1\", \"2\", \"3\", or any other seat identifier.\n\nThis field is localizable so you may translate words or use different\nalphabets for the characters in an identifier."
        },
        "section": {
          "$ref": "LocalizedString",
          "description": "The section of the seat, such as \"121\".\n\nThis field is localizable so you may translate words or use different\nalphabets for the characters in an identifier."
        }
      },
      "type": "object"
    },
    "EventTicketClass": {
      "id": "EventTicketClass",
      "properties": {
        "allowMultipleUsersPerObject": {
          "description": "Deprecated. Use `multipleDevicesAndHoldersAllowedStatus`\ninstead.",
          "type": "boolean"
        },
        "callbackOptions": {
          "$ref": "CallbackOptions",
          "description": "Callback options to be used to call the issuer back for every save/delete\nof an object for this class by the end-user.\nAll objects of this class are eligible for the callback."
        },
        "classTemplateInfo": {
          "$ref": "ClassTemplateInfo",
          "description": "Template information about how the class should be displayed.\nIf unset, Google will fallback to a default set of fields to display."
        },
        "confirmationCodeLabel": {
          "description": "The label to use for the confirmation code value\n(`eventTicketObject.reservationInfo.confirmationCode`) on the\ncard detail view. Each available option maps to a set of localized strings,\nso that translations are shown to the user based on their locale.\n\nBoth `confirmationCodeLabel` and\n`customConfirmationCodeLabel` may not be set. If neither is\nset, the label will default to \"Confirmation Code\", localized. If the\nconfirmation code field is unset, this label will not be used.",
          "enum": [
            "CONFIRMATION_CODE_LABEL_UNSPECIFIED",
            "CONFIRMATION_CODE",
            "confirmationCode",
            "CONFIRMATION_NUMBER",
            "confirmationNumber",
            "ORDER_NUMBER",
            "orderNumber",
            "RESERVATION_NUMBER",
            "reservationNumber"
          ],
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `CONFIRMATION_CODE`.  Deprecated.",
            "",
            "Legacy alias for `CONFIRMATION_NUMBER`.  Deprecated.",
            "",
            "Legacy alias for `ORDER_NUMBER`.  Deprecated.",
            "",
            "Legacy alias for `RESERVATION_NUMBER`.  Deprecated."
          ],
          "type": "string"
        },
        "countryCode": {
          "description": "Country code used to display the card's country (when the user is not in\nthat country), as well as to display localized content when content is not\navailable in the user's locale.",
          "type": "string"
        },
        "customConfirmationCodeLabel": {
          "$ref": "LocalizedString",
          "description": "A custom label to use for the confirmation code value\n(`eventTicketObject.reservationInfo.confirmationCode`) on the\ncard detail view. This should only be used if the default\n\"Confirmation Code\" label or one of the `confirmationCodeLabel`\noptions is not sufficient.\n\nBoth `confirmationCodeLabel` and\n`customConfirmationCodeLabel` may not be set. If neither is set,\nthe label will default to \"Confirmation Code\", localized. If the\nconfirmation code field is unset, this label will not be used."
        },
        "customGateLabel": {
          "$ref": "LocalizedString",
          "description": "A custom label to use for the gate value\n(`eventTicketObject.seatInfo.gate`) on the card detail view.\nThis should only be used if the default \"Gate\" label or one of the\n`gateLabel` options is not sufficient.\n\nBoth `gateLabel` and `customGateLabel` may not be\nset. If neither is set, the label will default to \"Gate\", localized. If the\ngate field is unset, this label will not be used."
        },
        "customRowLabel": {
          "$ref": "LocalizedString",
          "description": "A custom label to use for the row value\n(`eventTicketObject.seatInfo.row`) on the card detail view. This\nshould only be used if the default \"Row\" label or one of the\n`rowLabel` options is not sufficient.\n\nBoth `rowLabel` and `customRowLabel` may not be set.\nIf neither is set, the label will default to \"Row\", localized. If the row\nfield is unset, this label will not be used."
        },
        "customSeatLabel": {
          "$ref": "LocalizedString",
          "description": "A custom label to use for the seat value\n(`eventTicketObject.seatInfo.seat`) on the card detail view.\nThis should only be used if the default \"Seat\" label or one of the\n`seatLabel` options is not sufficient.\n\nBoth `seatLabel` and `customSeatLabel` may not be\nset. If neither is set, the label will default to \"Seat\", localized. If the\nseat field is unset, this label will not be used."
        },
        "customSectionLabel": {
          "$ref": "LocalizedString",
          "description": "A custom label to use for the section value\n(`eventTicketObject.seatInfo.section`) on the card detail view.\nThis should only be used if the default \"Section\" label or one of the\n`sectionLabel` options is not sufficient.\n\nBoth `sectionLabel` and `customSectionLabel` may not\nbe set. If neither is set, the label will default to \"Section\", localized.\nIf the section field is unset, this label will not be used."
        },
        "dateTime": {
          "$ref": "EventDateTime",
          "description": "The date & time information of the event."
        },
        "enableSmartTap": {
          "description": "Available only to Smart Tap enabled partners.  Contact support for\nadditional guidance.",
          "type": "boolean"
        },
        "eventId": {
          "description": "The ID of the event. This ID should be unique for every event in an\naccount. It is used to group tickets together if the user has saved\nmultiple tickets for the same event. It can be at most 64 characters.\n\nIf provided, the grouping will be stable. Be wary of unintentional\ncollision to avoid grouping tickets that should not be grouped. If you use\nonly one class per event, you can simply set this to the\n`classId` (with or without the issuer ID portion).\n\nIf not provided, the platform will attempt to use other data to group\ntickets (potentially unstable).",
          "type": "string"
        },
        "eventName": {
          "$ref": "LocalizedString",
          "description": "Required. The name of the event, such as \"LA Dodgers at SF Giants\"."
        },
        "finePrint": {
          "$ref": "LocalizedString",
          "description": "The fine print, terms, or conditions of the ticket."
        },
        "gateLabel": {
          "description": "The label to use for the gate value\n(`eventTicketObject.seatInfo.gate`) on the card detail view.\nEach available option maps to a set of localized strings, so that\ntranslations are shown to the user based on their locale.\n\nBoth `gateLabel` and `customGateLabel` may not be\nset. If neither is set, the label will default to \"Gate\", localized. If the\ngate field is unset, this label will not be used.",
          "enum": [
            "GATE_LABEL_UNSPECIFIED",
            "GATE",
            "gate",
            "DOOR",
            "door",
            "ENTRANCE",
            "entrance"
          ],
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `GATE`.  Deprecated.",
            "",
            "Legacy alias for `DOOR`.  Deprecated.",
            "",
            "Legacy alias for `ENTRANCE`.  Deprecated."
          ],
          "type": "string"
        },
        "heroImage": {
          "$ref": "Image",
          "description": "Optional banner image displayed on the front of the card. If none is\npresent, nothing will be displayed. The image will display at 100% width."
        },
        "hexBackgroundColor": {
          "description": "The background color for the card. If not set the dominant color of the\nhero image is used, and if no hero image is set, the dominant color of the\nlogo is used. The format is #<var>rrggbb</var> where <var>rrggbb</var> is a\nhex RGB triplet, such as `#ffcc00`. You can also use the\nshorthand version of the RGB triplet which is #<var>rgb</var>, such as\n`#fc0`.",
          "type": "string"
        },
        "homepageUri": {
          "$ref": "Uri",
          "description": "The URI of your application's home page. Populating the URI in this field\nresults in the exact same behavior as populating an URI in linksModuleData\n(when an object is rendered, a link to the homepage is shown in what would\nusually be thought of as the linksModuleData section of the object)."
        },
        "id": {
          "description": "Required. The unique identifier for a class. This ID must be unique across all\nclasses from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
          "type": "string"
        },
        "imageModulesData": {
          "description": "Image module data. The maximum number of these fields displayed is 1 from\nobject level and 1 for class object level.",
          "items": {
            "$ref": "ImageModuleData"
          },
          "type": "array"
        },
        "infoModuleData": {
          "$ref": "InfoModuleData",
          "description": "Deprecated. Use textModulesData instead."
        },
        "issuerName": {
          "description": "Required. The issuer name. Recommended maximum length is 20 characters to ensure full\nstring is displayed on smaller screens.",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n`\"walletobjects#eventTicketClass\"`.",
          "type": "string"
        },
        "linksModuleData": {
          "$ref": "LinksModuleData",
          "description": "Links module data. If links module data is also defined on the object, both\nwill be displayed."
        },
        "localizedIssuerName": {
          "$ref": "LocalizedString",
          "description": "Translated strings for the issuer_name. Recommended maximum length is 20\ncharacters to ensure full string is displayed on smaller screens."
        },
        "locations": {
          "items": {
            "$ref": "LatLongPoint"
          },
          "type": "array"
        },
        "logo": {
          "$ref": "Image",
          "description": "The logo image of the ticket. This image is displayed in the card detail\nview of the app."
        },
        "messages": {
          "description": "An array of messages displayed in the app. All users of this object will\nreceive its associated messages. The maximum number of these fields is 10.",
          "items": {
            "$ref": "Message"
          },
          "type": "array"
        },
        "multipleDevicesAndHoldersAllowedStatus": {
          "description": "Identifies whether multiple users and devices will save the same object\nreferencing this class.",
          "enum": [
            "STATUS_UNSPECIFIED",
            "MULTIPLE_HOLDERS",
            "multipleHolders",
            "ONE_USER_ALL_DEVICES",
            "oneUserAllDevices",
            "ONE_USER_ONE_DEVICE",
            "oneUserOneDevice"
          ],
          "enumDescriptions": [
            "",
            "Multiple users on multiple devices are allowed.",
            "Legacy alias for `MULTIPLE_HOLDERS`.  Deprecated.",
            "One user on multiple devices is allowed.",
            "Legacy alias for `ONE_USER_ALL_DEVICES`.  Deprecated.",
            "Intended for use by select partners in limited circumstances. Contact\nsupport for additional information.",
            "Legacy alias for `ONE_USER_ONE_DEVICE`.  Deprecated."
          ],
          "type": "string"
        },
        "redemptionIssuers": {
          "description": "Available only to Smart Tap enabled partners. Contact support for\nadditional guidance.",
          "items": {
            "format": "int64",
            "type": "string"
          },
          "type": "array"
        },
        "review": {
          "$ref": "Review",
          "description": "The review comments set by the platform when a class is marked\n`approved` or `rejected`."
        },
        "reviewStatus": {
          "description": "Required. The status of the class. This field can be set to `draft`\nor `underReview` using the insert, patch, or update API calls.\nOnce the review state is changed from `draft` it may not be\nchanged back to `draft`.\n\nYou should keep this field to `draft` when the class is under\ndevelopment. A `draft` class cannot be used to create any\nobject.\n\nYou should set this field to `underReview` when you\nbelieve the class is ready for use. The platform will automatically set\nthis field to `approved` and it can be immediately used to\ncreate or migrate objects.\n\nWhen updating an already `approved` class you should keep\nsetting this field to `underReview`.",
          "enum": [
            "REVIEW_STATUS_UNSPECIFIED",
            "UNDER_REVIEW",
            "underReview",
            "APPROVED",
            "approved",
            "REJECTED",
            "rejected",
            "DRAFT",
            "draft"
          ],
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `UNDER_REVIEW`.  Deprecated.",
            "",
            "Legacy alias for `APPROVED`.  Deprecated.",
            "",
            "Legacy alias for `REJECTED`.  Deprecated.",
            "",
            "Legacy alias for `DRAFT`.  Deprecated."
          ],
          "type": "string"
        },
        "rowLabel": {
          "description": "The label to use for the row value\n(`eventTicketObject.seatInfo.row`) on the card detail view. Each\navailable option maps to a set of localized strings, so that translations\nare shown to the user based on their locale.\n\nBoth `rowLabel` and `customRowLabel` may not be set.\nIf neither is set, the label will default to \"Row\", localized. If the row\nfield is unset, this label will not be used.",
          "enum": [
            "ROW_LABEL_UNSPECIFIED",
            "ROW",
            "row"
          ],
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `ROW`.  Deprecated."
          ],
          "type": "string"
        },
        "seatLabel": {
          "description": "The label to use for the seat value\n(`eventTicketObject.seatInfo.seat`) on the card detail view.\nEach available option maps to a set of localized strings, so that\ntranslations are shown to the user based on their locale.\n\nBoth `seatLabel` and `customSeatLabel` may not be\nset. If neither is set, the label will default to \"Seat\", localized. If the\nseat field is unset, this label will not be used.",
          "enum": [
            "SEAT_LABEL_UNSPECIFIED",
            "SEAT",
            "seat"
          ],
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `SEAT`.  Deprecated."
          ],
          "type": "string"
        },
        "sectionLabel": {
          "description": "The label to use for the section value\n(`eventTicketObject.seatInfo.section`) on the card detail view.\nEach available option maps to a set of localized strings, so that\ntranslations are shown to the user based on their locale.\n\nBoth `sectionLabel` and `customSectionLabel` may not\nbe set. If neither is set, the label will default to \"Section\", localized.\nIf the section field is unset, this label will not be used.",
          "enum": [
            "SECTION_LABEL_UNSPECIFIED",
            "SECTION",
            "section",
            "THEATER",
            "theater"
          ],
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `SECTION`.  Deprecated.",
            "",
            "Legacy alias for `THEATER`.  Deprecated."
          ],
          "type": "string"
        },
        "textModulesData": {
          "description": "Text module data. If text module data is also defined on the class, both\nwill be displayed. The maximum number of these fields displayed is 10 from\nthe object and 10 from the class.",
          "items": {
            "$ref": "TextModuleData"
          },
          "type": "array"
        },
        "venue": {
          "$ref": "EventVenue",
          "description": "Event venue details."
        },
        "version": {
          "description": "Deprecated",
          "format": "int64",
          "type": "string"
        },
        "wordMark": {
          "$ref": "Image",
          "description": "Deprecated."
        }
      },
      "type": "object"
    },
    "EventTicketClassAddMessageResponse": {
      "id": "EventTicketClassAddMessageResponse",
      "properties": {
        "resource": {
          "$ref": "EventTicketClass",
          "description": "The updated EventTicketClass resource."
        }
      },
      "type": "object"
    },
    "EventTicketClassListResponse": {
      "id": "EventTicketClassListResponse",
      "properties": {
        "pagination": {
          "$ref": "Pagination",
          "description": "Pagination of the response."
        },
        "resources": {
          "description": "Resources corresponding to the list request.",
          "items": {
            "$ref": "EventTicketClass"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "EventTicketObject": {
      "id": "EventTicketObject",
      "properties": {
        "appLinkData": {
          "$ref": "AppLinkData",
          "description": "Optional information about the partner app link."
        },
        "barcode": {
          "$ref": "Barcode",
          "description": "The barcode type and value."
        },
        "classId": {
          "description": "Required. The class associated with this object. The class must be of the same type\nas this object, must already exist, and must be approved.\n\nClass IDs should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you.",
          "type": "string"
        },
        "classReference": {
          "$ref": "EventTicketClass",
          "description": "A copy of the inherited fields of the parent class. These fields are\nretrieved during a GET."
        },
        "disableExpirationNotification": {
          "description": "Indicates if notifications should explicitly be suppressed. If this field\nis set to true, regardless of the `messages` field, expiration\nnotifications to the user will be suppressed. By default, this field is set\nto false.\n\nCurrently, this can only be set for offers.",
          "type": "boolean"
        },
        "faceValue": {
          "$ref": "Money",
          "description": "The face value of the ticket, matching what would be printed on a physical\nversion of the ticket."
        },
        "groupingInfo": {
          "$ref": "GroupingInfo",
          "description": "Grouping info for event tickets."
        },
        "hasLinkedDevice": {
          "description": "Whether this object is currently linked to a single device. This field is\nset by the platform when a user saves the object, linking it to their\ndevice. Intended for use by select partners. Contact support for\nadditional information.",
          "type": "boolean"
        },
        "hasUsers": {
          "description": "Indicates if the object has users. This field is set by the platform.",
          "type": "boolean"
        },
        "id": {
          "description": "Required. The unique identifier for an object. This ID must be unique across all\nobjects from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. The unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
          "type": "string"
        },
        "imageModulesData": {
          "description": "Image module data. The maximum number of these fields displayed is 1 from\nobject level and 1 for class object level.",
          "items": {
            "$ref": "ImageModuleData"
          },
          "type": "array"
        },
        "infoModuleData": {
          "$ref": "InfoModuleData",
          "description": "Deprecated. Use textModulesData instead."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n`\"walletobjects#eventTicketObject\"`.",
          "type": "string"
        },
        "linkedOfferIds": {
          "description": "A list of offer objects linked to this event ticket.  The offer objects\nmust already exist.\n\nOffer object IDs should follow the format\n<var>issuer ID</var>.<var>identifier</var> where the former is issued by\nGoogle and latter is chosen by you.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "linksModuleData": {
          "$ref": "LinksModuleData",
          "description": "Links module data. If links module data is also defined on the class, both\nwill be displayed."
        },
        "locations": {
          "description": "The list of locations where the object can be used. The platform uses this\ninformation to trigger geolocated notifications to users. Note that\nlocations in the object override locations in the class which override\nlocations in the Google Places ID.",
          "items": {
            "$ref": "LatLongPoint"
          },
          "type": "array"
        },
        "messages": {
          "description": "An array of messages displayed in the app. All users of this object will\nreceive its associated messages. The maximum number of these fields is 10.",
          "items": {
            "$ref": "Message"
          },
          "type": "array"
        },
        "reservationInfo": {
          "$ref": "EventReservationInfo",
          "description": "Reservation details for this ticket. This is expected to be shared amongst\nall tickets that were purchased in the same order."
        },
        "seatInfo": {
          "$ref": "EventSeat",
          "description": "Seating details for this ticket."
        },
        "smartTapRedemptionValue": {
          "description": "Available only to Smart Tap enabled partners. Contact support for\nadditional guidance.",
          "type": "string"
        },
        "state": {
          "description": "Required. The state of the object. This field is used to determine how an object is\ndisplayed in the app. For example, an `inactive` object is no\nlonger displayed in the Google Pay app.",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "active",
            "COMPLETED",
            "completed",
            "EXPIRED",
            "expired",
            "INACTIVE",
            "inactive"
          ],
          "enumDescriptions": [
            "",
            "Object is active and displayed to with other active objects.",
            "Legacy alias for `ACTIVE`.  Deprecated.",
            "",
            "Legacy alias for `COMPLETED`.  Deprecated.",
            "Object is no longer valid (`validTimeInterval` passed).",
            "Legacy alias for `EXPIRED`.  Deprecated.",
            "",
            "Legacy alias for `INACTIVE`.  Deprecated."
          ],
          "type": "string"
        },
        "textModulesData": {
          "description": "Text module data. If text module data is also defined on the class, both\nwill be displayed. The maximum number of these fields displayed is 10 from\nthe object and 10 from the class.",
          "items": {
            "$ref": "TextModuleData"
          },
          "type": "array"
        },
        "ticketHolderName": {
          "description": "Name of the ticket holder, if the ticket is assigned to a person. E.g.\n\"John Doe\" or \"Jane Doe\".",
          "type": "string"
        },
        "ticketNumber": {
          "description": "The number of the ticket. This can be a unique identifier across all\ntickets in an issuer's system, all tickets for the event (e.g.\nXYZ1234512345), or all tickets in the order (1, 2, 3, etc.).",
          "type": "string"
        },
        "ticketType": {
          "$ref": "LocalizedString",
          "description": "The type of the ticket, such as \"Adult\" or \"Child\", or \"VIP\" or \"Standard\"."
        },
        "validTimeInterval": {
          "$ref": "TimeInterval",
          "description": "The time period this object will be `active` and object can be\nused. An object's state will be changed to `expired` when this\ntime period has passed."
        },
        "version": {
          "description": "Deprecated",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EventTicketObjectAddMessageResponse": {
      "id": "EventTicketObjectAddMessageResponse",
      "properties": {
        "resource": {
          "$ref": "EventTicketObject",
          "description": "The updated EventTicketObject resource."
        }
      },
      "type": "object"
    },
    "EventTicketObjectListResponse": {
      "id": "EventTicketObjectListResponse",
      "properties": {
        "pagination": {
          "$ref": "Pagination",
          "description": "Pagination of the response."
        },
        "resources": {
          "description": "Resources corresponding to the list request.",
          "items": {
            "$ref": "EventTicketObject"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "EventVenue": {
      "id": "EventVenue",
      "properties": {
        "address": {
          "$ref": "LocalizedString",
          "description": "The address of the venue, such as \"24 Willie Mays Plaza\\nSan Francisco, CA\n94107\". Address lines are separated by line feed (`\\n`)\ncharacters.\n\nThis is required."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n`\"walletobjects#eventVenue\"`.",
          "type": "string"
        },
        "name": {
          "$ref": "LocalizedString",
          "description": "The name of the venue, such as \"AT&T Park\".\n\nThis is required."
        }
      },
      "type": "object"
    },
    "FieldReference": {
      "id": "FieldReference",
      "properties": {
        "dateFormat": {
          "description": "Only valid if the `fieldPath` references a date field. Chooses\nhow the date field will be formatted and displayed in the UI.",
          "enum": [
            "DATE_FORMAT_UNSPECIFIED",
            "DATE_TIME",
            "dateTime",
            "DATE_ONLY",
            "dateOnly",
            "TIME_ONLY",
            "timeOnly",
            "DATE_TIME_YEAR",
            "dateTimeYear",
            "DATE_YEAR",
            "dateYear"
          ],
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `DATE_TIME`.  Deprecated.",
            "",
            "Legacy alias for `DATE_ONLY`.  Deprecated.",
            "",
            "Legacy alias for `TIME_ONLY`.  Deprecated.",
            "",
            "Legacy alias for `DATE_TIME_YEAR`.  Deprecated.",
            "",
            "Legacy alias for `DATE_YEAR`.  Deprecated."
          ],
          "type": "string"
        },
        "fieldPath": {
          "description": "Path to the field being referenced, prefixed with \"object\" or \"class\" and\nseparated with dots. For example, it may be the string\n\"object.purchaseDetails.purchasePrice\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "FieldSelector": {
      "id": "FieldSelector",
      "properties": {
        "fields": {
          "description": "If more than one reference is supplied, then the first one that references\na non-empty field will be displayed.",
          "items": {
            "$ref": "FieldReference"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "FirstRowOption": {
      "id": "FirstRowOption",
      "properties": {
        "fieldOption": {
          "$ref": "FieldSelector",
          "description": "A reference to the field to be displayed in the first row."
        },
        "transitOption": {
          "enum": [
            "TRANSIT_OPTION_UNSPECIFIED",
            "ORIGIN_AND_DESTINATION_NAMES",
            "originAndDestinationNames",
            "ORIGIN_AND_DESTINATION_CODES",
            "originAndDestinationCodes",
            "ORIGIN_NAME",
            "originName"
          ],
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `ORIGIN_AND_DESTINATION_NAMES`.  Deprecated.",
            "",
            "Legacy alias for `ORIGIN_AND_DESTINATION_CODES`.  Deprecated.",
            "",
            "Legacy alias for `ORIGIN_NAME`.  Deprecated."
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "FlightCarrier": {
      "id": "FlightCarrier",
      "properties": {
        "airlineAllianceLogo": {
          "$ref": "Image",
          "description": "A logo for the airline alliance, displayed above the QR code that the\npassenger scans to board."
        },
        "airlineLogo": {
          "$ref": "Image",
          "description": "A logo for the airline described by carrierIataCode and\nlocalizedAirlineName. This logo will be rendered at the top of the detailed\ncard view."
        },
        "airlineName": {
          "$ref": "LocalizedString",
          "description": "A localized name of the airline specified by carrierIataCode. If unset,\n`issuer_name` or `localized_issuer_name` from\n`FlightClass` will be used for display purposes.\n\neg: \"Swiss Air\" for \"LX\""
        },
        "carrierIataCode": {
          "description": "Two character IATA airline code of the marketing carrier (as opposed to\noperating carrier). Exactly one of this or `carrierIcaoCode`\nneeds to be provided for `carrier` and\n`operatingCarrier`.\n\neg: \"LX\" for Swiss Air",
          "type": "string"
        },
        "carrierIcaoCode": {
          "description": "Three character ICAO airline code of the marketing carrier (as opposed to\noperating carrier). Exactly one of this or `carrierIataCode`\nneeds to be provided for `carrier` and\n`operatingCarrier`.\n\neg: \"EZY\" for Easy Jet",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n`\"walletobjects#flightCarrier\"`.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "FlightClass": {
      "id": "FlightClass",
      "properties": {
        "allowMultipleUsersPerObject": {
          "description": "Deprecated. Use `multipleDevicesAndHoldersAllowedStatus`\ninstead.",
          "type": "boolean"
        },
        "boardingAndSeatingPolicy": {
          "$ref": "BoardingAndSeatingPolicy",
          "description": "Policies for boarding and seating. These will inform which labels will be\nshown to users."
        },
        "callbackOptions": {
          "$ref": "CallbackOptions",
          "description": "Callback options to be used to call the issuer back for every save/delete\nof an object for this class by the end-user.\nAll objects of this class are eligible for the callback."
        },
        "classTemplateInfo": {
          "$ref": "ClassTemplateInfo",
          "description": "Template information about how the class should be displayed.\nIf unset, Google will fallback to a default set of fields to display."
        },
        "countryCode": {
          "description": "Country code used to display the card's country (when the user is not in\nthat country), as well as to display localized content when content is not\navailable in the user's locale.",
          "type": "string"
        },
        "destination": {
          "$ref": "AirportInfo",
          "description": "Required. Destination airport."
        },
        "enableSmartTap": {
          "description": "Available only to Smart Tap enabled partners.  Contact support for\nadditional guidance.",
          "type": "boolean"
        },
        "flightHeader": {
          "$ref": "FlightHeader",
          "description": "Required. Information about the flight carrier and number."
        },
        "flightStatus": {
          "description": "Status of this flight.\n\nIf unset, Google will compute status based on data from other sources, such\nas FlightStats, etc.\n\nNote: Google-computed status will not be returned in API responses.",
          "enum": [
            "FLIGHT_STATUS_UNSPECIFIED",
            "SCHEDULED",
            "scheduled",
            "ACTIVE",
            "active",
            "LANDED",
            "landed",
            "CANCELLED",
            "cancelled",
            "REDIRECTED",
            "redirected",
            "DIVERTED",
            "diverted"
          ],
          "enumDescriptions": [
            "",
            "Flight is on time, early, or delayed.",
            "Legacy alias for `SCHEDULED`.  Deprecated.",
            "Flight is in progress (taxiing, taking off, landing, airborne).",
            "Legacy alias for `ACTIVE`.  Deprecated.",
            "Flight landed at the original destination.",
            "Legacy alias for `LANDED`.  Deprecated.",
            "Flight is cancelled.",
            "Legacy alias for `CANCELLED`.  Deprecated.",
            "Flight is airborne but heading to a different airport than the original\ndestination.",
            "Legacy alias for `REDIRECTED`.  Deprecated.",
            "Flight has already landed at a different airport than the original\ndestination.",
            "Legacy alias for `DIVERTED`.  Deprecated."
          ],
          "type": "string"
        },
        "heroImage": {
          "$ref": "Image",
          "description": "Optional banner image displayed on the front of the card. If none is\npresent, nothing will be displayed. The image will display at 100% width."
        },
        "hexBackgroundColor": {
          "description": "The background color for the card. If not set the dominant color of the\nhero image is used, and if no hero image is set, the dominant color of the\nlogo is used. The format is #<var>rrggbb</var> where <var>rrggbb</var> is a\nhex RGB triplet, such as `#ffcc00`. You can also use the\nshorthand version of the RGB triplet which is #<var>rgb</var>, such as\n`#fc0`.",
          "type": "string"
        },
        "homepageUri": {
          "$ref": "Uri",
          "description": "The URI of your application's home page. Populating the URI in this field\nresults in the exact same behavior as populating an URI in linksModuleData\n(when an object is rendered, a link to the homepage is shown in what would\nusually be thought of as the linksModuleData section of the object)."
        },
        "id": {
          "description": "Required. The unique identifier for a class. This ID must be unique across all\nclasses from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
          "type": "string"
        },
        "imageModulesData": {
          "description": "Image module data. The maximum number of these fields displayed is 1 from\nobject level and 1 for class object level.",
          "items": {
            "$ref": "ImageModuleData"
          },
          "type": "array"
        },
        "infoModuleData": {
          "$ref": "InfoModuleData",
          "description": "Deprecated. Use textModulesData instead."
        },
        "issuerName": {
          "description": "Required. The issuer name. Recommended maximum length is 20 characters to ensure full\nstring is displayed on smaller screens.",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n`\"walletobjects#flightClass\"`.",
          "type": "string"
        },
        "linksModuleData": {
          "$ref": "LinksModuleData",
          "description": "Links module data. If links module data is also defined on the object, both\nwill be displayed."
        },
        "localBoardingDateTime": {
          "description": "The boarding time as it would be printed on the boarding pass.\n\nThis is an ISO 8601 extended format date/time without an offset. Time may\nbe specified up to millisecond precision.\n\neg: `2027-03-05T06:30:00`\n\nThis should be the local date/time at the airport (not a UTC time).\n\nGoogle will reject the request if UTC offset is provided. Time zones will\nbe calculated by Google based on departure airport.\n\nIf this is not set, Google will set it based on data from other sources.",
          "type": "string"
        },
        "localEstimatedOrActualArrivalDateTime": {
          "description": "The estimated time the aircraft plans to reach the destination gate (not\nthe runway) or the actual time it reached the gate.\n\nThis field should be set if at least one of the below is true:\n  <ul>\n    <li>It differs from the scheduled time. Google will use it to calculate\n    the delay.</li>\n    <li>The aircraft already arrived at the gate.  Google will use it to\n    inform the user that the flight has arrived at the gate.</li>\n  </ul>\n\nThis is an ISO 8601 extended format date/time without an offset. Time may\nbe specified up to millisecond precision.\n\neg: `2027-03-05T06:30:00`\n\nThis should be the local date/time at the airport (not a UTC time).\n\nGoogle will reject the request if UTC offset is provided. Time zones will\nbe calculated by Google based on arrival airport.\n\nIf this is not set, Google will set it based on data from other sources.",
          "type": "string"
        },
        "localEstimatedOrActualDepartureDateTime": {
          "description": "The estimated time the aircraft plans to pull from the gate or the actual\ntime the aircraft already pulled from the gate.  Note: This is not the\nrunway time.\n\nThis field should be set if at least one of the below is true:\n  <ul>\n    <li>It differs from the scheduled time. Google will use it to calculate\n    the delay.</li>\n    <li>The aircraft already pulled from the gate. Google will use it to\n    inform the user when the flight actually departed.</li>\n  </ul>\n\nThis is an ISO 8601 extended format date/time without an offset. Time may\nbe specified up to millisecond precision.\n\neg: `2027-03-05T06:30:00`\n\nThis should be the local date/time at the airport (not a UTC time).\n\nGoogle will reject the request if UTC offset is provided. Time zones will\nbe calculated by Google based on departure airport.\n\nIf this is not set, Google will set it based on data from other sources.",
          "type": "string"
        },
        "localGateClosingDateTime": {
          "description": "The gate closing time as it would be printed on the boarding pass. Do not\nset this field if you do not want to print it in the boarding pass.\n\nThis is an ISO 8601 extended format date/time without an offset. Time may\nbe specified up to millisecond precision.\n\neg: `2027-03-05T06:30:00`\n\nThis should be the local date/time at the airport (not a UTC time).\n\nGoogle will reject the request if UTC offset is provided. Time zones will\nbe calculated by Google based on departure airport.",
          "type": "string"
        },
        "localizedIssuerName": {
          "$ref": "LocalizedString",
          "description": "Translated strings for the issuer_name. Recommended maximum length is 20\ncharacters to ensure full string is displayed on smaller screens."
        },
        "localScheduledArrivalDateTime": {
          "description": "The scheduled time the aircraft plans to reach the destination gate (not\nthe runway).\n\nNote: This field should not change too close to the flight time. For\nupdates to departure times (delays, etc), please set\n`localEstimatedOrActualArrivalDateTime`.\n\nThis is an ISO 8601 extended format date/time without an offset. Time may\nbe specified up to millisecond precision.\n\neg: `2027-03-05T06:30:00`\n\nThis should be the local date/time at the airport (not a UTC time).\n\nGoogle will reject the request if UTC offset is provided. Time zones will\nbe calculated by Google based on arrival airport.\n\nIf this is not set, Google will set it based on data from other sources.",
          "type": "string"
        },
        "localScheduledDepartureDateTime": {
          "description": "Required. The scheduled date and time when the aircraft is expected to depart the\ngate (not the runway)\n\nNote: This field should not change too close to the departure time. For\nupdates to departure times (delays, etc), please set\n`localEstimatedOrActualDepartureDateTime`.\n\nThis is an ISO 8601 extended format date/time without an offset. Time may\nbe specified up to millisecond precision.\n\neg: `2027-03-05T06:30:00`\n\nThis should be the local date/time at the airport (not a UTC time).\n\nGoogle will reject the request if UTC offset is provided. Time zones will\nbe calculated by Google based on departure airport.",
          "type": "string"
        },
        "locations": {
          "items": {
            "$ref": "LatLongPoint"
          },
          "type": "array"
        },
        "messages": {
          "description": "An array of messages displayed in the app. All users of this object will\nreceive its associated messages. The maximum number of these fields is 10.",
          "items": {
            "$ref": "Message"
          },
          "type": "array"
        },
        "multipleDevicesAndHoldersAllowedStatus": {
          "description": "Identifies whether multiple users and devices will save the same object\nreferencing this class.",
          "enum": [
            "STATUS_UNSPECIFIED",
            "MULTIPLE_HOLDERS",
            "multipleHolders",
            "ONE_USER_ALL_DEVICES",
            "oneUserAllDevices",
            "ONE_USER_ONE_DEVICE",
            "oneUserOneDevice"
          ],
          "enumDescriptions": [
            "",
            "Multiple users on multiple devices are allowed.",
            "Legacy alias for `MULTIPLE_HOLDERS`.  Deprecated.",
            "One user on multiple devices is allowed.",
            "Legacy alias for `ONE_USER_ALL_DEVICES`.  Deprecated.",
            "Intended for use by select partners in limited circumstances. Contact\nsupport for additional information.",
            "Legacy alias for `ONE_USER_ONE_DEVICE`.  Deprecated."
          ],
          "type": "string"
        },
        "origin": {
          "$ref": "AirportInfo",
          "description": "Required. Origin airport."
        },
        "redemptionIssuers": {
          "description": "Available only to Smart Tap enabled partners. Contact support for\nadditional guidance.",
          "items": {
            "format": "int64",
            "type": "string"
          },
          "type": "array"
        },
        "review": {
          "$ref": "Review",
          "description": "The review comments set by the platform when a class is marked\n`approved` or `rejected`."
        },
        "reviewStatus": {
          "description": "Required. The status of the class. This field can be set to `draft`\nor `underReview` using the insert, patch, or update API calls.\nOnce the review state is changed from `draft` it may not be\nchanged back to `draft`.\n\nYou should keep this field to `draft` when the class is under\ndevelopment. A `draft` class cannot be used to create any\nobject.\n\nYou should set this field to `underReview` when you\nbelieve the class is ready for use. The platform will automatically set\nthis field to `approved` and it can be immediately used to\ncreate or migrate objects.\n\nWhen updating an already `approved` class you should keep\nsetting this field to `underReview`.",
          "enum": [
            "REVIEW_STATUS_UNSPECIFIED",
            "UNDER_REVIEW",
            "underReview",
            "APPROVED",
            "approved",
            "REJECTED",
            "rejected",
            "DRAFT",
            "draft"
          ],
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `UNDER_REVIEW`.  Deprecated.",
            "",
            "Legacy alias for `APPROVED`.  Deprecated.",
            "",
            "Legacy alias for `REJECTED`.  Deprecated.",
            "",
            "Legacy alias for `DRAFT`.  Deprecated."
          ],
          "type": "string"
        },
        "textModulesData": {
          "description": "Text module data. If text module data is also defined on the class, both\nwill be displayed. The maximum number of these fields displayed is 10 from\nthe object and 10 from the class.",
          "items": {
            "$ref": "TextModuleData"
          },
          "type": "array"
        },
        "version": {
          "description": "Deprecated",
          "format": "int64",
          "type": "string"
        },
        "wordMark": {
          "$ref": "Image",
          "description": "Deprecated."
        }
      },
      "type": "object"
    },
    "FlightClassAddMessageResponse": {
      "id": "FlightClassAddMessageResponse",
      "properties": {
        "resource": {
          "$ref": "FlightClass",
          "description": "The updated FlightClass resource."
        }
      },
      "type": "object"
    },
    "FlightClassListResponse": {
      "id": "FlightClassListResponse",
      "properties": {
        "pagination": {
          "$ref": "Pagination",
          "description": "Pagination of the response."
        },
        "resources": {
          "description": "Resources corresponding to the list request.",
          "items": {
            "$ref": "FlightClass"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "FlightHeader": {
      "id": "FlightHeader",
      "properties": {
        "carrier": {
          "$ref": "FlightCarrier",
          "description": "Information about airline carrier. This is a required property of\n`flightHeader`."
        },
        "flightNumber": {
          "description": "The flight number without IATA carrier code.  This field should contain\nonly digits. This is a required property of `flightHeader`.\n\neg: \"123\"",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n`\"walletobjects#flightHeader\"`.",
          "type": "string"
        },
        "operatingCarrier": {
          "$ref": "FlightCarrier",
          "description": "Information about operating airline carrier."
        },
        "operatingFlightNumber": {
          "description": "The flight number used by the operating carrier without IATA carrier code.\nThis field should contain only digits.\n\neg: \"234\"",
          "type": "string"
        }
      },
      "type": "object"
    },
    "FlightObject": {
      "id": "FlightObject",
      "properties": {
        "appLinkData": {
          "$ref": "AppLinkData",
          "description": "Optional information about the partner app link."
        },
        "barcode": {
          "$ref": "Barcode",
          "description": "The barcode type and value."
        },
        "boardingAndSeatingInfo": {
          "$ref": "BoardingAndSeatingInfo",
          "description": "Passenger specific information about boarding and seating."
        },
        "classId": {
          "description": "Required. The class associated with this object. The class must be of the same type\nas this object, must already exist, and must be approved.\n\nClass IDs should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you.",
          "type": "string"
        },
        "classReference": {
          "$ref": "FlightClass",
          "description": "A copy of the inherited fields of the parent class. These fields are\nretrieved during a GET."
        },
        "disableExpirationNotification": {
          "description": "Indicates if notifications should explicitly be suppressed. If this field\nis set to true, regardless of the `messages` field, expiration\nnotifications to the user will be suppressed. By default, this field is set\nto false.\n\nCurrently, this can only be set for Flights.",
          "type": "boolean"
        },
        "hasLinkedDevice": {
          "description": "Whether this object is currently linked to a single device. This field is\nset by the platform when a user saves the object, linking it to their\ndevice. Intended for use by select partners. Contact support for\nadditional information.",
          "type": "boolean"
        },
        "hasUsers": {
          "description": "Indicates if the object has users. This field is set by the platform.",
          "type": "boolean"
        },
        "hexBackgroundColor": {
          "description": "The background color for the card. If not set the dominant color of the\nhero image is used, and if no hero image is set, the dominant color of the\nlogo is used. The format is #<var>rrggbb</var> where <var>rrggbb</var> is a\nhex RGB triplet, such as `#ffcc00`. You can also use the\nshorthand version of the RGB triplet which is #<var>rgb</var>, such as\n`#fc0`.",
          "type": "string"
        },
        "id": {
          "description": "Required. The unique identifier for an object. This ID must be unique across all\nobjects from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. The unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
          "type": "string"
        },
        "imageModulesData": {
          "description": "Image module data. The maximum number of these fields displayed is 1 from\nobject level and 1 for class object level.",
          "items": {
            "$ref": "ImageModuleData"
          },
          "type": "array"
        },
        "infoModuleData": {
          "$ref": "InfoModuleData",
          "description": "Deprecated. Use textModulesData instead."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n`\"walletobjects#flightObject\"`.",
          "type": "string"
        },
        "linksModuleData": {
          "$ref": "LinksModuleData",
          "description": "Links module data. If links module data is also defined on the class, both\nwill be displayed."
        },
        "locations": {
          "description": "The list of locations where the object can be used. The platform uses this\ninformation to trigger geolocated notifications to users. Note that\nlocations in the object override locations in the class which override\nlocations in the Google Places ID.",
          "items": {
            "$ref": "LatLongPoint"
          },
          "type": "array"
        },
        "messages": {
          "description": "An array of messages displayed in the app. All users of this object will\nreceive its associated messages. The maximum number of these fields is 10.",
          "items": {
            "$ref": "Message"
          },
          "type": "array"
        },
        "passengerName": {
          "description": "Required. Passenger name as it would appear on the boarding pass.\n\neg: \"Dave M Gahan\" or \"Gahan/Dave\" or \"GAHAN/DAVEM\"",
          "type": "string"
        },
        "reservationInfo": {
          "$ref": "ReservationInfo",
          "description": "Required. Information about flight reservation."
        },
        "securityProgramLogo": {
          "$ref": "Image",
          "description": "An image for the security program that applies to the passenger."
        },
        "smartTapRedemptionValue": {
          "description": "Available only to Smart Tap enabled partners. Contact support for\nadditional guidance.",
          "type": "string"
        },
        "state": {
          "description": "Required. The state of the object. This field is used to determine how an object is\ndisplayed in the app. For example, an `inactive` object is no\nlonger displayed in the Google Pay app.",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "active",
            "COMPLETED",
            "completed",
            "EXPIRED",
            "expired",
            "INACTIVE",
            "inactive"
          ],
          "enumDescriptions": [
            "",
            "Object is active and displayed to with other active objects.",
            "Legacy alias for `ACTIVE`.  Deprecated.",
            "",
            "Legacy alias for `COMPLETED`.  Deprecated.",
            "Object is no longer valid (`validTimeInterval` passed).",
            "Legacy alias for `EXPIRED`.  Deprecated.",
            "",
            "Legacy alias for `INACTIVE`.  Deprecated."
          ],
          "type": "string"
        },
        "textModulesData": {
          "description": "Text module data. If text module data is also defined on the class, both\nwill be displayed. The maximum number of these fields displayed is 10 from\nthe object and 10 from the class.",
          "items": {
            "$ref": "TextModuleData"
          },
          "type": "array"
        },
        "validTimeInterval": {
          "$ref": "TimeInterval",
          "description": "The time period this object will be `active` and object can be\nused. An object's state will be changed to `expired` when this\ntime period has passed."
        },
        "version": {
          "description": "Deprecated",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "FlightObjectAddMessageResponse": {
      "id": "FlightObjectAddMessageResponse",
      "properties": {
        "resource": {
          "$ref": "FlightObject",
          "description": "The updated FlightObject resource."
        }
      },
      "type": "object"
    },
    "FlightObjectListResponse": {
      "id": "FlightObjectListResponse",
      "properties": {
        "pagination": {
          "$ref": "Pagination",
          "description": "Pagination of the response."
        },
        "resources": {
          "description": "Resources corresponding to the list request.",
          "items": {
            "$ref": "FlightObject"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "FrequentFlyerInfo": {
      "id": "FrequentFlyerInfo",
      "properties": {
        "frequentFlyerNumber": {
          "description": "Frequent flyer number.\n\nRequired for each nested object of kind\n`walletobjects#frequentFlyerInfo`.",
          "type": "string"
        },
        "frequentFlyerProgramName": {
          "$ref": "LocalizedString",
          "description": "Frequent flyer program name. eg: \"Lufthansa Miles & More\""
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n`\"walletobjects#frequentFlyerInfo\"`.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GiftCardClass": {
      "id": "GiftCardClass",
      "properties": {
        "allowBarcodeRedemption": {
          "description": "Determines whether the merchant supports gift card redemption using\nbarcode. If true, app displays a barcode for the gift card on the Gift card\ndetails screen. If false, a barcode is not displayed.",
          "type": "boolean"
        },
        "allowMultipleUsersPerObject": {
          "description": "Deprecated. Use `multipleDevicesAndHoldersAllowedStatus`\ninstead.",
          "type": "boolean"
        },
        "callbackOptions": {
          "$ref": "CallbackOptions",
          "description": "Callback options to be used to call the issuer back for every save/delete\nof an object for this class by the end-user.\nAll objects of this class are eligible for the callback."
        },
        "cardNumberLabel": {
          "description": "The label to display for the card number, such as \"Card Number\".",
          "type": "string"
        },
        "classTemplateInfo": {
          "$ref": "ClassTemplateInfo",
          "description": "Template information about how the class should be displayed.\nIf unset, Google will fallback to a default set of fields to display."
        },
        "countryCode": {
          "description": "Country code used to display the card's country (when the user is not in\nthat country), as well as to display localized content when content is not\navailable in the user's locale.",
          "type": "string"
        },
        "enableSmartTap": {
          "description": "Available only to Smart Tap enabled partners.  Contact support for\nadditional guidance.",
          "type": "boolean"
        },
        "eventNumberLabel": {
          "description": "The label to display for event number, such as \"Target Event #\".",
          "type": "string"
        },
        "heroImage": {
          "$ref": "Image",
          "description": "Optional banner image displayed on the front of the card. If none is\npresent, nothing will be displayed. The image will display at 100% width."
        },
        "hexBackgroundColor": {
          "description": "The background color for the card. If not set the dominant color of the\nhero image is used, and if no hero image is set, the dominant color of the\nlogo is used. The format is #<var>rrggbb</var> where <var>rrggbb</var> is a\nhex RGB triplet, such as `#ffcc00`. You can also use the\nshorthand version of the RGB triplet which is #<var>rgb</var>, such as\n`#fc0`.",
          "type": "string"
        },
        "homepageUri": {
          "$ref": "Uri",
          "description": "The URI of your application's home page. Populating the URI in this field\nresults in the exact same behavior as populating an URI in linksModuleData\n(when an object is rendered, a link to the homepage is shown in what would\nusually be thought of as the linksModuleData section of the object)."
        },
        "id": {
          "description": "Required. The unique identifier for a class. This ID must be unique across all\nclasses from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
          "type": "string"
        },
        "imageModulesData": {
          "description": "Image module data. The maximum number of these fields displayed is 1 from\nobject level and 1 for class object level.",
          "items": {
            "$ref": "ImageModuleData"
          },
          "type": "array"
        },
        "infoModuleData": {
          "$ref": "InfoModuleData",
          "description": "Deprecated. Use textModulesData instead."
        },
        "issuerName": {
          "description": "Required. The issuer name. Recommended maximum length is 20 characters to ensure full\nstring is displayed on smaller screens.",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n`\"walletobjects#giftCardClass\"`.",
          "type": "string"
        },
        "linksModuleData": {
          "$ref": "LinksModuleData",
          "description": "Links module data. If links module data is also defined on the object, both\nwill be displayed."
        },
        "localizedCardNumberLabel": {
          "$ref": "LocalizedString",
          "description": "Translated strings for the card_number_label."
        },
        "localizedEventNumberLabel": {
          "$ref": "LocalizedString",
          "description": "Translated strings for the event_number_label."
        },
        "localizedIssuerName": {
          "$ref": "LocalizedString",
          "description": "Translated strings for the issuer_name. Recommended maximum length is 20\ncharacters to ensure full string is displayed on smaller screens."
        },
        "localizedMerchantName": {
          "$ref": "LocalizedString",
          "description": "Translated strings for the merchant_name. The app may display an ellipsis\nafter the first 20 characters to ensure full string is displayed on smaller\nscreens."
        },
        "localizedPinLabel": {
          "$ref": "LocalizedString",
          "description": "Translated strings for the pin_label."
        },
        "locations": {
          "description": "The list of locations where the object can be used. The platform uses this\ninformation to trigger geolocated notifications to users. Note that\nlocations in the object override locations in the class which override\nlocations in the Google Places ID.",
          "items": {
            "$ref": "LatLongPoint"
          },
          "type": "array"
        },
        "merchantName": {
          "description": "Merchant name, such as \"Adam's Apparel\". The app may display an ellipsis\nafter the first 20 characters to ensure full string is displayed on smaller\nscreens.",
          "type": "string"
        },
        "messages": {
          "description": "An array of messages displayed in the app. All users of this object will\nreceive its associated messages. The maximum number of these fields is 10.",
          "items": {
            "$ref": "Message"
          },
          "type": "array"
        },
        "multipleDevicesAndHoldersAllowedStatus": {
          "description": "Identifies whether multiple users and devices will save the same object\nreferencing this class.",
          "enum": [
            "STATUS_UNSPECIFIED",
            "MULTIPLE_HOLDERS",
            "multipleHolders",
            "ONE_USER_ALL_DEVICES",
            "oneUserAllDevices",
            "ONE_USER_ONE_DEVICE",
            "oneUserOneDevice"
          ],
          "enumDescriptions": [
            "",
            "Multiple users on multiple devices are allowed.",
            "Legacy alias for `MULTIPLE_HOLDERS`.  Deprecated.",
            "One user on multiple devices is allowed.",
            "Legacy alias for `ONE_USER_ALL_DEVICES`.  Deprecated.",
            "Intended for use by select partners in limited circumstances. Contact\nsupport for additional information.",
            "Legacy alias for `ONE_USER_ONE_DEVICE`.  Deprecated."
          ],
          "type": "string"
        },
        "pinLabel": {
          "description": "The label to display for the PIN, such as \"4-digit PIN\".",
          "type": "string"
        },
        "programLogo": {
          "$ref": "Image",
          "description": "The logo of the gift card program or company. This logo is displayed in\nboth the details and list views of the app."
        },
        "redemptionIssuers": {
          "description": "Available only to Smart Tap enabled partners. Contact support for\nadditional guidance.",
          "items": {
            "format": "int64",
            "type": "string"
          },
          "type": "array"
        },
        "review": {
          "$ref": "Review",
          "description": "The review comments set by the platform when a class is marked\n`approved` or `rejected`."
        },
        "reviewStatus": {
          "description": "Required. The status of the class. This field can be set to `draft`\nor `underReview` using the insert, patch, or update API calls.\nOnce the review state is changed from `draft` it may not be\nchanged back to `draft`.\n\nYou should keep this field to `draft` when the class is under\ndevelopment. A `draft` class cannot be used to create any\nobject.\n\nYou should set this field to `underReview` when you\nbelieve the class is ready for use. The platform will automatically set\nthis field to `approved` and it can be immediately used to\ncreate or migrate objects.\n\nWhen updating an already `approved` class you should keep\nsetting this field to `underReview`.",
          "enum": [
            "REVIEW_STATUS_UNSPECIFIED",
            "UNDER_REVIEW",
            "underReview",
            "APPROVED",
            "approved",
            "REJECTED",
            "rejected",
            "DRAFT",
            "draft"
          ],
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `UNDER_REVIEW`.  Deprecated.",
            "",
            "Legacy alias for `APPROVED`.  Deprecated.",
            "",
            "Legacy alias for `REJECTED`.  Deprecated.",
            "",
            "Legacy alias for `DRAFT`.  Deprecated."
          ],
          "type": "string"
        },
        "textModulesData": {
          "description": "Text module data. If text module data is also defined on the class, both\nwill be displayed. The maximum number of these fields displayed is 10 from\nthe object and 10 from the class.",
          "items": {
            "$ref": "TextModuleData"
          },
          "type": "array"
        },
        "version": {
          "description": "Deprecated",
          "format": "int64",
          "type": "string"
        },
        "wordMark": {
          "$ref": "Image",
          "description": "Deprecated."
        }
      },
      "type": "object"
    },
    "GiftCardClassAddMessageResponse": {
      "id": "GiftCardClassAddMessageResponse",
      "properties": {
        "resource": {
          "$ref": "GiftCardClass",
          "description": "The updated GiftCardClass resource."
        }
      },
      "type": "object"
    },
    "GiftCardClassListResponse": {
      "id": "GiftCardClassListResponse",
      "properties": {
        "pagination": {
          "$ref": "Pagination",
          "description": "Pagination of the response."
        },
        "resources": {
          "description": "Resources corresponding to the list request.",
          "items": {
            "$ref": "GiftCardClass"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GiftCardObject": {
      "id": "GiftCardObject",
      "properties": {
        "appLinkData": {
          "$ref": "AppLinkData",
          "description": "Optional information about the partner app link."
        },
        "balance": {
          "$ref": "Money",
          "description": "The card's monetary balance."
        },
        "balanceUpdateTime": {
          "$ref": "DateTime",
          "description": "The date and time when the balance was last updated.\n\nOffset is required.\n\nIf balance is updated and this property is not provided, system will\ndefault to the current time."
        },
        "barcode": {
          "$ref": "Barcode",
          "description": "The barcode type and value."
        },
        "cardNumber": {
          "description": "Required. The card's number.",
          "type": "string"
        },
        "classId": {
          "description": "Required. The class associated with this object. The class must be of the same type\nas this object, must already exist, and must be approved.\n\nClass IDs should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you.",
          "type": "string"
        },
        "classReference": {
          "$ref": "GiftCardClass",
          "description": "A copy of the inherited fields of the parent class. These fields are\nretrieved during a GET."
        },
        "disableExpirationNotification": {
          "description": "Indicates if notifications should explicitly be suppressed. If this field\nis set to true, regardless of the `messages` field, expiration\nnotifications to the user will be suppressed. By default, this field is set\nto false.\n\nCurrently, this can only be set for offers.",
          "type": "boolean"
        },
        "eventNumber": {
          "description": "The card's event number, an optional field used by some gift cards.",
          "type": "string"
        },
        "hasLinkedDevice": {
          "description": "Whether this object is currently linked to a single device. This field is\nset by the platform when a user saves the object, linking it to their\ndevice. Intended for use by select partners. Contact support for\nadditional information.",
          "type": "boolean"
        },
        "hasUsers": {
          "description": "Indicates if the object has users. This field is set by the platform.",
          "type": "boolean"
        },
        "id": {
          "description": "Required. The unique identifier for an object. This ID must be unique across all\nobjects from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. The unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
          "type": "string"
        },
        "imageModulesData": {
          "description": "Image module data. The maximum number of these fields displayed is 1 from\nobject level and 1 for class object level.",
          "items": {
            "$ref": "ImageModuleData"
          },
          "type": "array"
        },
        "infoModuleData": {
          "$ref": "InfoModuleData",
          "description": "Deprecated. Use textModulesData instead."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n`\"walletobjects#giftCardObject\"`.",
          "type": "string"
        },
        "linksModuleData": {
          "$ref": "LinksModuleData",
          "description": "Links module data. If links module data is also defined on the class, both\nwill be displayed."
        },
        "locations": {
          "description": "The list of locations where the object can be used. The platform uses this\ninformation to trigger geolocated notifications to users. Note that\nlocations in the object override locations in the class which override\nlocations in the Google Places ID.",
          "items": {
            "$ref": "LatLongPoint"
          },
          "type": "array"
        },
        "messages": {
          "description": "An array of messages displayed in the app. All users of this object will\nreceive its associated messages. The maximum number of these fields is 10.",
          "items": {
            "$ref": "Message"
          },
          "type": "array"
        },
        "pin": {
          "description": "The card's PIN.",
          "type": "string"
        },
        "smartTapRedemptionValue": {
          "description": "Available only to Smart Tap enabled partners. Contact support for\nadditional guidance.",
          "type": "string"
        },
        "state": {
          "description": "Required. The state of the object. This field is used to determine how an object is\ndisplayed in the app. For example, an `inactive` object is no\nlonger displayed in the Google Pay app.",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "active",
            "COMPLETED",
            "completed",
            "EXPIRED",
            "expired",
            "INACTIVE",
            "inactive"
          ],
          "enumDescriptions": [
            "",
            "Object is active and displayed to with other active objects.",
            "Legacy alias for `ACTIVE`.  Deprecated.",
            "",
            "Legacy alias for `COMPLETED`.  Deprecated.",
            "Object is no longer valid (`validTimeInterval` passed).",
            "Legacy alias for `EXPIRED`.  Deprecated.",
            "",
            "Legacy alias for `INACTIVE`.  Deprecated."
          ],
          "type": "string"
        },
        "textModulesData": {
          "description": "Text module data. If text module data is also defined on the class, both\nwill be displayed. The maximum number of these fields displayed is 10 from\nthe object and 10 from the class.",
          "items": {
            "$ref": "TextModuleData"
          },
          "type": "array"
        },
        "validTimeInterval": {
          "$ref": "TimeInterval",
          "description": "The time period this object will be `active` and object can be\nused. An object's state will be changed to `expired` when this\ntime period has passed."
        },
        "version": {
          "description": "Deprecated",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GiftCardObjectAddMessageResponse": {
      "id": "GiftCardObjectAddMessageResponse",
      "properties": {
        "resource": {
          "$ref": "GiftCardObject",
          "description": "The updated GiftCardObject resource."
        }
      },
      "type": "object"
    },
    "GiftCardObjectListResponse": {
      "id": "GiftCardObjectListResponse",
      "properties": {
        "pagination": {
          "$ref": "Pagination",
          "description": "Pagination of the response."
        },
        "resources": {
          "description": "Resources corresponding to the list request.",
          "items": {
            "$ref": "GiftCardObject"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GroupingInfo": {
      "description": "NEXT_ID: 2",
      "id": "GroupingInfo",
      "properties": {
        "sortIndex": {
          "description": "Optional index for sorting the passes when they are grouped with\nother passes. Passes with lower sort index are shown before passes with\nhigher sort index. If unspecified, the value is assumed to be INT_MAX.\nFor two passes with same sort index, the sorting behavior is undefined.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Image": {
      "description": "Wrapping type for Google hosted images.",
      "id": "Image",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n`\"walletobjects#image\"`.",
          "type": "string"
        },
        "sourceUri": {
          "$ref": "ImageUri",
          "description": "The URI for the image."
        }
      },
      "type": "object"
    },
    "ImageModuleData": {
      "id": "ImageModuleData",
      "properties": {
        "id": {
          "description": "The ID associated with an image module. This field is here to enable ease\nof management of image modules.",
          "type": "string"
        },
        "mainImage": {
          "$ref": "Image",
          "description": "A 100% width image."
        }
      },
      "type": "object"
    },
    "ImageUri": {
      "id": "ImageUri",
      "properties": {
        "description": {
          "description": "Additional information about the image, which is unused and retained only\nfor backward compatibility.",
          "type": "string"
        },
        "localizedDescription": {
          "$ref": "LocalizedString",
          "description": "Translated strings for the description, which are unused and retained only\nfor backward compatibility."
        },
        "uri": {
          "description": "The location of the image. URIs must have a scheme.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InfoModuleData": {
      "id": "InfoModuleData",
      "properties": {
        "labelValueRows": {
          "description": "A list of collections of labels and values. These will be displayed one\nafter the other in a singular column.",
          "items": {
            "$ref": "LabelValueRow"
          },
          "type": "array"
        },
        "showLastUpdateTime": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Issuer": {
      "id": "Issuer",
      "properties": {
        "contactInfo": {
          "$ref": "IssuerContactInfo",
          "description": "Issuer contact information."
        },
        "homepageUrl": {
          "description": "URL for the issuer's home page.",
          "type": "string"
        },
        "issuerId": {
          "description": "The unique identifier for an issuer account. This is automatically\ngenerated when the issuer is inserted.",
          "format": "int64",
          "type": "string"
        },
        "name": {
          "description": "The account name of the issuer.",
          "type": "string"
        },
        "smartTapMerchantData": {
          "$ref": "SmartTapMerchantData",
          "description": "Available only to Smart Tap enabled partners.  Contact support for\nadditional guidance."
        }
      },
      "type": "object"
    },
    "IssuerContactInfo": {
      "id": "IssuerContactInfo",
      "properties": {
        "alertsEmails": {
          "description": "Email addresses which will receive alerts.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "email": {
          "description": "The primary contact email address.",
          "type": "string"
        },
        "name": {
          "description": "The primary contact name.",
          "type": "string"
        },
        "phone": {
          "description": "The primary contact phone number.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "IssuerListResponse": {
      "id": "IssuerListResponse",
      "properties": {
        "resources": {
          "description": "Resources corresponding to the list request.",
          "items": {
            "$ref": "Issuer"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "IssuerToUserInfo": {
      "id": "IssuerToUserInfo",
      "properties": {
        "action": {
          "enum": [
            "ACTION_UNSPECIFIED",
            "S2AP",
            "s2ap",
            "SIGN_UP",
            "signUp"
          ],
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `S2AP`.  Deprecated.",
            "",
            "Legacy alias for `SIGN_UP`.  Deprecated."
          ],
          "type": "string"
        },
        "signUpInfo": {
          "$ref": "SignUpInfo"
        },
        "url": {
          "description": "Currently not used, consider deprecating.",
          "type": "string"
        },
        "value": {
          "description": "JSON web token for action S2AP.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "JwtInsertResponse": {
      "id": "JwtInsertResponse",
      "properties": {
        "resources": {
          "$ref": "Resources",
          "description": "Data that corresponds to the ids of the provided classes and objects in\nthe JWT. resources will only include the non-empty arrays (i.e. if the JWT\nonly includes eventTicketObjects, then that is the only field that will be\npresent in resources)."
        },
        "saveUri": {
          "description": "A URI that, when opened, will allow the end user to save the object(s)\nidentified in the JWT to their Google account.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "JwtResource": {
      "id": "JwtResource",
      "properties": {
        "jwt": {
          "description": "A string representing a JWT of the format described at\nhttps://developers.google.com/pay/passes/reference/s2w-reference#google-pay-api-for-passes-jwt",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LabelValue": {
      "description": "A pair of text strings to be displayed in the details view. Note we no longer\ndisplay LabelValue/LabelValueRow as a table, instead a list of items.",
      "id": "LabelValue",
      "properties": {
        "label": {
          "description": "The label for a specific row and column. Recommended maximum is 15\ncharacters for a two-column layout and 30 characters for a one-column\nlayout.",
          "type": "string"
        },
        "localizedLabel": {
          "$ref": "LocalizedString",
          "description": "Translated strings for the label. Recommended maximum is 15 characters for\na two-column layout and 30 characters for a one-column layout."
        },
        "localizedValue": {
          "$ref": "LocalizedString",
          "description": "Translated strings for the value. Recommended maximum is 15 characters for\na two-column layout and 30 characters for a one-column layout."
        },
        "value": {
          "description": "The value for a specific row and column. Recommended maximum is 15\ncharacters for a two-column layout and 30 characters for a one-column\nlayout.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LabelValueRow": {
      "id": "LabelValueRow",
      "properties": {
        "columns": {
          "description": "A list of labels and values. These will be displayed in a singular column,\none after the other, not in multiple columns, despite the field name.",
          "items": {
            "$ref": "LabelValue"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "LatLongPoint": {
      "id": "LatLongPoint",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n`\"walletobjects#latLongPoint\"`.",
          "type": "string"
        },
        "latitude": {
          "description": "The latitude specified as any value in the range of -90.0 through +90.0,\nboth inclusive. Values outside these bounds will be rejected.",
          "format": "double",
          "type": "number"
        },
        "longitude": {
          "description": "The longitude specified in the range -180.0 through +180.0, both inclusive.\nValues outside these bounds will be rejected.",
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "LinksModuleData": {
      "id": "LinksModuleData",
      "properties": {
        "uris": {
          "description": "The list of URIs.",
          "items": {
            "$ref": "Uri"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListTemplateOverride": {
      "id": "ListTemplateOverride",
      "properties": {
        "firstRowOption": {
          "$ref": "FirstRowOption",
          "description": "Specifies from a predefined set of options what the will be displayed in\nthe first row."
        },
        "secondRowOption": {
          "$ref": "FieldSelector",
          "description": "A reference to the field to be displayed in the second row.\n\nThis option is only displayed if there are not multiple user objects in a\ngroup. If there is a group, the second row will always display the\ndeparture date shared by all objects."
        },
        "thirdRowOption": {
          "$ref": "FieldSelector",
          "description": "A reference to the field to be displayed in the third row.\n\nThis option is only displayed if there are not multiple user objects in a\ngroup. If there is a group, the third row will always display the number\nof objects in the group. Eg: \"3 passes\""
        }
      },
      "type": "object"
    },
    "LocalizedString": {
      "id": "LocalizedString",
      "properties": {
        "defaultValue": {
          "$ref": "TranslatedString",
          "description": "Contains the string to be displayed if no appropriate translation is\navailable."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n`\"walletobjects#localizedString\"`.",
          "type": "string"
        },
        "translatedValues": {
          "description": "Contains the translations for the string.",
          "items": {
            "$ref": "TranslatedString"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "LoyaltyClass": {
      "id": "LoyaltyClass",
      "properties": {
        "accountIdLabel": {
          "description": "The account ID label, such as \"Member ID.\" Recommended maximum length is 15\ncharacters to ensure full string is displayed on smaller screens.",
          "type": "string"
        },
        "accountNameLabel": {
          "description": "The account name label, such as \"Member Name.\" Recommended maximum length\nis 15 characters to ensure full string is displayed on smaller screens.",
          "type": "string"
        },
        "allowMultipleUsersPerObject": {
          "description": "Deprecated. Use `multipleDevicesAndHoldersAllowedStatus`\ninstead.",
          "type": "boolean"
        },
        "callbackOptions": {
          "$ref": "CallbackOptions",
          "description": "Callback options to be used to call the issuer back for every save/delete\nof an object for this class by the end-user.\nAll objects of this class are eligible for the callback."
        },
        "classTemplateInfo": {
          "$ref": "ClassTemplateInfo",
          "description": "Template information about how the class should be displayed.\nIf unset, Google will fallback to a default set of fields to display."
        },
        "countryCode": {
          "description": "Country code used to display the card's country (when the user is not in\nthat country), as well as to display localized content when content is not\navailable in the user's locale.",
          "type": "string"
        },
        "discoverableProgram": {
          "$ref": "DiscoverableProgram",
          "description": "Information about how the class may be discovered and instantiated from\nwithin the Google Pay app."
        },
        "enableSmartTap": {
          "description": "Available only to Smart Tap enabled partners.  Contact support for\nadditional guidance.",
          "type": "boolean"
        },
        "heroImage": {
          "$ref": "Image",
          "description": "Optional banner image displayed on the front of the card. If none is\npresent, nothing will be displayed. The image will display at 100% width."
        },
        "hexBackgroundColor": {
          "description": "The background color for the card. If not set the dominant color of the\nhero image is used, and if no hero image is set, the dominant color of the\nlogo is used. The format is #<var>rrggbb</var> where <var>rrggbb</var> is a\nhex RGB triplet, such as `#ffcc00`. You can also use the\nshorthand version of the RGB triplet which is #<var>rgb</var>, such as\n`#fc0`.",
          "type": "string"
        },
        "homepageUri": {
          "$ref": "Uri",
          "description": "The URI of your application's home page. Populating the URI in this field\nresults in the exact same behavior as populating an URI in linksModuleData\n(when an object is rendered, a link to the homepage is shown in what would\nusually be thought of as the linksModuleData section of the object)."
        },
        "id": {
          "description": "Required. The unique identifier for a class. This ID must be unique across all\nclasses from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
          "type": "string"
        },
        "imageModulesData": {
          "description": "Image module data. The maximum number of these fields displayed is 1 from\nobject level and 1 for class object level.",
          "items": {
            "$ref": "ImageModuleData"
          },
          "type": "array"
        },
        "infoModuleData": {
          "$ref": "InfoModuleData",
          "description": "Deprecated. Use textModulesData instead."
        },
        "issuerName": {
          "description": "Required. The issuer name. Recommended maximum length is 20 characters to ensure full\nstring is displayed on smaller screens.",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n`\"walletobjects#loyaltyClass\"`.",
          "type": "string"
        },
        "linksModuleData": {
          "$ref": "LinksModuleData",
          "description": "Links module data. If links module data is also defined on the object, both\nwill be displayed."
        },
        "localizedAccountIdLabel": {
          "$ref": "LocalizedString",
          "description": "Translated strings for the account_id_label. Recommended maximum length is\n15 characters to ensure full string is displayed on smaller screens."
        },
        "localizedAccountNameLabel": {
          "$ref": "LocalizedString",
          "description": "Translated strings for the account_name_label. Recommended maximum length\nis 15 characters to ensure full string is displayed on smaller screens."
        },
        "localizedIssuerName": {
          "$ref": "LocalizedString",
          "description": "Translated strings for the issuer_name. Recommended maximum length is 20\ncharacters to ensure full string is displayed on smaller screens."
        },
        "localizedProgramName": {
          "$ref": "LocalizedString",
          "description": "Translated strings for the program_name. The app may display an ellipsis\nafter the first 20 characters to ensure full string is displayed on smaller\nscreens."
        },
        "localizedRewardsTier": {
          "$ref": "LocalizedString",
          "description": "Translated strings for the rewards_tier. Recommended maximum length is 7\ncharacters to ensure full string is displayed on smaller screens."
        },
        "localizedRewardsTierLabel": {
          "$ref": "LocalizedString",
          "description": "Translated strings for the rewards_tier_label. Recommended maximum length\nis 9 characters to ensure full string is displayed on smaller screens."
        },
        "localizedSecondaryRewardsTier": {
          "$ref": "LocalizedString",
          "description": "Translated strings for the secondary_rewards_tier."
        },
        "localizedSecondaryRewardsTierLabel": {
          "$ref": "LocalizedString",
          "description": "Translated strings for the secondary_rewards_tier_label."
        },
        "locations": {
          "description": "The list of locations where the object can be used. The platform uses this\ninformation to trigger geolocated notifications to users. Note that\nlocations in the object override locations in the class which override\nlocations in the Google Places ID.",
          "items": {
            "$ref": "LatLongPoint"
          },
          "type": "array"
        },
        "messages": {
          "description": "An array of messages displayed in the app. All users of this object will\nreceive its associated messages. The maximum number of these fields is 10.",
          "items": {
            "$ref": "Message"
          },
          "type": "array"
        },
        "multipleDevicesAndHoldersAllowedStatus": {
          "description": "Identifies whether multiple users and devices will save the same object\nreferencing this class.",
          "enum": [
            "STATUS_UNSPECIFIED",
            "MULTIPLE_HOLDERS",
            "multipleHolders",
            "ONE_USER_ALL_DEVICES",
            "oneUserAllDevices",
            "ONE_USER_ONE_DEVICE",
            "oneUserOneDevice"
          ],
          "enumDescriptions": [
            "",
            "Multiple users on multiple devices are allowed.",
            "Legacy alias for `MULTIPLE_HOLDERS`.  Deprecated.",
            "One user on multiple devices is allowed.",
            "Legacy alias for `ONE_USER_ALL_DEVICES`.  Deprecated.",
            "Intended for use by select partners in limited circumstances. Contact\nsupport for additional information.",
            "Legacy alias for `ONE_USER_ONE_DEVICE`.  Deprecated."
          ],
          "type": "string"
        },
        "programLogo": {
          "$ref": "Image",
          "description": "Required. The logo of the loyalty program or company. This logo is displayed in both\nthe details and list views of the app."
        },
        "programName": {
          "description": "Required. The program name, such as \"Adam's Apparel\". The app may display an ellipsis\nafter the first 20 characters to ensure full string is displayed on smaller\nscreens.",
          "type": "string"
        },
        "redemptionIssuers": {
          "description": "Available only to Smart Tap enabled partners. Contact support for\nadditional guidance.",
          "items": {
            "format": "int64",
            "type": "string"
          },
          "type": "array"
        },
        "review": {
          "$ref": "Review",
          "description": "The review comments set by the platform when a class is marked\n`approved` or `rejected`."
        },
        "reviewStatus": {
          "description": "Required. The status of the class. This field can be set to `draft`\nor `underReview` using the insert, patch, or update API calls.\nOnce the review state is changed from `draft` it may not be\nchanged back to `draft`.\n\nYou should keep this field to `draft` when the class is under\ndevelopment. A `draft` class cannot be used to create any\nobject.\n\nYou should set this field to `underReview` when you\nbelieve the class is ready for use. The platform will automatically set\nthis field to `approved` and it can be immediately used to\ncreate or migrate objects.\n\nWhen updating an already `approved` class you should keep\nsetting this field to `underReview`.",
          "enum": [
            "REVIEW_STATUS_UNSPECIFIED",
            "UNDER_REVIEW",
            "underReview",
            "APPROVED",
            "approved",
            "REJECTED",
            "rejected",
            "DRAFT",
            "draft"
          ],
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `UNDER_REVIEW`.  Deprecated.",
            "",
            "Legacy alias for `APPROVED`.  Deprecated.",
            "",
            "Legacy alias for `REJECTED`.  Deprecated.",
            "",
            "Legacy alias for `DRAFT`.  Deprecated."
          ],
          "type": "string"
        },
        "rewardsTier": {
          "description": "The rewards tier, such as \"Gold\" or \"Platinum.\" Recommended maximum length\nis 7 characters to ensure full string is displayed on smaller screens.",
          "type": "string"
        },
        "rewardsTierLabel": {
          "description": "The rewards tier label, such as \"Rewards Tier.\" Recommended maximum length\nis 9 characters to ensure full string is displayed on smaller screens.",
          "type": "string"
        },
        "secondaryRewardsTier": {
          "description": "The secondary rewards tier, such as \"Gold\" or \"Platinum.\"",
          "type": "string"
        },
        "secondaryRewardsTierLabel": {
          "description": "The secondary rewards tier label, such as \"Rewards Tier.\"",
          "type": "string"
        },
        "textModulesData": {
          "description": "Text module data. If text module data is also defined on the class, both\nwill be displayed. The maximum number of these fields displayed is 10 from\nthe object and 10 from the class.",
          "items": {
            "$ref": "TextModuleData"
          },
          "type": "array"
        },
        "version": {
          "description": "Deprecated",
          "format": "int64",
          "type": "string"
        },
        "wordMark": {
          "$ref": "Image",
          "description": "Deprecated."
        }
      },
      "type": "object"
    },
    "LoyaltyClassAddMessageResponse": {
      "id": "LoyaltyClassAddMessageResponse",
      "properties": {
        "resource": {
          "$ref": "LoyaltyClass",
          "description": "The updated LoyaltyClass resource."
        }
      },
      "type": "object"
    },
    "LoyaltyClassListResponse": {
      "id": "LoyaltyClassListResponse",
      "properties": {
        "pagination": {
          "$ref": "Pagination",
          "description": "Pagination of the response."
        },
        "resources": {
          "description": "Resources corresponding to the list request.",
          "items": {
            "$ref": "LoyaltyClass"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "LoyaltyObject": {
      "id": "LoyaltyObject",
      "properties": {
        "accountId": {
          "description": "The loyalty account identifier. Recommended maximum length is 20\ncharacters.",
          "type": "string"
        },
        "accountName": {
          "description": "The loyalty account holder name, such as \"John Smith.\" Recommended maximum\nlength is 20 characters to ensure full string is displayed on smaller\nscreens.",
          "type": "string"
        },
        "appLinkData": {
          "$ref": "AppLinkData",
          "description": "Optional information about the partner app link."
        },
        "barcode": {
          "$ref": "Barcode",
          "description": "The barcode type and value."
        },
        "classId": {
          "description": "Required. The class associated with this object. The class must be of the same type\nas this object, must already exist, and must be approved.\n\nClass IDs should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you.",
          "type": "string"
        },
        "classReference": {
          "$ref": "LoyaltyClass",
          "description": "A copy of the inherited fields of the parent class. These fields are\nretrieved during a GET."
        },
        "disableExpirationNotification": {
          "description": "Indicates if notifications should explicitly be suppressed. If this field\nis set to true, regardless of the `messages` field, expiration\nnotifications to the user will be suppressed. By default, this field is set\nto false.\n\nCurrently, this can only be set for offers.",
          "type": "boolean"
        },
        "hasLinkedDevice": {
          "description": "Whether this object is currently linked to a single device. This field is\nset by the platform when a user saves the object, linking it to their\ndevice. Intended for use by select partners. Contact support for\nadditional information.",
          "type": "boolean"
        },
        "hasUsers": {
          "description": "Indicates if the object has users. This field is set by the platform.",
          "type": "boolean"
        },
        "id": {
          "description": "Required. The unique identifier for an object. This ID must be unique across all\nobjects from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. The unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
          "type": "string"
        },
        "imageModulesData": {
          "description": "Image module data. The maximum number of these fields displayed is 1 from\nobject level and 1 for class object level.",
          "items": {
            "$ref": "ImageModuleData"
          },
          "type": "array"
        },
        "infoModuleData": {
          "$ref": "InfoModuleData",
          "description": "Deprecated. Use textModulesData instead."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n`\"walletobjects#loyaltyObject\"`.",
          "type": "string"
        },
        "linkedOfferIds": {
          "description": "A list of offer objects linked to this loyalty card.  The offer objects\nmust already exist.\n\nOffer object IDs should follow the format\n<var>issuer ID</var>.<var>identifier</var> where the former is issued by\nGoogle and latter is chosen by you.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "linksModuleData": {
          "$ref": "LinksModuleData",
          "description": "Links module data. If links module data is also defined on the class, both\nwill be displayed."
        },
        "locations": {
          "description": "The list of locations where the object can be used. The platform uses this\ninformation to trigger geolocated notifications to users. Note that\nlocations in the object override locations in the class which override\nlocations in the Google Places ID.",
          "items": {
            "$ref": "LatLongPoint"
          },
          "type": "array"
        },
        "loyaltyPoints": {
          "$ref": "LoyaltyPoints",
          "description": "The loyalty reward points label, balance, and type."
        },
        "messages": {
          "description": "An array of messages displayed in the app. All users of this object will\nreceive its associated messages. The maximum number of these fields is 10.",
          "items": {
            "$ref": "Message"
          },
          "type": "array"
        },
        "secondaryLoyaltyPoints": {
          "$ref": "LoyaltyPoints",
          "description": "The secondary loyalty reward points label, balance, and type. Shown in\naddition to the primary loyalty points."
        },
        "smartTapRedemptionValue": {
          "description": "Available only to Smart Tap enabled partners. Contact support for\nadditional guidance.",
          "type": "string"
        },
        "state": {
          "description": "Required. The state of the object. This field is used to determine how an object is\ndisplayed in the app. For example, an `inactive` object is no\nlonger displayed in the Google Pay app.",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "active",
            "COMPLETED",
            "completed",
            "EXPIRED",
            "expired",
            "INACTIVE",
            "inactive"
          ],
          "enumDescriptions": [
            "",
            "Object is active and displayed to with other active objects.",
            "Legacy alias for `ACTIVE`.  Deprecated.",
            "",
            "Legacy alias for `COMPLETED`.  Deprecated.",
            "Object is no longer valid (`validTimeInterval` passed).",
            "Legacy alias for `EXPIRED`.  Deprecated.",
            "",
            "Legacy alias for `INACTIVE`.  Deprecated."
          ],
          "type": "string"
        },
        "textModulesData": {
          "description": "Text module data. If text module data is also defined on the class, both\nwill be displayed. The maximum number of these fields displayed is 10 from\nthe object and 10 from the class.",
          "items": {
            "$ref": "TextModuleData"
          },
          "type": "array"
        },
        "validTimeInterval": {
          "$ref": "TimeInterval",
          "description": "The time period this object will be `active` and object can be\nused. An object's state will be changed to `expired` when this\ntime period has passed."
        },
        "version": {
          "description": "Deprecated",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LoyaltyObjectAddMessageResponse": {
      "id": "LoyaltyObjectAddMessageResponse",
      "properties": {
        "resource": {
          "$ref": "LoyaltyObject",
          "description": "The updated LoyaltyObject resource."
        }
      },
      "type": "object"
    },
    "LoyaltyObjectListResponse": {
      "id": "LoyaltyObjectListResponse",
      "properties": {
        "pagination": {
          "$ref": "Pagination",
          "description": "Pagination of the response."
        },
        "resources": {
          "description": "Resources corresponding to the list request.",
          "items": {
            "$ref": "LoyaltyObject"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "LoyaltyPoints": {
      "id": "LoyaltyPoints",
      "properties": {
        "balance": {
          "$ref": "LoyaltyPointsBalance",
          "description": "The account holder's loyalty point balance, such as \"500\" or \"$10.00\".\nRecommended maximum length is 7 characters. This is a required field of\n`loyaltyPoints` and `secondaryLoyaltyPoints`."
        },
        "label": {
          "description": "The loyalty points label, such as \"Points\". Recommended maximum length is 9\ncharacters.",
          "type": "string"
        },
        "localizedLabel": {
          "$ref": "LocalizedString",
          "description": "Translated strings for the label. Recommended maximum length is 9\ncharacters."
        }
      },
      "type": "object"
    },
    "LoyaltyPointsBalance": {
      "id": "LoyaltyPointsBalance",
      "properties": {
        "double": {
          "description": "The double form of a balance. Only one of these subtypes (string, int,\ndouble, money) should be populated.",
          "format": "double",
          "type": "number"
        },
        "int": {
          "description": "The integer form of a balance. Only one of these subtypes (string, int,\ndouble, money) should be populated.",
          "format": "int32",
          "type": "integer"
        },
        "money": {
          "$ref": "Money",
          "description": "The money form of a balance. Only one of these subtypes (string, int,\ndouble, money) should be populated."
        },
        "string": {
          "description": "The string form of a balance. Only one of these subtypes (string, int,\ndouble, money) should be populated.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Message": {
      "description": "A message that will be displayed with a Valuable",
      "id": "Message",
      "properties": {
        "body": {
          "description": "The message body.",
          "type": "string"
        },
        "displayInterval": {
          "$ref": "TimeInterval",
          "description": "The period of time that the message will be displayed to users. You can\ndefine both a `startTime` and `endTime` for each\nmessage. A message is displayed immediately after a Wallet Object is\ninserted unless a `startTime` is set. The message will appear in\na list of messages indefinitely if `endTime` is not provided."
        },
        "header": {
          "description": "The message header.",
          "type": "string"
        },
        "id": {
          "description": "The ID associated with a message. This field is here to enable ease of\nmanagement of messages. Notice ID values could possibly duplicate across\nmultiple messages in the same class/instance, and care must be taken to\nselect a reasonable ID for each message.",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n`\"walletobjects#walletObjectMessage\"`.",
          "type": "string"
        },
        "localizedBody": {
          "$ref": "LocalizedString",
          "description": "Translated strings for the message body."
        },
        "localizedHeader": {
          "$ref": "LocalizedString",
          "description": "Translated strings for the message header."
        },
        "messageType": {
          "description": "The type of the message. Currently, this can only be set for offers.",
          "enum": [
            "MESSAGE_TYPE_UNSPECIFIED",
            "TEXT",
            "text",
            "EXPIRATION_NOTIFICATION",
            "expirationNotification"
          ],
          "enumDescriptions": [
            "",
            "Renders the message as text on the card details screen. This is the\ndefault message type.",
            "Legacy alias for `TEXT`.  Deprecated.",
            "Notification to display for an offer expiration. The\n`displayInterval.start.date` sets the time the notification\nwill appear. It can be set up to 30 days prior to the expiration date.\nIf a time span greater than this is specified, then the notification\nwill trigger at the 30 day mark.",
            "Legacy alias for `EXPIRATION_NOTIFICATION`.  Deprecated."
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "ModifyLinkedOfferObjects": {
      "id": "ModifyLinkedOfferObjects",
      "properties": {
        "addLinkedOfferObjectIds": {
          "description": "The linked offer object ids to add to the object.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "removeLinkedOfferObjectIds": {
          "description": "The linked offer object ids to remove from the object.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ModifyLinkedOfferObjectsRequest": {
      "id": "ModifyLinkedOfferObjectsRequest",
      "properties": {
        "linkedOfferObjectIds": {
          "$ref": "ModifyLinkedOfferObjects",
          "description": "The linked offer object ids to add or remove from the object."
        }
      },
      "type": "object"
    },
    "Money": {
      "id": "Money",
      "properties": {
        "currencyCode": {
          "description": "The currency code, such as \"USD\" or \"EUR.\"",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n`\"walletobjects#money\"`.",
          "type": "string"
        },
        "micros": {
          "description": "The unit of money amount in micros. For example, $1 USD would be\nrepresented as 1000000 micros.",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OfferClass": {
      "id": "OfferClass",
      "properties": {
        "allowMultipleUsersPerObject": {
          "description": "Deprecated. Use `multipleDevicesAndHoldersAllowedStatus`\ninstead.",
          "type": "boolean"
        },
        "callbackOptions": {
          "$ref": "CallbackOptions",
          "description": "Callback options to be used to call the issuer back for every save/delete\nof an object for this class by the end-user.\nAll objects of this class are eligible for the callback."
        },
        "classTemplateInfo": {
          "$ref": "ClassTemplateInfo",
          "description": "Template information about how the class should be displayed.\nIf unset, Google will fallback to a default set of fields to display."
        },
        "countryCode": {
          "description": "Country code used to display the card's country (when the user is not in\nthat country), as well as to display localized content when content is not\navailable in the user's locale.",
          "type": "string"
        },
        "details": {
          "description": "The details of the offer.",
          "type": "string"
        },
        "enableSmartTap": {
          "description": "Available only to Smart Tap enabled partners.  Contact support for\nadditional guidance.",
          "type": "boolean"
        },
        "finePrint": {
          "description": "The fine print or terms of the offer, such as \"20% off any t-shirt at\nAdam's Apparel.\"",
          "type": "string"
        },
        "helpUri": {
          "$ref": "Uri",
          "description": "The help link for the offer, such as\n`http://myownpersonaldomain.com/help`"
        },
        "heroImage": {
          "$ref": "Image",
          "description": "Optional banner image displayed on the front of the card. If none is\npresent, nothing will be displayed. The image will display at 100% width."
        },
        "hexBackgroundColor": {
          "description": "The background color for the card. If not set the dominant color of the\nhero image is used, and if no hero image is set, the dominant color of the\nlogo is used. The format is #<var>rrggbb</var> where <var>rrggbb</var> is a\nhex RGB triplet, such as `#ffcc00`. You can also use the\nshorthand version of the RGB triplet which is #<var>rgb</var>, such as\n`#fc0`.",
          "type": "string"
        },
        "homepageUri": {
          "$ref": "Uri",
          "description": "The URI of your application's home page. Populating the URI in this field\nresults in the exact same behavior as populating an URI in linksModuleData\n(when an object is rendered, a link to the homepage is shown in what would\nusually be thought of as the linksModuleData section of the object)."
        },
        "id": {
          "description": "Required. The unique identifier for a class. This ID must be unique across all\nclasses from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
          "type": "string"
        },
        "imageModulesData": {
          "description": "Image module data. The maximum number of these fields displayed is 1 from\nobject level and 1 for class object level.",
          "items": {
            "$ref": "ImageModuleData"
          },
          "type": "array"
        },
        "infoModuleData": {
          "$ref": "InfoModuleData",
          "description": "Deprecated. Use textModulesData instead."
        },
        "issuerName": {
          "description": "Required. The issuer name. Recommended maximum length is 20 characters to ensure full\nstring is displayed on smaller screens.",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n`\"walletobjects#offerClass\"`.",
          "type": "string"
        },
        "linksModuleData": {
          "$ref": "LinksModuleData",
          "description": "Links module data. If links module data is also defined on the object, both\nwill be displayed."
        },
        "localizedDetails": {
          "$ref": "LocalizedString",
          "description": "Translated strings for the details."
        },
        "localizedFinePrint": {
          "$ref": "LocalizedString",
          "description": "Translated strings for the fine_print."
        },
        "localizedIssuerName": {
          "$ref": "LocalizedString",
          "description": "Translated strings for the issuer_name. Recommended maximum length is 20\ncharacters to ensure full string is displayed on smaller screens."
        },
        "localizedProvider": {
          "$ref": "LocalizedString",
          "description": "Translated strings for the provider. Recommended maximum length is 12\ncharacters to ensure full string is displayed on smaller screens."
        },
        "localizedShortTitle": {
          "$ref": "LocalizedString",
          "description": "Translated strings for the short title. Recommended maximum length is 20\ncharacters."
        },
        "localizedTitle": {
          "$ref": "LocalizedString",
          "description": "Translated strings for the title. Recommended maximum length is 60\ncharacters to ensure full string is displayed on smaller screens."
        },
        "locations": {
          "description": "The list of locations where the object can be used. The platform uses this\ninformation to trigger geolocated notifications to users. Note that\nlocations in the object override locations in the class which override\nlocations in the Google Places ID.",
          "items": {
            "$ref": "LatLongPoint"
          },
          "type": "array"
        },
        "messages": {
          "description": "An array of messages displayed in the app. All users of this object will\nreceive its associated messages. The maximum number of these fields is 10.",
          "items": {
            "$ref": "Message"
          },
          "type": "array"
        },
        "multipleDevicesAndHoldersAllowedStatus": {
          "description": "Identifies whether multiple users and devices will save the same object\nreferencing this class.",
          "enum": [
            "STATUS_UNSPECIFIED",
            "MULTIPLE_HOLDERS",
            "multipleHolders",
            "ONE_USER_ALL_DEVICES",
            "oneUserAllDevices",
            "ONE_USER_ONE_DEVICE",
            "oneUserOneDevice"
          ],
          "enumDescriptions": [
            "",
            "Multiple users on multiple devices are allowed.",
            "Legacy alias for `MULTIPLE_HOLDERS`.  Deprecated.",
            "One user on multiple devices is allowed.",
            "Legacy alias for `ONE_USER_ALL_DEVICES`.  Deprecated.",
            "Intended for use by select partners in limited circumstances. Contact\nsupport for additional information.",
            "Legacy alias for `ONE_USER_ONE_DEVICE`.  Deprecated."
          ],
          "type": "string"
        },
        "provider": {
          "description": "Required. The offer provider (either the aggregator name or merchant name).\nRecommended maximum length is 12 characters to ensure full string is\ndisplayed on smaller screens.",
          "type": "string"
        },
        "redemptionChannel": {
          "description": "Required. The redemption channels applicable to this offer.",
          "enum": [
            "REDEMPTION_CHANNEL_UNSPECIFIED",
            "INSTORE",
            "instore",
            "ONLINE",
            "online",
            "BOTH",
            "both",
            "TEMPORARY_PRICE_REDUCTION",
            "temporaryPriceReduction"
          ],
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `INSTORE`.  Deprecated.",
            "",
            "Legacy alias for `ONLINE`.  Deprecated.",
            "",
            "Legacy alias for `BOTH`.  Deprecated.",
            "",
            "Legacy alias for `TEMPORARY_PRICE_REDUCTION`.  Deprecated."
          ],
          "type": "string"
        },
        "redemptionIssuers": {
          "description": "Available only to Smart Tap enabled partners. Contact support for\nadditional guidance.",
          "items": {
            "format": "int64",
            "type": "string"
          },
          "type": "array"
        },
        "review": {
          "$ref": "Review",
          "description": "The review comments set by the platform when a class is marked\n`approved` or `rejected`."
        },
        "reviewStatus": {
          "description": "Required. The status of the class. This field can be set to `draft` or\nThe status of the class. This field can be set to `draft`\nor `underReview` using the insert, patch, or update API calls.\nOnce the review state is changed from `draft` it may not be\nchanged back to `draft`.\n\nYou should keep this field to `draft` when the class is under\ndevelopment. A `draft` class cannot be used to create any\nobject.\n\nYou should set this field to `underReview` when you\nbelieve the class is ready for use. The platform will automatically set\nthis field to `approved` and it can be immediately used to\ncreate or migrate objects.\n\nWhen updating an already `approved` class you should keep\nsetting this field to `underReview`.",
          "enum": [
            "REVIEW_STATUS_UNSPECIFIED",
            "UNDER_REVIEW",
            "underReview",
            "APPROVED",
            "approved",
            "REJECTED",
            "rejected",
            "DRAFT",
            "draft"
          ],
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `UNDER_REVIEW`.  Deprecated.",
            "",
            "Legacy alias for `APPROVED`.  Deprecated.",
            "",
            "Legacy alias for `REJECTED`.  Deprecated.",
            "",
            "Legacy alias for `DRAFT`.  Deprecated."
          ],
          "type": "string"
        },
        "shortTitle": {
          "description": "A shortened version of the title of the offer, such as \"20% off,\" shown to\nusers as a quick reference to the offer contents. Recommended maximum\nlength is 20 characters.",
          "type": "string"
        },
        "textModulesData": {
          "description": "Text module data. If text module data is also defined on the class, both\nwill be displayed. The maximum number of these fields displayed is 10 from\nthe object and 10 from the class.",
          "items": {
            "$ref": "TextModuleData"
          },
          "type": "array"
        },
        "title": {
          "description": "Required. The title of the offer, such as \"20% off any t-shirt.\" Recommended maximum\nlength is 60 characters to ensure full string is displayed on smaller\nscreens.",
          "type": "string"
        },
        "titleImage": {
          "$ref": "Image",
          "description": "The title image of the offer. This image is displayed in both the details\nand list views of the app."
        },
        "version": {
          "description": "Deprecated",
          "format": "int64",
          "type": "string"
        },
        "wordMark": {
          "$ref": "Image",
          "description": "Deprecated."
        }
      },
      "type": "object"
    },
    "OfferClassAddMessageResponse": {
      "id": "OfferClassAddMessageResponse",
      "properties": {
        "resource": {
          "$ref": "OfferClass",
          "description": "The updated OfferClass resource."
        }
      },
      "type": "object"
    },
    "OfferClassListResponse": {
      "id": "OfferClassListResponse",
      "properties": {
        "pagination": {
          "$ref": "Pagination",
          "description": "Pagination of the response."
        },
        "resources": {
          "description": "Resources corresponding to the list request.",
          "items": {
            "$ref": "OfferClass"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "OfferObject": {
      "id": "OfferObject",
      "properties": {
        "appLinkData": {
          "$ref": "AppLinkData",
          "description": "Optional information about the partner app link."
        },
        "barcode": {
          "$ref": "Barcode",
          "description": "The barcode type and value."
        },
        "classId": {
          "description": "Required. The class associated with this object. The class must be of the same type\nas this object, must already exist, and must be approved.\n\nClass IDs should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you.",
          "type": "string"
        },
        "classReference": {
          "$ref": "OfferClass",
          "description": "A copy of the inherited fields of the parent class. These fields are\nretrieved during a GET."
        },
        "disableExpirationNotification": {
          "description": "Indicates if notifications should explicitly be suppressed. If this field\nis set to true, regardless of the `messages` field, expiration\nnotifications to the user will be suppressed. By default, this field is set\nto false.\n\nCurrently, this can only be set for offers.",
          "type": "boolean"
        },
        "hasLinkedDevice": {
          "description": "Whether this object is currently linked to a single device. This field is\nset by the platform when a user saves the object, linking it to their\ndevice. Intended for use by select partners. Contact support for\nadditional information.",
          "type": "boolean"
        },
        "hasUsers": {
          "description": "Indicates if the object has users. This field is set by the platform.",
          "type": "boolean"
        },
        "id": {
          "description": "Required. The unique identifier for an object. This ID must be unique across all\nobjects from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. The unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
          "type": "string"
        },
        "imageModulesData": {
          "description": "Image module data. The maximum number of these fields displayed is 1 from\nobject level and 1 for class object level.",
          "items": {
            "$ref": "ImageModuleData"
          },
          "type": "array"
        },
        "infoModuleData": {
          "$ref": "InfoModuleData",
          "description": "Deprecated. Use textModulesData instead."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n`\"walletobjects#offerObject\"`.",
          "type": "string"
        },
        "linksModuleData": {
          "$ref": "LinksModuleData",
          "description": "Links module data. If links module data is also defined on the class, both\nwill be displayed."
        },
        "locations": {
          "description": "The list of locations where the object can be used. The platform uses this\ninformation to trigger geolocated notifications to users. Note that\nlocations in the object override locations in the class which override\nlocations in the Google Places ID.",
          "items": {
            "$ref": "LatLongPoint"
          },
          "type": "array"
        },
        "messages": {
          "description": "An array of messages displayed in the app. All users of this object will\nreceive its associated messages. The maximum number of these fields is 10.",
          "items": {
            "$ref": "Message"
          },
          "type": "array"
        },
        "smartTapRedemptionValue": {
          "description": "Available only to Smart Tap enabled partners. Contact support for\nadditional guidance.",
          "type": "string"
        },
        "state": {
          "description": "Required. The state of the object. This field is used to determine how an object is\ndisplayed in the app. For example, an `inactive` object is no\nlonger displayed in the Google Pay app.",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "active",
            "COMPLETED",
            "completed",
            "EXPIRED",
            "expired",
            "INACTIVE",
            "inactive"
          ],
          "enumDescriptions": [
            "",
            "Object is active and displayed to with other active objects.",
            "Legacy alias for `ACTIVE`.  Deprecated.",
            "",
            "Legacy alias for `COMPLETED`.  Deprecated.",
            "Object is no longer valid (`validTimeInterval` passed).",
            "Legacy alias for `EXPIRED`.  Deprecated.",
            "",
            "Legacy alias for `INACTIVE`.  Deprecated."
          ],
          "type": "string"
        },
        "textModulesData": {
          "description": "Text module data. If text module data is also defined on the class, both\nwill be displayed. The maximum number of these fields displayed is 10 from\nthe object and 10 from the class.",
          "items": {
            "$ref": "TextModuleData"
          },
          "type": "array"
        },
        "validTimeInterval": {
          "$ref": "TimeInterval",
          "description": "The time period this object will be `active` and object can be\nused. An object's state will be changed to `expired` when this\ntime period has passed."
        },
        "version": {
          "description": "Deprecated",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OfferObjectAddMessageResponse": {
      "id": "OfferObjectAddMessageResponse",
      "properties": {
        "resource": {
          "$ref": "OfferObject",
          "description": "The updated OfferObject resource."
        }
      },
      "type": "object"
    },
    "OfferObjectListResponse": {
      "id": "OfferObjectListResponse",
      "properties": {
        "pagination": {
          "$ref": "Pagination",
          "description": "Pagination of the response."
        },
        "resources": {
          "description": "Resources corresponding to the list request.",
          "items": {
            "$ref": "OfferObject"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Pagination": {
      "id": "Pagination",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n`\"walletobjects#pagination\"`.",
          "type": "string"
        },
        "nextPageToken": {
          "description": "Page token to send to fetch the next page.",
          "type": "string"
        },
        "resultsPerPage": {
          "description": "Number of results returned in this page.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Permission": {
      "id": "Permission",
      "properties": {
        "emailAddress": {
          "description": "The email address of the user, group, or service account to which this\npermission refers to.",
          "type": "string"
        },
        "role": {
          "description": "The role granted by this permission.",
          "enum": [
            "ROLE_UNSPECIFIED",
            "OWNER",
            "owner",
            "READER",
            "reader",
            "WRITER",
            "writer"
          ],
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `OWNER`.  Deprecated.",
            "",
            "Legacy alias for `READER`.  Deprecated.",
            "",
            "Legacy alias for `WRITER`.  Deprecated."
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "Permissions": {
      "id": "Permissions",
      "properties": {
        "issuerId": {
          "description": "ID of the issuer the list of permissions refer to.",
          "format": "int64",
          "type": "string"
        },
        "permissions": {
          "description": "The complete list of permissions for the issuer account.",
          "items": {
            "$ref": "Permission"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "PurchaseDetails": {
      "id": "PurchaseDetails",
      "properties": {
        "accountId": {
          "description": "ID of the account used to purchase the ticket.",
          "type": "string"
        },
        "confirmationCode": {
          "description": "The confirmation code for the purchase. This may be the same for multiple\ndifferent tickets and is used to group tickets together.",
          "type": "string"
        },
        "purchaseDateTime": {
          "description": "The purchase date/time of the ticket.\n\nThis is an ISO 8601 extended format date/time, with or without an offset.\nTime may be specified up to nanosecond precision. Offsets may be specified\nwith seconds precision (even though offset seconds is not part of ISO\n8601).\n\nFor example:\n\n`1985-04-12T23:20:50.52Z` would be 20 minutes and 50.52 seconds\nafter the 23rd hour of April 12th, 1985 in UTC.\n\n`1985-04-12T19:20:50.52-04:00` would be 20 minutes and 50.52\nseconds after the 19th hour of April 12th, 1985, 4 hours before UTC (same\ninstant in time as the above example). If the event were in New York, this\nwould be the equivalent of Eastern Daylight Time (EDT). Remember that\noffset varies in regions that observe Daylight Saving Time (or Summer\nTime), depending on the time of the year.\n\n`1985-04-12T19:20:50.52` would be 20 minutes and 50.52 seconds\nafter the 19th hour of April 12th, 1985 with no offset information.\n\nWithout offset information, some rich features may not be available.",
          "type": "string"
        },
        "purchaseReceiptNumber": {
          "description": "Receipt number/identifier for tracking the ticket purchase via the body\nthat sold the ticket.",
          "type": "string"
        },
        "ticketCost": {
          "$ref": "TicketCost",
          "description": "The cost of the ticket."
        }
      },
      "type": "object"
    },
    "ReservationInfo": {
      "id": "ReservationInfo",
      "properties": {
        "confirmationCode": {
          "description": "Confirmation code needed to check into this flight.\n\nThis is the number that the passenger would enter into a kiosk at the\nairport to look up the flight and print a boarding pass.",
          "type": "string"
        },
        "eticketNumber": {
          "description": "E-ticket number.",
          "type": "string"
        },
        "frequentFlyerInfo": {
          "$ref": "FrequentFlyerInfo",
          "description": "Frequent flyer membership information."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n`\"walletobjects#reservationInfo\"`.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Resources": {
      "id": "Resources",
      "properties": {
        "eventTicketClasses": {
          "items": {
            "$ref": "EventTicketClass"
          },
          "type": "array"
        },
        "eventTicketObjects": {
          "items": {
            "$ref": "EventTicketObject"
          },
          "type": "array"
        },
        "flightClasses": {
          "items": {
            "$ref": "FlightClass"
          },
          "type": "array"
        },
        "flightObjects": {
          "items": {
            "$ref": "FlightObject"
          },
          "type": "array"
        },
        "giftCardClasses": {
          "items": {
            "$ref": "GiftCardClass"
          },
          "type": "array"
        },
        "giftCardObjects": {
          "items": {
            "$ref": "GiftCardObject"
          },
          "type": "array"
        },
        "loyaltyClasses": {
          "items": {
            "$ref": "LoyaltyClass"
          },
          "type": "array"
        },
        "loyaltyObjects": {
          "items": {
            "$ref": "LoyaltyObject"
          },
          "type": "array"
        },
        "offerClasses": {
          "items": {
            "$ref": "OfferClass"
          },
          "type": "array"
        },
        "offerObjects": {
          "items": {
            "$ref": "OfferObject"
          },
          "type": "array"
        },
        "transitClasses": {
          "items": {
            "$ref": "TransitClass"
          },
          "type": "array"
        },
        "transitObjects": {
          "items": {
            "$ref": "TransitObject"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Review": {
      "id": "Review",
      "properties": {
        "comments": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "SignUpInfo": {
      "id": "SignUpInfo",
      "properties": {
        "classId": {
          "description": "ID of the class the user can sign up for.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SmartTap": {
      "id": "SmartTap",
      "properties": {
        "id": {
          "description": "The unique identifier for a smart tap. This value should follow the format\n<var>issuer ID</var>.<var>identifier</var> where the former is issued by\nGoogle and latter is the Smart Tap id. The Smart Tap id is a Base64 encoded\nstring which represents the id which was generated by the Google Pay app.",
          "type": "string"
        },
        "infos": {
          "description": "Communication from merchant to user.",
          "items": {
            "$ref": "IssuerToUserInfo"
          },
          "type": "array"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n`\"walletobjects#smartTap\"`.",
          "type": "string"
        },
        "merchantId": {
          "description": "Smart Tap merchant ID of who engaged in the Smart Tap interaction.",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SmartTapMerchantData": {
      "id": "SmartTapMerchantData",
      "properties": {
        "authenticationKeys": {
          "description": "Available only to Smart Tap enabled partners.  Contact support for\nadditional guidance.",
          "items": {
            "$ref": "AuthenticationKey"
          },
          "type": "array"
        },
        "smartTapMerchantId": {
          "description": "Available only to Smart Tap enabled partners.  Contact support for\nadditional guidance.",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TemplateItem": {
      "id": "TemplateItem",
      "properties": {
        "firstValue": {
          "$ref": "FieldSelector",
          "description": "A reference to a field to display. If both `firstValue` and\n`secondValue` are populated, they will both appear as one item\nwith a slash between them. For example, values A and B would be shown as\n\"A / B\"."
        },
        "predefinedItem": {
          "description": "A predefined item to display. Only one of `firstValue` or\n`predefinedItem` may be set.",
          "enum": [
            "PREDEFINED_ITEM_UNSPECIFIED",
            "FREQUENT_FLYER_PROGRAM_NAME_AND_NUMBER",
            "frequentFlyerProgramNameAndNumber",
            "FLIGHT_NUMBER_AND_OPERATING_FLIGHT_NUMBER",
            "flightNumberAndOperatingFlightNumber"
          ],
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `FREQUENT_FLYER_PROGRAM_NAME_AND_NUMBER`.\nDeprecated.",
            "",
            "Legacy alias for `FLIGHT_NUMBER_AND_OPERATING_FLIGHT_NUMBER`.\nDeprecated."
          ],
          "type": "string"
        },
        "secondValue": {
          "$ref": "FieldSelector",
          "description": "A reference to a field to display. This may only be populated if the\n`firstValue` field is populated."
        }
      },
      "type": "object"
    },
    "TextModuleData": {
      "description": "Data for Text module. All fields are optional. Header will be displayed if\navailable, different types of bodies will be concatenated if they are\ndefined.",
      "id": "TextModuleData",
      "properties": {
        "body": {
          "description": "The body of the Text Module, which is defined as an uninterrupted string.\nRecommended maximum length is 500 characters to ensure full string is\ndisplayed on smaller screens.",
          "type": "string"
        },
        "header": {
          "description": "The header of the Text Module. Recommended maximum length is 35 characters\nto ensure full string is displayed on smaller screens.",
          "type": "string"
        },
        "id": {
          "description": "The ID associated with a text module. This field is here to enable ease of\nmanagement of text modules.",
          "type": "string"
        },
        "localizedBody": {
          "$ref": "LocalizedString",
          "description": "Translated strings for the body. Recommended maximum length is 500\ncharacters to ensure full string is displayed on smaller screens."
        },
        "localizedHeader": {
          "$ref": "LocalizedString",
          "description": "Translated strings for the header. Recommended maximum length is 35\ncharacters to ensure full string is displayed on smaller screens."
        }
      },
      "type": "object"
    },
    "TicketCost": {
      "id": "TicketCost",
      "properties": {
        "discountMessage": {
          "$ref": "LocalizedString",
          "description": "A message describing any kind of discount that was applied."
        },
        "faceValue": {
          "$ref": "Money",
          "description": "The face value of the ticket."
        },
        "purchasePrice": {
          "$ref": "Money",
          "description": "The actual purchase price of the ticket, after tax and/or discounts."
        }
      },
      "type": "object"
    },
    "TicketLeg": {
      "id": "TicketLeg",
      "properties": {
        "arrivalDateTime": {
          "description": "The date/time of arrival.\n\nThis is an ISO 8601 extended format date/time, with or without an offset.\nTime may be specified up to nanosecond precision. Offsets may be specified\nwith seconds precision (even though offset seconds is not part of ISO\n8601).\n\nFor example:\n\n`1985-04-12T23:20:50.52Z` would be 20 minutes and 50.52 seconds\nafter the 23rd hour of April 12th, 1985 in UTC.\n\n`1985-04-12T19:20:50.52-04:00` would be 20 minutes and 50.52\nseconds after the 19th hour of April 12th, 1985, 4 hours before UTC (same\ninstant in time as the above example). If the event were in New York, this\nwould be the equivalent of Eastern Daylight Time (EDT). Remember that\noffset varies in regions that observe Daylight Saving Time (or Summer\nTime), depending on the time of the year.\n\n`1985-04-12T19:20:50.52` would be 20 minutes and 50.52 seconds\nafter the 19th hour of April 12th, 1985 with no offset information.\n\nThe portion of the date/time without the offset is considered the \"local\ndate/time\". This should be the local date/time at the destination station.\nFor example, if the event occurs at the 20th hour of June 5th, 2018 at the\ndestination station, the local date/time portion should be\n`2018-06-05T20:00:00`. If the local date/time at the destination\nstation is 4 hours before UTC, an offset of `-04:00` may be\nappended.\n\nWithout offset information, some rich features may not be available.",
          "type": "string"
        },
        "carriage": {
          "description": "The train or ship name/number that the passsenger needs to board.",
          "type": "string"
        },
        "departureDateTime": {
          "description": "The date/time of departure. This is required if there is no validity time\ninterval set on the transit object.\n\nThis is an ISO 8601 extended format date/time, with or without an offset.\nTime may be specified up to nanosecond precision. Offsets may be specified\nwith seconds precision (even though offset seconds is not part of ISO\n8601).\n\nFor example:\n\n`1985-04-12T23:20:50.52Z` would be 20 minutes and 50.52 seconds\nafter the 23rd hour of April 12th, 1985 in UTC.\n\n`1985-04-12T19:20:50.52-04:00` would be 20 minutes and 50.52\nseconds after the 19th hour of April 12th, 1985, 4 hours before UTC (same\ninstant in time as the above example). If the event were in New York, this\nwould be the equivalent of Eastern Daylight Time (EDT). Remember that\noffset varies in regions that observe Daylight Saving Time (or Summer\nTime), depending on the time of the year.\n\n`1985-04-12T19:20:50.52` would be 20 minutes and 50.52 seconds\nafter the 19th hour of April 12th, 1985 with no offset information.\n\nThe portion of the date/time without the offset is considered the \"local\ndate/time\". This should be the local date/time at the origin station.\nFor example, if the departure occurs at the 20th hour of June 5th, 2018 at\nthe origin station, the local date/time portion should be\n`2018-06-05T20:00:00`. If the local date/time at the origin\nstation is 4 hours before UTC, an offset of `-04:00` may be\nappended.\n\nWithout offset information, some rich features may not be available.",
          "type": "string"
        },
        "destinationName": {
          "$ref": "LocalizedString",
          "description": "The destination name."
        },
        "destinationStationCode": {
          "description": "The destination station code.",
          "type": "string"
        },
        "fareName": {
          "$ref": "LocalizedString",
          "description": "Short description/name of the fare for this leg of travel. Eg \"Anytime\nSingle Use\"."
        },
        "originName": {
          "$ref": "LocalizedString",
          "description": "The name of the origin station. This is required if\n`desinationName` is present or if\n`originStationCode` is not present."
        },
        "originStationCode": {
          "description": "The origin station code. This is required if\n`destinationStationCode` is present or if\n`originName` is not present.",
          "type": "string"
        },
        "platform": {
          "description": "The platform or gate where the passenger can board the carriage.",
          "type": "string"
        },
        "ticketSeat": {
          "$ref": "TicketSeat",
          "description": "The reserved seat for the passenger(s). If more than one seat is to be\nspecified then use the `ticketSeats` field instead. Both\n`ticketSeat` and `ticketSeats` may not be set."
        },
        "ticketSeats": {
          "description": "The reserved seat for the passenger(s). If only one seat is to be specified\nthen use the `ticketSeat` field instead. Both\n`ticketSeat` and `ticketSeats` may not be set.",
          "items": {
            "$ref": "TicketSeat"
          },
          "type": "array"
        },
        "transitOperatorName": {
          "$ref": "LocalizedString",
          "description": "The name of the transit operator that is operating this leg of a trip."
        },
        "transitTerminusName": {
          "$ref": "LocalizedString",
          "description": "Terminus station or destination of the train/bus/etc."
        },
        "zone": {
          "description": "The zone of boarding within the platform.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TicketRestrictions": {
      "id": "TicketRestrictions",
      "properties": {
        "otherRestrictions": {
          "$ref": "LocalizedString",
          "description": "Extra restrictions that don't fall under the \"route\" or \"time\" categories."
        },
        "routeRestrictions": {
          "$ref": "LocalizedString",
          "description": "Restrictions about routes that may be taken. For example, this may be the\nstring \"Reserved CrossCountry trains only\"."
        },
        "routeRestrictionsDetails": {
          "$ref": "LocalizedString",
          "description": "More details about the above `routeRestrictions`."
        },
        "timeRestrictions": {
          "$ref": "LocalizedString",
          "description": "Restrictions about times this ticket may be used."
        }
      },
      "type": "object"
    },
    "TicketSeat": {
      "id": "TicketSeat",
      "properties": {
        "coach": {
          "description": "The identifier of the train car or coach in which the ticketed seat is\nlocated. Eg. \"10\"",
          "type": "string"
        },
        "customFareClass": {
          "$ref": "LocalizedString",
          "description": "A custome fare class to be used if no `fareClass` applies. Both\n`fareClass` and `customFareClass`\nmay not be set."
        },
        "fareClass": {
          "description": "The fare class of the ticketed seat.",
          "enum": [
            "FARE_CLASS_UNSPECIFIED",
            "ECONOMY",
            "economy",
            "FIRST",
            "first",
            "BUSINESS",
            "business"
          ],
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `ECONOMY`.  Deprecated.",
            "",
            "Legacy alias for `FIRST`.  Deprecated.",
            "",
            "Legacy alias for `BUSINESS`.  Deprecated."
          ],
          "type": "string"
        },
        "seat": {
          "description": "The identifier of where the ticketed seat is located. Eg. \"42\". If there\nis no specific identifier, use `seatAssigment` instead.",
          "type": "string"
        },
        "seatAssignment": {
          "$ref": "LocalizedString",
          "description": "The passenger's seat assignment. Eg. \"no specific seat\". To be used when\nthere is no specific identifier to use in `seat`."
        }
      },
      "type": "object"
    },
    "TimeInterval": {
      "id": "TimeInterval",
      "properties": {
        "end": {
          "$ref": "DateTime",
          "description": "End time of the interval.\n\nOffset is not required.  If an offset is provided and `start`\ntime is set, `start` must also include an offset."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n`\"walletobjects#timeInterval\"`.",
          "type": "string"
        },
        "start": {
          "$ref": "DateTime",
          "description": "Start time of the interval.\n\nOffset is not required. If an offset is provided and `end` time\nis set, `end` must also  include an offset."
        }
      },
      "type": "object"
    },
    "TransitClass": {
      "id": "TransitClass",
      "properties": {
        "allowMultipleUsersPerObject": {
          "description": "Deprecated. Use `multipleDevicesAndHoldersAllowedStatus`\ninstead.",
          "type": "boolean"
        },
        "callbackOptions": {
          "$ref": "CallbackOptions",
          "description": "Callback options to be used to call the issuer back for every save/delete\nof an object for this class by the end-user.\nAll objects of this class are eligible for the callback."
        },
        "classTemplateInfo": {
          "$ref": "ClassTemplateInfo",
          "description": "Template information about how the class should be displayed.\nIf unset, Google will fallback to a default set of fields to display."
        },
        "countryCode": {
          "description": "Country code used to display the card's country (when the user is not in\nthat country), as well as to display localized content when content is not\navailable in the user's locale.",
          "type": "string"
        },
        "customCarriageLabel": {
          "$ref": "LocalizedString",
          "description": "A custom label to use for the carriage value\n(`transitObject.ticketLeg.carriage`)."
        },
        "customCoachLabel": {
          "$ref": "LocalizedString",
          "description": "A custom label to use for the coach value\n(`transitObject.ticketLeg.ticketSeat.coach`)."
        },
        "customConcessionCategoryLabel": {
          "$ref": "LocalizedString",
          "description": "A custom label to use for the transit concession category value\n(`transitObject.concessionCategory`)."
        },
        "customConfirmationCodeLabel": {
          "$ref": "LocalizedString",
          "description": "A custom label to use for the confirmation code value\n(`transitObject.purchaseDetails.confirmationCode`)."
        },
        "customDiscountMessageLabel": {
          "$ref": "LocalizedString",
          "description": "A custom label to use for the transit discount message value\n(`transitObject.purchaseDetails.ticketCost.discountMessage`)."
        },
        "customFareClassLabel": {
          "$ref": "LocalizedString",
          "description": "A custom label to use for the fare class value\n(`transitObject.ticketLeg.ticketSeat.fareClass`)."
        },
        "customFareNameLabel": {
          "$ref": "LocalizedString",
          "description": "A custom label to use for the transit fare name value\n(`transitObject.ticketLeg.fareName`)."
        },
        "customOtherRestrictionsLabel": {
          "$ref": "LocalizedString",
          "description": "A custom label to use for the other restrictions value\n(`transitObject.ticketRestrictions.otherRestrictions`)."
        },
        "customPlatformLabel": {
          "$ref": "LocalizedString",
          "description": "A custom label to use for the boarding platform value\n(`transitObject.ticketLeg.platform`)."
        },
        "customPurchaseFaceValueLabel": {
          "$ref": "LocalizedString",
          "description": "A custom label to use for the purchase face value\n(`transitObject.purchaseDetails.ticketCost.faceValue`)."
        },
        "customPurchasePriceLabel": {
          "$ref": "LocalizedString",
          "description": "A custom label to use for the purchase price value\n(`transitObject.purchaseDetails.ticketCost.purchasePrice`)."
        },
        "customPurchaseReceiptNumberLabel": {
          "$ref": "LocalizedString",
          "description": "A custom label to use for the purchase receipt number value\n(`transitObject.purchaseDetails.purchaseReceiptNumber`)."
        },
        "customRouteRestrictionsDetailsLabel": {
          "$ref": "LocalizedString",
          "description": "A custom label to use for the route restrictions details value\n(`transitObject.ticketRestrictions.routeRestrictionsDetails`)."
        },
        "customRouteRestrictionsLabel": {
          "$ref": "LocalizedString",
          "description": "A custom label to use for the route restrictions value\n(`transitObject.ticketRestrictions.routeRestrictions`)."
        },
        "customSeatLabel": {
          "$ref": "LocalizedString",
          "description": "A custom label to use for the seat location value\n(`transitObject.ticketLeg.ticketSeat.seat`)."
        },
        "customTicketNumberLabel": {
          "$ref": "LocalizedString",
          "description": "A custom label to use for the ticket number value\n(`transitObject.ticketNumber`)."
        },
        "customTimeRestrictionsLabel": {
          "$ref": "LocalizedString",
          "description": "A custom label to use for the time restrictions details value\n(`transitObject.ticketRestrictions.timeRestrictions`)."
        },
        "customTransitTerminusNameLabel": {
          "$ref": "LocalizedString",
          "description": "A custom label to use for the transit terminus name value\n(`transitObject.ticketLeg.transitTerminusName`)."
        },
        "customZoneLabel": {
          "$ref": "LocalizedString",
          "description": "A custom label to use for the boarding zone value\n(`transitObject.ticketLeg.zone`)."
        },
        "enableSingleLegItinerary": {
          "description": "Controls the display of the single-leg itinerary for this class. By\ndefault, an itinerary will only display for multi-leg trips.",
          "type": "boolean"
        },
        "enableSmartTap": {
          "description": "Available only to Smart Tap enabled partners.  Contact support for\nadditional guidance.",
          "type": "boolean"
        },
        "heroImage": {
          "$ref": "Image",
          "description": "Optional banner image displayed on the front of the card. If none is\npresent, nothing will be displayed. The image will display at 100% width."
        },
        "hexBackgroundColor": {
          "description": "The background color for the card. If not set the dominant color of the\nhero image is used, and if no hero image is set, the dominant color of the\nlogo is used. The format is #<var>rrggbb</var> where <var>rrggbb</var> is a\nhex RGB triplet, such as `#ffcc00`. You can also use the\nshorthand version of the RGB triplet which is #<var>rgb</var>, such as\n`#fc0`.",
          "type": "string"
        },
        "homepageUri": {
          "$ref": "Uri",
          "description": "The URI of your application's home page. Populating the URI in this field\nresults in the exact same behavior as populating an URI in linksModuleData\n(when an object is rendered, a link to the homepage is shown in what would\nusually be thought of as the linksModuleData section of the object)."
        },
        "id": {
          "description": "Required. The unique identifier for a class. This ID must be unique across all\nclasses from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. Your unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
          "type": "string"
        },
        "imageModulesData": {
          "description": "Image module data. The maximum number of these fields displayed is 1 from\nobject level and 1 for class object level.",
          "items": {
            "$ref": "ImageModuleData"
          },
          "type": "array"
        },
        "infoModuleData": {
          "$ref": "InfoModuleData",
          "description": "Deprecated. Use textModulesData instead."
        },
        "issuerName": {
          "description": "Required. The issuer name. Recommended maximum length is 20 characters to ensure full\nstring is displayed on smaller screens.",
          "type": "string"
        },
        "languageOverride": {
          "description": "If this field is present, transit tickets served to a user's device will\nalways be in this language. Represents the BCP 47 language tag. Example\nvalues are \"en-US\", \"en-GB\", \"de\", or \"de-AT\".",
          "type": "string"
        },
        "linksModuleData": {
          "$ref": "LinksModuleData",
          "description": "Links module data. If links module data is also defined on the object, both\nwill be displayed."
        },
        "localizedIssuerName": {
          "$ref": "LocalizedString",
          "description": "Translated strings for the issuer_name. Recommended maximum length is 20\ncharacters to ensure full string is displayed on smaller screens."
        },
        "locations": {
          "items": {
            "$ref": "LatLongPoint"
          },
          "type": "array"
        },
        "logo": {
          "$ref": "Image",
          "description": "Required. The logo image of the ticket. This image is displayed in the card detail\nview of the app."
        },
        "messages": {
          "description": "An array of messages displayed in the app. All users of this object will\nreceive its associated messages. The maximum number of these fields is 10.",
          "items": {
            "$ref": "Message"
          },
          "type": "array"
        },
        "multipleDevicesAndHoldersAllowedStatus": {
          "description": "Identifies whether multiple users and devices will save the same object\nreferencing this class.",
          "enum": [
            "STATUS_UNSPECIFIED",
            "MULTIPLE_HOLDERS",
            "multipleHolders",
            "ONE_USER_ALL_DEVICES",
            "oneUserAllDevices",
            "ONE_USER_ONE_DEVICE",
            "oneUserOneDevice"
          ],
          "enumDescriptions": [
            "",
            "Multiple users on multiple devices are allowed.",
            "Legacy alias for `MULTIPLE_HOLDERS`.  Deprecated.",
            "One user on multiple devices is allowed.",
            "Legacy alias for `ONE_USER_ALL_DEVICES`.  Deprecated.",
            "Intended for use by select partners in limited circumstances. Contact\nsupport for additional information.",
            "Legacy alias for `ONE_USER_ONE_DEVICE`.  Deprecated."
          ],
          "type": "string"
        },
        "redemptionIssuers": {
          "description": "Available only to Smart Tap enabled partners. Contact support for\nadditional guidance.",
          "items": {
            "format": "int64",
            "type": "string"
          },
          "type": "array"
        },
        "review": {
          "$ref": "Review",
          "description": "The review comments set by the platform when a class is marked\n`approved` or `rejected`."
        },
        "reviewStatus": {
          "description": "Required. The status of the class. This field can be set to `draft`\nor `underReview` using the insert, patch, or update API calls.\nOnce the review state is changed from `draft` it may not be\nchanged back to `draft`.\n\nYou should keep this field to `draft` when the class is under\ndevelopment. A `draft` class cannot be used to create any\nobject.\n\nYou should set this field to `underReview` when you\nbelieve the class is ready for use. The platform will automatically set\nthis field to `approved` and it can be immediately used to\ncreate or migrate objects.\n\nWhen updating an already `approved` class you should keep\nsetting this field to `underReview`.",
          "enum": [
            "REVIEW_STATUS_UNSPECIFIED",
            "UNDER_REVIEW",
            "underReview",
            "APPROVED",
            "approved",
            "REJECTED",
            "rejected",
            "DRAFT",
            "draft"
          ],
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `UNDER_REVIEW`.  Deprecated.",
            "",
            "Legacy alias for `APPROVED`.  Deprecated.",
            "",
            "Legacy alias for `REJECTED`.  Deprecated.",
            "",
            "Legacy alias for `DRAFT`.  Deprecated."
          ],
          "type": "string"
        },
        "textModulesData": {
          "description": "Text module data. If text module data is also defined on the class, both\nwill be displayed. The maximum number of these fields displayed is 10 from\nthe object and 10 from the class.",
          "items": {
            "$ref": "TextModuleData"
          },
          "type": "array"
        },
        "transitOperatorName": {
          "$ref": "LocalizedString",
          "description": "The name of the transit operator."
        },
        "transitType": {
          "description": "Required. The type of transit this class represents, such as \"bus\".",
          "enum": [
            "TRANSIT_TYPE_UNSPECIFIED",
            "BUS",
            "bus",
            "RAIL",
            "rail",
            "TRAM",
            "tram",
            "FERRY",
            "ferry",
            "OTHER",
            "other"
          ],
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `BUS`.  Deprecated.",
            "",
            "Legacy alias for `RAIL`.  Deprecated.",
            "",
            "Legacy alias for `TRAM`.  Deprecated.",
            "",
            "Legacy alias for `FERRY`.  Deprecated.",
            "",
            "Legacy alias for `OTHER`.  Deprecated."
          ],
          "type": "string"
        },
        "version": {
          "description": "Deprecated",
          "format": "int64",
          "type": "string"
        },
        "watermark": {
          "$ref": "Image",
          "description": "Watermark image to display on the user's device."
        },
        "wordMark": {
          "$ref": "Image",
          "description": "Deprecated."
        }
      },
      "type": "object"
    },
    "TransitClassAddMessageResponse": {
      "id": "TransitClassAddMessageResponse",
      "properties": {
        "resource": {
          "$ref": "TransitClass",
          "description": "The updated TransitClass resource."
        }
      },
      "type": "object"
    },
    "TransitClassListResponse": {
      "id": "TransitClassListResponse",
      "properties": {
        "pagination": {
          "$ref": "Pagination",
          "description": "Pagination of the response."
        },
        "resources": {
          "description": "Resources corresponding to the list request.",
          "items": {
            "$ref": "TransitClass"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "TransitObject": {
      "id": "TransitObject",
      "properties": {
        "appLinkData": {
          "$ref": "AppLinkData",
          "description": "Optional information about the partner app link."
        },
        "barcode": {
          "$ref": "Barcode",
          "description": "The barcode type and value."
        },
        "classId": {
          "description": "Required. The class associated with this object. The class must be of the same type\nas this object, must already exist, and must be approved.\n\nClass IDs should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you.",
          "type": "string"
        },
        "classReference": {
          "$ref": "TransitClass",
          "description": "A copy of the inherited fields of the parent class. These fields are\nretrieved during a GET."
        },
        "concessionCategory": {
          "description": "The concession category for the ticket.",
          "enum": [
            "CONCESSION_CATEGORY_UNSPECIFIED",
            "ADULT",
            "adult",
            "CHILD",
            "child",
            "SENIOR",
            "senior"
          ],
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `ADULT`.  Deprecated.",
            "",
            "Legacy alias for `CHILD`.  Deprecated.",
            "",
            "Legacy alias for `SENIOR`.  Deprecated."
          ],
          "type": "string"
        },
        "customConcessionCategory": {
          "$ref": "LocalizedString",
          "description": "A custom concession category to use when `concessionCategory`\ndoes not provide the right option. Both `concessionCategory`\nand `customConcessionCategory` may not be set."
        },
        "customTicketStatus": {
          "$ref": "LocalizedString",
          "description": "A custom status to use for the ticket status value when\n`ticketStatus` does not provide the right option. Both\n`ticketStatus` and `customTicketStatus` may not be\nset."
        },
        "disableExpirationNotification": {
          "description": "Indicates if notifications should explicitly be suppressed. If this field\nis set to true, regardless of the `messages` field, expiration\nnotifications to the user will be suppressed. By default, this field is set\nto false.\n\nCurrently, this can only be set for offers.",
          "type": "boolean"
        },
        "hasLinkedDevice": {
          "description": "Whether this object is currently linked to a single device. This field is\nset by the platform when a user saves the object, linking it to their\ndevice. Intended for use by select partners. Contact support for\nadditional information.",
          "type": "boolean"
        },
        "hasUsers": {
          "description": "Indicates if the object has users. This field is set by the platform.",
          "type": "boolean"
        },
        "hexBackgroundColor": {
          "description": "The background color for the card. If not set the dominant color of the\nhero image is used, and if no hero image is set, the dominant color of the\nlogo is used. The format is #<var>rrggbb</var> where <var>rrggbb</var> is a\nhex RGB triplet, such as `#ffcc00`. You can also use the\nshorthand version of the RGB triplet which is #<var>rgb</var>, such as\n`#fc0`.",
          "type": "string"
        },
        "id": {
          "description": "Required. The unique identifier for an object. This ID must be unique across all\nobjects from an issuer. This value should follow the format <var>issuer\nID</var>.<var>identifier</var> where the former is issued by Google and\nlatter is chosen by you. The unique identifier should only include\nalphanumeric characters, '.', '_', or '-'.",
          "type": "string"
        },
        "imageModulesData": {
          "description": "Image module data. The maximum number of these fields displayed is 1 from\nobject level and 1 for class object level.",
          "items": {
            "$ref": "ImageModuleData"
          },
          "type": "array"
        },
        "infoModuleData": {
          "$ref": "InfoModuleData",
          "description": "Deprecated. Use textModulesData instead."
        },
        "linksModuleData": {
          "$ref": "LinksModuleData",
          "description": "Links module data. If links module data is also defined on the class, both\nwill be displayed."
        },
        "locations": {
          "description": "The list of locations where the object can be used. The platform uses this\ninformation to trigger geolocated notifications to users. Note that\nlocations in the object override locations in the class which override\nlocations in the Google Places ID.",
          "items": {
            "$ref": "LatLongPoint"
          },
          "type": "array"
        },
        "messages": {
          "description": "An array of messages displayed in the app. All users of this object will\nreceive its associated messages. The maximum number of these fields is 10.",
          "items": {
            "$ref": "Message"
          },
          "type": "array"
        },
        "passengerNames": {
          "description": "The name(s) of the passengers the ticket is assigned to. The above\n`passengerType` field is meant to give Google context on this\nfield.",
          "type": "string"
        },
        "passengerType": {
          "description": "The number of passengers.",
          "enum": [
            "PASSENGER_TYPE_UNSPECIFIED",
            "SINGLE_PASSENGER",
            "singlePassenger",
            "MULTIPLE_PASSENGERS",
            "multiplePassengers"
          ],
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `SINGLE_PASSENGER`.  Deprecated.",
            "",
            "Legacy alias for `MULTIPLE_PASSENGERS`.  Deprecated."
          ],
          "type": "string"
        },
        "purchaseDetails": {
          "$ref": "PurchaseDetails",
          "description": "Purchase details for this ticket."
        },
        "smartTapRedemptionValue": {
          "description": "Available only to Smart Tap enabled partners. Contact support for\nadditional guidance.",
          "type": "string"
        },
        "state": {
          "description": "Required. The state of the object. This field is used to determine how an object is\ndisplayed in the app. For example, an `inactive` object is no\nlonger displayed in the Google Pay app.",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "active",
            "COMPLETED",
            "completed",
            "EXPIRED",
            "expired",
            "INACTIVE",
            "inactive"
          ],
          "enumDescriptions": [
            "",
            "Object is active and displayed to with other active objects.",
            "Legacy alias for `ACTIVE`.  Deprecated.",
            "",
            "Legacy alias for `COMPLETED`.  Deprecated.",
            "Object is no longer valid (`validTimeInterval` passed).",
            "Legacy alias for `EXPIRED`.  Deprecated.",
            "",
            "Legacy alias for `INACTIVE`.  Deprecated."
          ],
          "type": "string"
        },
        "textModulesData": {
          "description": "Text module data. If text module data is also defined on the class, both\nwill be displayed. The maximum number of these fields displayed is 10 from\nthe object and 10 from the class.",
          "items": {
            "$ref": "TextModuleData"
          },
          "type": "array"
        },
        "ticketLeg": {
          "$ref": "TicketLeg",
          "description": "A single ticket leg contains departure and arrival information along with\nboarding and seating information. If more than one leg is to be specified\nthen use the `ticketLegs` field instead. Both\n`ticketLeg` and `ticketLegs` may not be set."
        },
        "ticketLegs": {
          "description": "Each ticket may contain one or more legs. Each leg contains departure and\narrival information along with boarding and seating information. If only\none leg is to be specified then use the `ticketLeg` field\ninstead. Both `ticketLeg` and `ticketLegs` may not\nbe set.",
          "items": {
            "$ref": "TicketLeg"
          },
          "type": "array"
        },
        "ticketNumber": {
          "description": "The number of the ticket. This is a unique identifier for the ticket in the\ntransit operator's system.",
          "type": "string"
        },
        "ticketRestrictions": {
          "$ref": "TicketRestrictions",
          "description": "Information about what kind of restrictions there are on using this ticket.\nFor example, which days of the week it must be used, or which routes are\nallowed to be taken."
        },
        "ticketStatus": {
          "description": "The status of the ticket. For states which affect display, use the\n`state` field instead.",
          "enum": [
            "TICKET_STATUS_UNSPECIFIED",
            "USED",
            "used",
            "REFUNDED",
            "refunded",
            "EXCHANGED",
            "exchanged"
          ],
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `USED`.  Deprecated.",
            "",
            "Legacy alias for `REFUNDED`.  Deprecated.",
            "",
            "Legacy alias for `EXCHANGED`.  Deprecated."
          ],
          "type": "string"
        },
        "tripId": {
          "description": "This id is used to group tickets together if the user has saved multiple\ntickets for the same trip.",
          "type": "string"
        },
        "tripType": {
          "description": "Required. The type of trip this transit object represents. Used to determine which\nsymbol to use between the origin and destination.",
          "enum": [
            "TRIP_TYPE_UNSPECIFIED",
            "ROUND_TRIP",
            "roundTrip",
            "ONE_WAY",
            "oneWay"
          ],
          "enumDescriptions": [
            "",
            "",
            "Legacy alias for `ROUND_TRIP`.  Deprecated.",
            "",
            "Legacy alias for `ONE_WAY`.  Deprecated."
          ],
          "type": "string"
        },
        "validTimeInterval": {
          "$ref": "TimeInterval",
          "description": "The time period this object will be `active` and object can be\nused. An object's state will be changed to `expired` when this\ntime period has passed."
        },
        "version": {
          "description": "Deprecated",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TransitObjectAddMessageResponse": {
      "id": "TransitObjectAddMessageResponse",
      "properties": {
        "resource": {
          "$ref": "TransitObject",
          "description": "The updated TransitObject resource."
        }
      },
      "type": "object"
    },
    "TransitObjectListResponse": {
      "id": "TransitObjectListResponse",
      "properties": {
        "pagination": {
          "$ref": "Pagination",
          "description": "Pagination of the response."
        },
        "resources": {
          "description": "Resources corresponding to the list request.",
          "items": {
            "$ref": "TransitObject"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "TranslatedString": {
      "id": "TranslatedString",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n`\"walletobjects#translatedString\"`.",
          "type": "string"
        },
        "language": {
          "description": "Represents the BCP 47 language tag. Example values are \"en-US\", \"en-GB\",\n\"de\", or \"de-AT\".",
          "type": "string"
        },
        "value": {
          "description": "The UTF-8 encoded translated string.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Uri": {
      "id": "Uri",
      "properties": {
        "description": {
          "description": "The URI's title appearing in the app as text. Recommended maximum is 20\ncharacters to ensure full string is displayed on smaller screens.\n\nNote that in some contexts this text is not used, such as when\n`description` is part of an image.",
          "type": "string"
        },
        "id": {
          "description": "The ID associated with a uri. This field is here to enable ease of\nmanagement of uris.",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n`\"walletobjects#uri\"`.",
          "type": "string"
        },
        "localizedDescription": {
          "$ref": "LocalizedString",
          "description": "Translated strings for the description. Recommended maximum is 20\ncharacters to ensure full string is displayed on smaller screens."
        },
        "uri": {
          "description": "The location of a web page, image, or other resource. URIs in the\n`LinksModuleData` module can have different prefixes indicating\nthe type of URI (a link to a web page, a link to a map, a telephone number,\nor an email address). URIs must have a scheme.",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "servicePath": "",
  "title": "Google Pay Passes API",
  "version": "v1"
}